diff --git a/CASES/AMMA/AMMA_20060710_setupI_driver_RR.nc b/CASES/AMMA/AMMA_20060710_setupI_driver_RR.nc
index b3a1b1a..8e9f3d4 100644
Binary files a/CASES/AMMA/AMMA_20060710_setupI_driver_RR.nc and b/CASES/AMMA/AMMA_20060710_setupI_driver_RR.nc differ
diff --git a/CASES/AMMA/convertDEPHY2.py b/CASES/AMMA/convertDEPHY2.py
index 8d64a01..2b180fe 100644
--- a/CASES/AMMA/convertDEPHY2.py
+++ b/CASES/AMMA/convertDEPHY2.py
@@ -2,7 +2,6 @@
 
 import cdms2 
 import MV2
-import cdtime
 
 cdms2.setNetcdfShuffleFlag(0)
 cdms2.setNetcdfDeflateFlag(0)
@@ -71,16 +70,7 @@ for var in varnames.keys():
   g.write(data[varnames[var]])
 
 var = 'ts'
-data[var] = data['hfss']*0. 
-f = cdms2.open('nimmetS1.b1.20060710.000000.cdf')
-time = data[var].getAxis(0)
-nt,nlat,nlon = data[var].shape
-for it in range(0,nt-1):
-    tt = cdtime.reltime(time[it],time.units)
-    data[var][it,0,0] = f('temp_mean', time = tt) + 273.15
-tt = cdtime.comptime(2006,7,10,0,0,0)
-data[var][nt-1,0,0] = f('temp_mean', time = tt) + 273.15
-f.close()
+data[var] = data['hfss']*0. + 320.
 data[var].id = var
 data[var].title = names[var]
 data[var].positive = ''
diff --git a/CASES/AMMA/nimmetM1.b1.20060710.000000.cdf b/CASES/AMMA/nimmetM1.b1.20060710.000000.cdf
deleted file mode 100644
index d6463d8..0000000
Binary files a/CASES/AMMA/nimmetM1.b1.20060710.000000.cdf and /dev/null differ
diff --git a/CASES/AMMA/nimmetM1.b1.20060711.000000.cdf b/CASES/AMMA/nimmetM1.b1.20060711.000000.cdf
deleted file mode 100644
index 79aa5e1..0000000
Binary files a/CASES/AMMA/nimmetM1.b1.20060711.000000.cdf and /dev/null differ
diff --git a/CASES/AMMA/nimmetS1.b1.20060710.000000.cdf b/CASES/AMMA/nimmetS1.b1.20060710.000000.cdf
deleted file mode 100644
index 75a1bff..0000000
Binary files a/CASES/AMMA/nimmetS1.b1.20060710.000000.cdf and /dev/null differ
diff --git a/CASES/AMMA/nimmetS1.b1.20060711.000000.cdf b/CASES/AMMA/nimmetS1.b1.20060711.000000.cdf
deleted file mode 100644
index e086185..0000000
Binary files a/CASES/AMMA/nimmetS1.b1.20060711.000000.cdf and /dev/null differ
diff --git a/CASES/ARMCu/ARMCu_driver_RR.nc b/CASES/ARMCu/ARMCu_driver_RR.nc
index 4989430..bd615a4 100644
Binary files a/CASES/ARMCu/ARMCu_driver_RR.nc and b/CASES/ARMCu/ARMCu_driver_RR.nc differ
diff --git a/CASES/ARMCu/ARMCu_driver_RR_new.nc b/CASES/ARMCu/ARMCu_driver_RR_new.nc
new file mode 100644
index 0000000..e1c72af
Binary files /dev/null and b/CASES/ARMCu/ARMCu_driver_RR_new.nc differ
diff --git a/CASES/ARMCu/convert_ARMcu.py b/CASES/ARMCu/convert_ARMcu.py
index 9b5b1b2..5b6b121 100644
--- a/CASES/ARMCu/convert_ARMcu.py
+++ b/CASES/ARMCu/convert_ARMcu.py
@@ -19,7 +19,9 @@ f.close()
 nt,nlev,nlat,nlon = data['thadv'].shape
 time = data['thadv'].getTime()
 lat = data['thadv'].getLatitude()
+lat.units = 'degrees_north'
 lon = data['thadv'].getLongitude()
+lon.units = 'degrees_east'
 
 lev = data['thadv'].getAxis(1)
 lev.designateLevel()
diff --git a/CASES/ARMCu/convert_new.py b/CASES/ARMCu/convert_new.py
new file mode 100644
index 0000000..33ef5fe
--- /dev/null
+++ b/CASES/ARMCu/convert_new.py
@@ -0,0 +1,150 @@
+import cdms2 
+import MV2
+import math
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+datain = {}
+
+f = cdms2.open('ARMCu_driver_RR.nc')
+for var in ['u','v','temp','qv','ug','vg','sfc_sens_flx','sfc_lat_flx','ts','ps','tadv','qadv','pressure']:
+  datain[var] = f(var)
+
+f.close()
+
+nt, nlev, nlat, nlon = datain['temp'].shape
+time = datain['temp'].getAxis(0)
+lev = datain['temp'].getAxis(1)
+lat = datain['temp'].getAxis(2)
+lon = datain['temp'].getAxis(3)
+
+t0 = MV2.array([0,],typecode=MV2.float)
+t0 = cdms2.createAxis(t0)
+t0.id = 't0'
+t0.units = 'seconds since 1997-06-21 11:30:0.0'
+t0.calendar = 'gregorian'
+
+time[:] = time[:] - time[0]
+time.units = 'seconds since 1997-06-21 11:30:0.0'
+del(time.realtopology)
+
+dataout = {}
+for var in ['u','v','temp','qv','pressure']:
+  dataout[var] = MV2.zeros((1,nlev,nlat,nlon),typecode=MV2.float)
+  dataout[var][0,:,0,0] = datain[var][0,:,0,0]
+  dataout[var].id = var
+  dataout[var].title = datain[var].title
+  dataout[var].units = datain[var].units
+  dataout[var].setAxis(0,t0)
+  dataout[var].setAxis(1,lev)
+  dataout[var].setAxis(2,lat)
+  dataout[var].setAxis(3,lon)
+
+var = 'height'
+dataout[var] = MV2.zeros((1,nlev,nlat,nlon),typecode=MV2.float)
+dataout[var][0,:,0,0] = lev[:]
+dataout[var].id = var
+dataout[var].title = 'Height above the surface'
+dataout[var].units = 'm'
+dataout[var].setAxis(0,t0)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+
+var = 'ql'
+dataout[var] = MV2.zeros((1,nlev,nlat,nlon),typecode=MV2.float)
+dataout[var].id = var
+dataout[var].title = 'Liquid water content'
+dataout[var].units = 'kg kg-1'
+dataout[var].setAxis(0,t0)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+
+var = 'qi'
+dataout[var] = MV2.zeros((1,nlev,nlat,nlon),typecode=MV2.float)
+dataout[var].id = var
+dataout[var].title = 'Ice water content'
+dataout[var].units = 'kg kg-1'
+dataout[var].setAxis(0,t0)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+
+var = 'tke'
+dataout[var] = MV2.zeros((1,nlev,nlat,nlon),typecode=MV2.float)
+dataout[var].id = var
+dataout[var].title = 'Turbulent kinetic energy'
+dataout[var].units = 'm2 s-2'
+dataout[var].setAxis(0,t0)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+
+
+
+for var in ['ug','vg','sfc_sens_flx','sfc_lat_flx','ts','ps','tadv']:
+    dataout[var] = datain[var]
+    dataout[var].setAxis(0,time)
+    try:
+      del(dataout[var].positive)
+    except:
+      pass
+
+var = 'qvadv'
+dataout[var] = datain['qadv']*1.
+dataout[var].id = var
+dataout[var].title = 'Specific humidity advection'
+dataout[var].units = 'kg kg-1 s-1'
+dataout[var].setAxis(0,time)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+ 
+var = 'pressure_forc'
+dataout[var] = datain['pressure']*1.
+dataout[var].id = var
+dataout[var].title = 'Pressure'
+dataout[var].units = 'Pa'
+dataout[var].setAxis(0,time)
+dataout[var].setAxis(1,lev)
+dataout[var].setAxis(2,lat)
+dataout[var].setAxis(3,lon)
+
+
+g = cdms2.open('ARMCu_driver_RR_new.nc','w')
+
+for var in dataout.keys():
+    g.write(dataout[var])
+
+g.comment = "Forcing and initial conditions for ARMCu case" 
+g.reference = "http://projects.knmi.nl/eurocs/ARM/case_ARM_html" 
+g.author = "M.-P. Lefebvre, R. Roehrig" 
+g.modifications = "2017-04-28: R. Roehrig - compute tadv + add ps + update forcing information\n\
+        2019-03-21: R. Roehrig - new DEPHY format" 
+g.case = "ARMCU/REF" 
+g.startDate = "19970621113000" 
+g.endDate = "19970622023000" 
+g.tadv = 1 
+g.tadvh = 0 
+g.tadvv = 0 
+g.trad = "adv"
+g.qvadv = 1 
+g.qvadvh = 0 
+g.qvadvv = 0 
+g.forc_omega = 0 
+g.forc_w = 0 
+g.forc_geo = 1 
+g.nudging_u = 0 
+g.nudging_v = 0 
+g.nudging_t = 0 
+g.nudging_q = 0 
+g.zorog = 0. 
+g.z0 = 0.035 
+g.surfaceType = "land" 
+g.surfaceForcing = "surfaceFlux" 
+g.surfaceForcingWind = "z0" 
+
+g.close()
diff --git a/CASES/AYOTTE/AYOTTE_A24SC_driver_FC_RR_us.nc b/CASES/AYOTTE/AYOTTE_A24SC_driver_FC_RR_us.nc
deleted file mode 100644
index 6de6a9d..0000000
Binary files a/CASES/AYOTTE/AYOTTE_A24SC_driver_FC_RR_us.nc and /dev/null differ
diff --git a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC.nc b/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC.nc
deleted file mode 100644
index 49e8635..0000000
Binary files a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC.nc and /dev/null differ
diff --git a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR.nc b/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR.nc
deleted file mode 100644
index 5943d45..0000000
Binary files a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR.nc and /dev/null differ
diff --git a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR_us.nc b/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR_us.nc
deleted file mode 100644
index 8c99c42..0000000
Binary files a/CASES/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR_us.nc and /dev/null differ
diff --git a/CASES/AYOTTE/README_FC b/CASES/AYOTTE/README_FC
deleted file mode 100644
index a1ff097..0000000
--- a/CASES/AYOTTE/README_FC
+++ /dev/null
@@ -1,5 +0,0 @@
-AYOTTE_A24SC_modif_driver_FC.nc: modification du profil de theta pour ne pas etre en neutre: 
-ncap2 -O -s th(0)=301.15;th(1)=301.1;th(2)=301.15; AYOTTE_A24SC_driver_FC.nc AYOTTE_A24SC_modif_driver_FC.nc
-
-AYOTTE_A24SC_driver_FC_RR_us_modif.nc: modification du global attribute
-ncatted -O -h -a surfaceForcingWind,global,o,c,"ustar" AYOTTE_A24SC_modif_driver_FC_RR_us.nc
diff --git a/CASES/AYOTTE/convert_AYOTTE_A24SC_FC.py b/CASES/AYOTTE/convert_AYOTTE_A24SC_FC.py
deleted file mode 100644
index d488cff..0000000
--- a/CASES/AYOTTE/convert_AYOTTE_A24SC_FC.py
+++ /dev/null
@@ -1,171 +0,0 @@
-import cdms2
-import MV2
-
-cdms2.setNetcdfShuffleFlag(0)
-cdms2.setNetcdfDeflateFlag(0)
-cdms2.setNetcdfDeflateLevelFlag(0)
-
-
-data = {}
-
-f = cdms2.open('AYOTTE_A24SC_modif_driver_FC.nc')
-for var in f.listvariables():
-  data[var] = f(var)    
-
-f.close()
-
-
-time = cdms2.createAxis(MV2.array([0.,3600*6],typecode=MV2.float32))
-time.designateTime()
-time.id = 'time'
-time.units = 'seconds since 2009-12-11 10:00:00'
-time.calendar = 'gregorian'
-
-lat = MV2.zeros(1,typecode=MV2.float32) + 45
-lat = cdms2.createAxis(lat)
-lat.designateLatitude()
-lat.id = 'lat'
-lat.units = 'degrees_north'
-
-lon = MV2.zeros(1,typecode=MV2.float32) + 123.33
-lon = cdms2.createAxis(lon)
-lon.designateLongitude()
-lon.id = 'lon'
-lon.units = 'degrees_east'
-
-#lev = [0,5,130,829,848,900,908,928,968,1000,1008,1048,1100,1388,1750,1787,2000,3000,4000]
-lev = range(0,5000,10)
-nlev = len(lev)
-lev = MV2.array(lev,typecode=MV2.float32)
-lev = cdms2.createAxis(lev)
-lev.designateLevel()
-lev.id = 'nlev'
-lev.units = 'm'
-lev.positive = 'up'
-
-
-variables0D = [] #['orog']
-variables2D = ['sfc_lat_flx','sfc_sens_flx','ps','ustar']
-variables3D = ['pressure','th','qv','temp','u','v','ug','vg']
-
-variables = variables3D + variables2D + variables0D
-
-units = {}
-units['pressure'] = 'Pa'
-units['th'] = 'K'
-units['qv'] = 'kg kg-1'
-units['temp'] = 'K'
-units['u'] = 'm s-1'
-units['v'] = 'm s-1'
-units['ug'] = 'm s-1'
-units['vg'] = 'm s-1'
-units['sfc_lat_flx'] = 'W m-2'
-units['sfc_sens_flx'] = 'W m-2'
-units['orog'] = 'm'
-units['ps'] = 'Pa'
-units['ustar'] = 'm s-1'
-
-names = {}
-names['pressure'] = 'Pressure'
-names['th'] = 'Potential temperature'
-names['qv'] = 'Specific humidity'
-names['temp'] = 'Temperature'
-names['u'] = 'Zonal wind'
-names['v'] = 'Meridional wind'
-names['ug'] = 'Geostrophic zonal wind'
-names['vg'] = 'Geostrophic meridional wind'
-names['sfc_lat_flx'] = 'Surface latent heat flux'
-names['sfc_sens_flx'] = 'Surface sensible heat flux'
-names['orog'] = 'Surface orography'
-names['ps'] = 'Surface pressure'
-names['ustar'] = 'Surface ustar'
-
-
-datanew = {}
-for var in variables0D:
-  datanew[var] = MV2.zeros((1,1),typecode=MV2.float32)    
-  datanew[var].setAxis(0,lat)
-  datanew[var].setAxis(1,lon)
-for var in variables2D:
-  datanew[var] = MV2.zeros((2,1,1),typecode=MV2.float32)    
-  datanew[var].setAxis(0,time)
-  datanew[var].setAxis(1,lat)
-  datanew[var].setAxis(2,lon)
-for var in variables3D:
-  datanew[var] = MV2.zeros((2,nlev,1,1),typecode=MV2.float32)
-  datanew[var].setAxis(0,time)
-  datanew[var].setAxis(1,lev)
-  datanew[var].setAxis(2,lat)
-  datanew[var].setAxis(3,lon)
-
-data['pressure'] = data['Pthermo']
-data['temp'] = data['th']*1.
-nlev0, = data['temp'].shape
-for ilev in range(0,nlev0):
-  data['temp'][ilev] = data['th'][ilev]*(data['Pthermo'][ilev]/100000.)**(2./7.)    
-
-for var in variables3D:
-  levin = data[var].getAxis(0)
-  nlevin, = levin.shape
-  for ilev in range(0,nlev):
-    lev0 = lev[ilev]
-    ii = 0
-    lflag = False
-    for ilevin in range(0,nlevin-1):
-      if  lev0 >= levin[ilevin] and lev0 < levin[ilevin+1]:
-        ii = ilevin            
-        lflag = True
-    if not(lflag):
-      ii = nlevin-2
-    tmp = data[var][ii] + (data[var][ii+1]-data[var][ii])*(lev0 - levin[ii])/(levin[ii+1]-levin[ii])
-    datanew[var][:,ilev,0,0] = datanew[var][:,ilev,0,0] + tmp
-
-for var in ['sfc_lat_flx','sfc_sens_flx']:
-  datanew[var][:,0,0] = data[var][:]
-
-datanew['ps'][:,0,0] = datanew['ps'][:,0,0] + data['ps']
-#datanew['orog'][0,0] = datanew['orog'][0,0] + data['orog']
-datanew['ustar'][:,0,0] = datanew['ustar'][:,0,0] + 0.566
-
-for it in range(0,2):
-  for ilev in range(0,nlev):
-      datanew['temp'][it,ilev,0,0] = datanew['th'][it,ilev,0,0]*(datanew['pressure'][it,ilev,0,0]/100000.)**(2./7.) 
-
-g = cdms2.open('AYOTTE_A24SC_modif_driver_FC_RR.nc','w')
-
-for var in variables:
-  datanew[var].id = var
-  if var == 'th':
-    datanew[var].id = 'theta'
-  datanew[var].long_name = names[var]    
-  datanew[var].units = units[var]
-  g.write(datanew[var])
-
-g.description = "No subsidence/ascendance, No T & q large-scale advection, no radiation, geostrophic wind" 
-g.reference = 'Ayotte et al (1996, BLM)'
-g.author = "F Couvreux"
-g.modifications = "2017-07-17: R. Roehrig put all fields on the same vertical and time axes"
-g.case = "AYOTTE_24SC" 
-g.startDate = "20091211100000" 
-g.endDate = "20091211160000" 
-g.qadvh = 0 
-g.tadvh = 0 
-g.qadvv = 0 
-g.tadvv = 0 
-g.trad = 0 
-g.forc_omega = 0 
-g.forc_w = 0 
-g.forc_geo = 1 
-g.nudging_u = 0 
-g.nudging_v = 0 
-g.nudging_t = 0 
-g.nudging_q = 0 
-g.zorog = 0.
-g.z0 = 0.16
-#g.ustar = 0.566
-g.surfaceForcing = "surfaceFlux"
-g.surfaceForcingWind = "z0"
-g.surfaceType = "ocean"
-
-g.close()
-
diff --git a/CASES/CINDY-DYNAMO/COCOA/.DS_Store b/CASES/CINDY-DYNAMO/COCOA/.DS_Store
new file mode 100644
index 0000000..59e7d22
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/.DS_Store differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13-22Nov_50km_driver_RR_extended.nc b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13-22Nov_50km_driver_RR_extended.nc
new file mode 100644
index 0000000..c5e93c6
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13-22Nov_50km_driver_RR_extended.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_50km_driver_RR_extended.nc b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_50km_driver_RR_extended.nc
new file mode 100644
index 0000000..e87deba
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_50km_driver_RR_extended.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR.nc b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR.nc
new file mode 100644
index 0000000..d88ca69
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc
new file mode 100644
index 0000000..98fae32
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/.DS_Store b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/.DS_Store
new file mode 100644
index 0000000..b145703
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/.DS_Store differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/GNUmakefile b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/GNUmakefile
new file mode 100644
index 0000000..bb96e6c
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/GNUmakefile
@@ -0,0 +1,42 @@
+# This is a makefile for GNU make.
+
+# 1. Source files and libraries
+
+makefile_dir = .
+mod_dir = ${HOME}/Ocean_skin
+VPATH = ${makefile_dir}:${mod_dir}
+
+sources = create_1D_LMDZ.f mod_sst_ostia.f mod_time.f mod_alert.f
+
+lib_list_dep = jumble datetime_module netcdf
+lib_list_link = jumble datetime netcdff
+
+# 2. Objects and executable file
+
+objects := $(sources:.f=.o)
+execut = create_1D_LMDZ
+
+# 3. Compiler-dependent part
+
+mode = debug
+include ${gen_comp_opt_dir}/${FC}_${mode}.mk
+
+# 4. Rules
+
+.PHONY: all clean clobber depend
+all: ${execut} 
+include ${gen_comp_opt_dir}/settings.mk
+${execut}: ${objects}
+
+depend ${makefile_dir}/depend.mk:
+	makedepf90 -free -Wmissing -Wconfused $(addprefix -I, ${VPATH}) -nosrc $(addprefix -u , ${lib_list_dep}) ${sources} >${makefile_dir}/depend.mk
+
+clean:
+	rm -f ${execut} ${objects}
+
+clobber: clean
+	rm -f *.mod ${makefile_dir}/depend.mk
+
+ifneq ($(MAKECMDGOALS), clobber)
+include ${makefile_dir}/depend.mk
+endif
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-gen_psurf-varia.nc b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-gen_psurf-varia.nc
new file mode 100644
index 0000000..7aaa7f5
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-gen_psurf-varia.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-ost_psurf-const.nc b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-ost_psurf-const.nc
new file mode 100644
index 0000000..92a0555
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/cas_revelle_sst-ost_psurf-const.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ
new file mode 100755
index 0000000..8f55bd4
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.f b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.f
new file mode 100644
index 0000000..743b042
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.f
@@ -0,0 +1,392 @@
+PROGRAM create_1D_LMDZ
+
+  ! Intrinsic
+  USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: sr => REAL32, dr => REAL64, &
+                                           si => INT32, di => INT64
+
+  ! Other module
+  USE mod_alert, ONLY: check
+  USE mod_sst_ostia, ONLY: get_sst_ostia
+  USE jumble, ONLY: new_unit
+
+  ! Libraries
+  USE netcdf
+
+  IMPLICIT NONE
+
+  !---------------------------------------------------------------------
+  !--------------------- DECLARATION -----------------------------------
+  !---------------------------------------------------------------------
+  ! kind
+  INTEGER, PARAMETER                         :: kr = dr
+  ! Files unit number
+  INTEGER                                    :: unit_in, unit_out
+  ! Constant
+  REAL(KIND = kr), PARAMETER                 :: CtoK = 273.15_kr
+  REAL(KIND = kr), PARAMETER                 :: htos = 3600._kr
+  REAL(KIND = kr), PARAMETER                 :: gtokg = 1000._kr
+  REAL(KIND = kr), PARAMETER                 :: hecto = 100._kr
+  ! Dimensions
+  INTEGER, PARAMETER                         :: NLAT = 1, NLON = 1
+  INTEGER, PARAMETER                         :: NLEV = 40
+  INTEGER, PARAMETER                         :: SHIFT = 8, ISHIFT = SHIFT + 1
+  INTEGER, PARAMETER                         :: INTIME = 728
+  INTEGER, PARAMETER                         :: ONTIME = INTIME + SHIFT
+  INTEGER, PARAMETER                         :: N4D = 35, N3D = 4
+  ! NC dim infos
+  CHARACTER(LEN = *), PARAMETER              :: LON_NOUT = "lon"
+  CHARACTER(LEN = *), PARAMETER              :: LAT_NOUT = "lat"
+  CHARACTER(LEN = *), PARAMETER              :: LEV_NOUT = "lev"
+  CHARACTER(LEN = *), PARAMETER              :: TIME_NOUT = "time"
+  CHARACTER(LEN = *), PARAMETER              :: LON_NIN = LON_NOUT
+  CHARACTER(LEN = *), PARAMETER              :: LAT_NIN = LAT_NOUT
+  CHARACTER(LEN = *), PARAMETER              :: LEV_NIN = LEV_NOUT
+  CHARACTER(LEN = *), PARAMETER              :: TIME_NIN = "time_offset"
+  INTEGER                                    :: LAT_dimid, LON_dimid
+  INTEGER                                    :: LEV_dimid, TIME_dimid
+  INTEGER                                    :: LAT_varid, LON_varid
+  INTEGER                                    :: LEV_varid, TIME_varid
+  REAL(KIND = kr), DIMENSION(NLAT)           :: LAT_val
+  REAL(KIND = kr), DIMENSION(NLON)           :: LON_val
+  REAL(KIND = kr), DIMENSION(NLEV)           :: LEV_val
+  REAL(KIND = kr), DIMENSION(ONTIME)         :: TIME_val
+  REAL(KIND = kr)                            :: TSHIFT
+  ! attribute
+  CHARACTER (LEN = *), PARAMETER             :: LNAME = "long_name"
+  CHARACTER (LEN = *), PARAMETER             :: LON_LN = "longitude"
+  CHARACTER (LEN = *), PARAMETER             :: LAT_LN = "latitude"
+  CHARACTER (LEN = *), PARAMETER             :: LEV_LN = "pressure levels"
+  CHARACTER (LEN = *), PARAMETER             :: TIME_LN = "time"
+  CHARACTER (LEN = *), PARAMETER             :: UNITS = "units"
+  CHARACTER (LEN = *), PARAMETER             :: LON_UNITS = "degrees_west"
+  CHARACTER (LEN = *), PARAMETER             :: LAT_UNITS = "degrees_north"
+  CHARACTER (LEN = *), PARAMETER             :: LEV_UNITS = "Pa"
+  CHARACTER (LEN = *), PARAMETER             :: TIME_UNITS = "seconds since" &
+                                                // " 2011-10-01 00:00:00"
+  ! _Fillvalue and missing_value
+  CHARACTER (LEN = *), PARAMETER             :: FV = "_FillValue"
+  CHARACTER (LEN = *), PARAMETER             :: MV = "missing_value"
+  REAL(KIND = kr), PARAMETER                 :: FV_MV = -9999._kr
+  ! dimids, start, count
+  INTEGER, DIMENSION(4)                      :: dimids_4d
+  INTEGER, DIMENSION(3)                      :: dimids_3d
+  ! NC type read data
+  TYPE NC_4D
+    INTEGER                                  :: varid
+    CHARACTER(LEN = 100)                     :: vname
+    CHARACTER(LEN = 100)                     :: vlname
+    CHARACTER(LEN = 100)                     :: vunits
+    REAL(KIND = kr), DIMENSION(NLON, NLAT, NLEV, ONTIME) :: val
+  END TYPE
+
+  TYPE NC_3D
+    INTEGER                                  :: varid
+    CHARACTER(LEN = 100)                     :: vname
+    CHARACTER(LEN = 100)                     :: vlname
+    CHARACTER(LEN = 100)                     :: vunits
+    REAL(KIND = kr), DIMENSION(NLON, NLAT, ONTIME)       :: val
+  END TYPE
+
+  ! Define netcdf variables
+  TYPE(NC_4D), DIMENSION(N4D)                :: nc_out_4d
+  TYPE(NC_3D), DIMENSION(N3D)                :: nc_out_3d
+
+  ! Define logical for filled fields
+  LOGICAL, DIMENSION(N4D)                    :: lfill_4d
+  LOGICAL, DIMENSION(N3D)                    :: lfill_3d
+  ! Define var_name
+  CHARACTER(LEN = 100), DIMENSION(N4D)       :: vname_4d, vunits_4d
+  CHARACTER(LEN = 100), DIMENSION(N3D)       :: vname_3d, vunits_3d
+  CHARACTER(LEN = 100), DIMENSION(N4D)       :: vlname_4d
+  CHARACTER(LEN = 100), DIMENSION(N3D)       :: vlname_3d
+  ! Temporary variables
+  INTEGER                                    :: temp_varid
+  REAL(KIND = kr), DIMENSION(INTIME)         :: temp_1d
+  REAL(KIND = kr), DIMENSION(NLEV, INTIME)   :: temp_2d
+
+  ! File names
+  CHARACTER(LEN = *), PARAMETER              :: FILE_IN = "rev180varanaecmwf" &
+                                                // "anaradar50kmC1.c1." &
+                                                // "20111001.000000.cdf"
+  CHARACTER(LEN = *), PARAMETER              :: BASE_OUT = "cas_revelle_"
+  CHARACTER(LEN = *), PARAMETER              :: EXT_OUT = ".nc"
+  CHARACTER(LEN = *), PARAMETER              :: FILE_NML = "create_1D_LMDZ.nml"
+  CHARACTER(LEN = 8)                         :: SST_NAME = "sst-gen_"
+  CHARACTER(LEN = 11)                        :: PS_NAME = "psurf-varia"
+  CHARACTER(LEN = 100)                       :: FILE_OUT
+
+  ! Pressure constant
+  LOGICAL                                    :: lsst_ost = .FALSE.
+  LOGICAL                                    :: lpsurf = .FALSE.
+  REAL(KIND = kr)                            :: psurf = 100900._kr
+
+  ! Increment
+  INTEGER                                    :: vinc, tinc
+
+  NAMELIST /MAIN_NML/ lsst_ost, lpsurf, psurf
+  !---------------------------------------------------------------------
+  !--------------------- END DECLARATION -------------------------------
+  !---------------------------------------------------------------------
+  ! Load namelist
+  CALL new_unit(unit_in)
+  OPEN(UNIT = unit_in, FILE = FILE_NML, ACTION = 'READ', POSITION = 'REWIND')
+  READ(UNIT = unit_in, NML = MAIN_NML)
+  CLOSE(UNIT = unit_in)
+  ! Define the output file name
+  IF ( lsst_ost ) SST_NAME = "sst-ost_"
+  IF ( lpsurf ) PS_NAME = "psurf-const"
+  FILE_OUT = BASE_OUT // SST_NAME // PS_NAME // EXT_OUT 
+  ! Netcdf variables name
+  lfill_4d = [ .TRUE., .FALSE., .FALSE., .FALSE.,  .TRUE.,  .TRUE., &
+              .FALSE., .FALSE., .FALSE.,  .TRUE.,  .TRUE., .FALSE., &
+               .TRUE.,  .TRUE.,  .TRUE.,  .TRUE.,  .TRUE.,  .TRUE., &
+              .FALSE., .FALSE., .FALSE., .FALSE., .FALSE., .FALSE., &
+               .TRUE.,  .TRUE.,  .TRUE., .FALSE., .FALSE., .FALSE., &
+               .TRUE., .FALSE., .FALSE.,  .TRUE.,  .TRUE.]
+  lfill_3d = [.FALSE., .FALSE., .FALSE.,  .TRUE.]
+
+  vname_4d = ['zz   ', 'pp   ', 'temp ', 'qv   ', 'rh   ', 'theta', &
+              'rv   ', 'u    ', 'v    ', 'ug   ', 'vg   ', 'w    ', &
+              'advu ', 'hu   ', 'vu   ', 'advv ', 'hv   ', 'vv   ', &
+              'advT ', 'hT   ', 'vT   ', 'advq ', 'hq   ', 'vq   ', &
+              'advth', 'hth  ', 'vth  ', 'advr ', 'hr   ', 'vr   ', &
+              'radT ', 'q1   ', 'q2   ', 'uw   ', 'vw   ']
+  vname_3d = ['sens ', 'flat ', 'ts   ', 'ustar']
+
+  vunits_4d = ['m      ', 'Pa     ', 'K      ', 'kg/kg  ', '%      ', 'K      ', &
+               'kg/kg  ', 'm/s    ', 'm/s    ', 'm/s    ', 'm/s    ', 'Pa/s   ', &
+               'm/s/s  ', 'm/s/s  ', 'm/s/s  ', 'm/s/s  ', 'm/s/s  ', 'm/s/s  ', &
+               'K/s    ', 'K/s    ', 'K/s    ', 'kg/kg/s', 'kg/kg/s', 'kg/kg/s', &
+               'K/s    ', 'K/s    ', 'K/s    ', 'kg/kg/s', 'kg/kg/s', 'kg/kg/s', &
+               'K/s    ', 'K/s    ', 'K/s    ', 'm2/s2  ', 'm2/s2  ']
+  vunits_3d = ['W/m2   ', 'W/m2   ', 'K      ', 'm/s    ']
+
+  vlname_4d = ['Height                      ', 'Pressure                    ', &
+               'Temperature                 ', 'Specific humidity (q)       ', &
+               'Relative humidity           ', 'Potential temperature       ', &
+               'Water vapor mixing ratio (r)', 'Horizontal wind U component ', &
+               'Horizontal wind V component ', 'Horizontal U geostrophic    ', &
+               'Horizontal V geostrophic    ', 'Vertical velocity           ', &
+               'Total U advection           ', 'Horizontal U advection      ', &
+               'Vertical U advection        ', 'Total V advection           ', &
+               'Horizontal V advection      ', 'Vertical V advection        ', &
+               'Total Temp. advection       ', 'Horizontal Temp. advection  ', &
+               'Vertical Temp. advection    ', 'Total q advection           ', &
+               'Horizontal q advection      ', 'Vertical q advection        ', &
+               'Total theta advection       ', 'Horizontal theta advection  ', &
+               'Vertical theta advection    ', 'Total r advection           ', &
+               'Horizontal r advection      ', 'Vertical r advection        ', &
+               '-                           ', 'Apparent heat sources       ', &
+               'Apparent moisture sinks     ', 'Vertical flux U momentum    ', &
+               'Vertical flux V momentum    ']
+  vlname_3d = ['Surf. sensible heat flux, upward positive', &
+               'Surf. latent heat flux, upward positive  ', &
+               'Surf. skin temperature                   ', &
+               'Shear velocity                           ']
+
+  DO vinc = 1, N4D
+    nc_out_4d(vinc)%vname = vname_4d(vinc)
+    nc_out_4d(vinc)%vlname = vlname_4d(vinc)
+    nc_out_4d(vinc)%vunits = vunits_4d(vinc)
+    nc_out_4d(vinc)%val = FV_MV
+  END DO
+
+  DO vinc = 1, N3D
+    nc_out_3d(vinc)%vname = vname_3d(vinc)
+    nc_out_3d(vinc)%vlname = vlname_3d(vinc)
+    nc_out_3d(vinc)%vunits = vunits_3d(vinc)
+    nc_out_3d(vinc)%val = FV_MV
+  END DO
+
+  ! Create netcdf output file
+  CALL check( nf90_create(TRIM(FILE_OUT), nf90_noclobber, unit_out) )
+  ! Define the dimensions
+  CALL check( nf90_def_dim(unit_out, LON_NOUT, NLON, LON_dimid) )
+  CALL check( nf90_def_dim(unit_out, LAT_NOUT, NLAT, LAT_dimid) )
+  CALL check( nf90_def_dim(unit_out, LEV_NOUT, NLEV, LEV_dimid) )
+  CALL check( nf90_def_dim(unit_out, TIME_NOUT, ONTIME, TIME_dimid) )
+  ! Define the coordinate variables
+  CALL check( nf90_def_var(unit_out, LON_NOUT, NF90_DOUBLE, LON_dimid, LON_varid) )
+  CALL check( nf90_def_var(unit_out, LAT_NOUT, NF90_DOUBLE, LAT_dimid, LAT_varid) )
+  CALL check( nf90_def_var(unit_out, LEV_NOUT, NF90_DOUBLE, LEV_dimid, LEV_varid) )
+  CALL check( nf90_def_var(unit_out, TIME_NOUT, NF90_DOUBLE, TIME_dimid, TIME_varid) )
+  ! Assign units attribute
+  CALL check( nf90_put_att(unit_out, LON_varid, UNITS, LON_units) )
+  CALL check( nf90_put_att(unit_out, LAT_varid, UNITS, LAT_units) )
+  CALL check( nf90_put_att(unit_out, LEV_varid, UNITS, LEV_units) )
+  CALL check( nf90_put_att(unit_out, TIME_varid, UNITS, TIME_UNITS) )
+  ! Assigne longname attribute
+  CALL check( nf90_put_att(unit_out, LON_varid, LNAME, LON_LN) )
+  CALL check( nf90_put_att(unit_out, LAT_varid, LNAME, LAT_LN) )
+  CALL check( nf90_put_att(unit_out, LEV_varid, LNAME, LEV_LN) )
+  CALL check( nf90_put_att(unit_out, TIME_varid, LNAME, TIME_LN) )
+  ! Create dimids to pass the dimids of the dimensions
+  dimids_4d = [LON_dimid, LAT_dimid, LEV_dimid, TIME_dimid]
+  dimids_3d = [LON_dimid, LAT_dimid, TIME_dimid]
+  ! Create the variables and assign their attributes
+  DO vinc = 1, N4D
+    CALL check( nf90_def_var(unit_out, TRIM(nc_out_4d(vinc)%vname), NF90_DOUBLE, &
+         dimids_4d, nc_out_4d(vinc)%varid) )
+    CALL check( nf90_put_att(unit_out, nc_out_4d(vinc)%varid, UNITS, &
+         TRIM(nc_out_4d(vinc)%vunits)) )
+    CALL check( nf90_put_att(unit_out, nc_out_4d(vinc)%varid, LNAME, &
+         TRIM(nc_out_4d(vinc)%vlname)) )
+    CALL check( nf90_put_att(unit_out, nc_out_4d(vinc)%varid, FV, FV_MV) )
+    CALL check( nf90_put_att(unit_out, nc_out_4d(vinc)%varid, MV, FV_MV) )
+  END DO
+  DO vinc = 1, N3D
+    CALL check( nf90_def_var(unit_out, TRIM(nc_out_3d(vinc)%vname), NF90_DOUBLE, &
+         dimids_3d, nc_out_3d(vinc)%varid) )
+    CALL check( nf90_put_att(unit_out, nc_out_3d(vinc)%varid, UNITS, &
+         TRIM(nc_out_3d(vinc)%vunits)) )
+    CALL check( nf90_put_att(unit_out, nc_out_3d(vinc)%varid, LNAME, &
+         TRIM(nc_out_3d(vinc)%vlname)) )
+    CALL check( nf90_put_att(unit_out, nc_out_3d(vinc)%varid, FV, FV_MV) )
+    CALL check( nf90_put_att(unit_out, nc_out_3d(vinc)%varid, MV, FV_MV) )
+  END DO
+  ! End define mode
+  CALL check( nf90_enddef(unit_out) )
+
+  ! Open in file to get the variables:
+  CALL check( nf90_open(FILE_IN, nf90_nowrite, unit_in) )
+  CALL check( nf90_inq_varid(unit_in, LAT_NIN, LAT_dimid) )
+  CALL check( nf90_inq_varid(unit_in, LON_NIN, LON_dimid) )
+  CALL check( nf90_inq_varid(unit_in, LEV_NIN, LEV_dimid) )
+  CALL check( nf90_inq_varid(unit_in, TIME_NIN, TIME_dimid) )
+
+  CALL check( nf90_get_var(unit_in, LAT_dimid, LAT_val ) )
+  CALL check( nf90_get_var(unit_in, LON_dimid, LON_val ) )
+  CALL check( nf90_get_var(unit_in, LEV_dimid, LEV_val, [1], [NLEV]) )
+  CALL check( nf90_get_var(unit_in, TIME_dimid, TIME_val(1:INTIME) ) )
+  TSHIFT = TIME_val(2) - TIME_val(1)
+  DO tinc = INTIME + 1, ONTIME
+    TIME_val(tinc) = TIME_val(tinc - 1) + TSHIFT
+  END DO
+
+  ! Get and affect variables
+  LEV_val = LEV_val * hecto ! hPa -> Pa
+  ! pp
+  IF ( lpsurf ) THEN
+    nc_out_4d(2)%val(1,1,1,ISHIFT:ONTIME) = psurf
+  ELSE
+    CALL check( nf90_inq_varid(unit_in, 'p_srf_aver', temp_varid) )
+    CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+    nc_out_4d(2)%val(1,1,1,ISHIFT:ONTIME) = temp_1d * hecto ! hPa -> Pa
+  END IF
+  nc_out_4d(2)%val(1,1,2:NLEV,ISHIFT:ONTIME) = SPREAD(LEV_val(2:NLEV), 2, INTIME)
+  ! temp
+  CALL check( nf90_inq_varid(unit_in, 'T', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(3)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  CALL check( nf90_inq_varid(unit_in, 'T_srf', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_4d(3)%val(1,1,1,ISHIFT:ONTIME) = temp_1d + CtoK ! C -> K
+  ! qv and rv
+  CALL check( nf90_inq_varid(unit_in, 'q', temp_varid) ) 
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(7)%val(1,1,:,ISHIFT:ONTIME) = temp_2d / gtokg ! g/kg -> kg/kg 
+  CALL check( nf90_inq_varid(unit_in, 'q_srf', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_4d(7)%val(1,1,1,ISHIFT:ONTIME) = temp_1d
+  nc_out_4d(4)%val = nc_out_4d(7)%val / ( 1._kr + nc_out_4d(7)%val )
+  ! u
+  CALL check( nf90_inq_varid(unit_in, 'u', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(8)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  CALL check( nf90_inq_varid(unit_in, 'u_srf', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_4d(8)%val(1,1,1,ISHIFT:ONTIME) = temp_1d
+  ! v
+  CALL check( nf90_inq_varid(unit_in, 'v', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(9)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  CALL check( nf90_inq_varid(unit_in, 'v_srf', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_4d(9)%val(1,1,1,ISHIFT:ONTIME) = temp_1d
+  ! w
+  CALL check( nf90_inq_varid(unit_in, 'omega', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(12)%val(1,1,:,ISHIFT:ONTIME) = temp_2d / htos * hecto ! mb/hr -> Pa/s
+  CALL check( nf90_inq_varid(unit_in, 'omega_srf', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_4d(12)%val(1,1,1,ISHIFT:ONTIME) = temp_1d / htos * hecto ! mb/hr -> Pa/s
+  ! adv temp
+  CALL check( nf90_inq_varid(unit_in, 'T_adv_h', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  temp_2d(1,:) = 0._kr ! there is no srf values we fix it to 0.
+  temp_2d = - temp_2d / htos ! K/hr -> K/s
+  nc_out_4d(19)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  nc_out_4d(20)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  CALL check( nf90_inq_varid(unit_in, 'T_adv_v', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  temp_2d(1,:) = 0._kr ! there is no srf values we fix it to 0.
+  temp_2d = - temp_2d / htos ! K/hr -> K/s
+  nc_out_4d(19)%val(1,1,:,ISHIFT:ONTIME) = nc_out_4d(19)%val(1,1,:,ISHIFT:ONTIME) + &
+                                           temp_2d ! tot = h + v
+  nc_out_4d(21)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  ! adv rv
+  CALL check( nf90_inq_varid(unit_in, 'q_adv_h', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  temp_2d(1,:) = 0._kr ! there is no srf values we fix it to 0.
+  temp_2d = - temp_2d / gtokg / htos ! g/kg/hr -> kg/kg/s
+  nc_out_4d(28)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  nc_out_4d(29)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  CALL check( nf90_inq_varid(unit_in, 'q_adv_v', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  temp_2d(1,:) = 0._kr ! there is no srf values we fix it to 0.
+  temp_2d = - temp_2d / gtokg / htos ! g/kg/hr -> kg/kg/s
+  nc_out_4d(28)%val(1,1,:,ISHIFT:ONTIME) = nc_out_4d(28)%val(1,1,:,ISHIFT:ONTIME) + &
+                                           temp_2d ! tot = h + v
+  nc_out_4d(30)%val(1,1,:,ISHIFT:ONTIME) = temp_2d
+  ! adv qv
+  temp_2d = (1._kr + nc_out_4d(7)%val(1,1,:,ISHIFT:ONTIME))**2
+  nc_out_4d(22)%val(1,1,:,ISHIFT:ONTIME) = nc_out_4d(28)%val(1,1,:,ISHIFT:ONTIME) / &
+                                           temp_2d
+  nc_out_4d(23)%val(1,1,:,ISHIFT:ONTIME) = nc_out_4d(29)%val(1,1,:,ISHIFT:ONTIME) / &
+                                           temp_2d
+  nc_out_4d(24)%val(1,1,:,ISHIFT:ONTIME) = nc_out_4d(30)%val(1,1,:,ISHIFT:ONTIME) / &
+                                           temp_2d
+  ! q1
+  CALL check( nf90_inq_varid(unit_in, 'q1', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(32)%val(1,1,:,ISHIFT:ONTIME) = temp_2d / htos ! K/hr -> K/s
+  ! q2
+  CALL check( nf90_inq_varid(unit_in, 'q2', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_2d, [1, 1], [NLEV, INTIME]) )
+  nc_out_4d(33)%val(1,1,:,ISHIFT:ONTIME) = temp_2d / htos ! K/hr -> K/s
+  ! sens
+  CALL check( nf90_inq_varid(unit_in, 'SH', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_3d(1)%val(1,1,ISHIFT:ONTIME) = temp_1d
+  ! flat
+  CALL check( nf90_inq_varid(unit_in, 'LH', temp_varid) )
+  CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  nc_out_3d(2)%val(1,1,ISHIFT:ONTIME) = temp_1d
+  ! ts
+  IF ( lsst_ost ) THEN
+    CALL get_sst_ostia(temp_1d)
+  ELSE
+    CALL check( nf90_inq_varid(unit_in, 'T_skin', temp_varid) )
+    CALL check( nf90_get_var(unit_in, temp_varid, temp_1d) )
+  END IF
+  nc_out_3d(3)%val(1,1,ISHIFT:ONTIME) = temp_1d + CtoK ! C -> K
+
+
+  CALL check( nf90_close(unit_in) )
+
+  ! Write the latitude and the longitude
+  CALL check( nf90_put_var(unit_out, LON_varid, LON_val) )
+  CALL check( nf90_put_var(unit_out, LAT_varid, LAT_val) )
+  CALL check( nf90_put_var(unit_out, LEV_varid, LEV_val) )
+  CALL check( nf90_put_var(unit_out, TIME_varid, TIME_val) )
+
+  DO vinc = 1, N4D
+    CALL check( nf90_put_var(unit_out, nc_out_4d(vinc)%varid, nc_out_4d(vinc)%val) )
+  END DO
+  DO vinc = 1, N3D
+    CALL check( nf90_put_var(unit_out, nc_out_3d(vinc)%varid, nc_out_3d(vinc)%val) )
+  END DO
+
+  CALL check( nf90_close(unit_out) )
+
+END PROGRAM create_1D_LMDZ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.nml b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.nml
new file mode 100644
index 0000000..7ff9dfc
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.nml
@@ -0,0 +1,5 @@
+&MAIN_NML
+  lsst_ost  = .true.,
+  lpsurf    = .true.,
+  psurf     = 100900.,
+/
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.o b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.o
new file mode 100644
index 0000000..bb4ba10
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/create_1D_LMDZ.o differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/depend.mk b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/depend.mk
new file mode 100644
index 0000000..33d4c58
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/depend.mk
@@ -0,0 +1,2 @@
+create_1D_LMDZ.o : mod_sst_ostia.o mod_alert.o 
+mod_sst_ostia.o : mod_alert.o mod_time.o 
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/Pres_ENS.odp b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/Pres_ENS.odp
new file mode 100644
index 0000000..55c2647
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/Pres_ENS.odp differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/cas.nc b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/cas.nc
new file mode 100644
index 0000000..6093fdc
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/cas.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_files_cdf.ksh b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_files_cdf.ksh
new file mode 100644
index 0000000..e950875
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_files_cdf.ksh
@@ -0,0 +1,109 @@
+rm forcage_cindy.nc
+
+### Pour le 50km
+cp ../rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf forcage_cindy.nc
+
+### Pour le 150km
+#cp ../rev180varanaecmwfanaradarC1.c1.20111001.000000.cdf forcage_cindy.nc
+
+ncrename -v LH,flat -v T_skin,ts -v SH,sens -v omega,w -v q,rv -v q_adv_h,hq -v q_adv_v,vq -v T_adv_h,hT -v T_adv_v,vT -v p_srf_aver,psurf -v T,temperature forcage_cindy.nc
+
+cp forcage_cindy.nc in.nc
+
+#ensuite on modifie les valeurs
+ncap2 -s 'T_srf += 273.15' in.nc out.nc
+rm in.nc
+ncap2 -s "omega_srf = omega_srf/3600*100" out.nc in.nc
+rm out.nc
+
+ncap2 -s 'ts += 273.15' in.nc out.nc
+rm in.nc
+ncap2 -s "w = w/3600*100" out.nc in.nc
+rm out.nc
+
+ncap2 -s 'q1 = q1/24' in.nc out.nc
+rm in.nc
+ncap2 -s "q2 = q2/24" out.nc in.nc
+rm out.nc
+
+ncap2 -s 'hq = hq/-1000/3600' in.nc out.nc
+rm in.nc
+ncap2 -s "vq = vq/-1000/3600" out.nc in.nc
+rm out.nc
+
+ncap2 -s 'hT = hT/-3600' in.nc out.nc
+rm in.nc
+ncap2 -s "vT = vT/-3600" out.nc in.nc
+rm out.nc
+
+ncap2 -s 'lev = lev*100' in.nc out.nc
+rm in.nc
+
+ncap2 -s 'psurf = psurf*100' out.nc in.nc
+rm out.nc
+
+#ensuite on cree les variables advections
+
+cdo expr,'advq=hq+vq' in.nc t1.nc
+cdo merge in.nc t1.nc toto.nc
+rm t1.nc
+cdo expr,'advT=hT+vT' in.nc t2.nc
+cdo merge toto.nc t2.nc out.nc
+rm t2.nc 
+rm toto.nc
+rm in.nc
+
+#on s occupe maintenant de modifier les attribus
+
+ncatted -O -a units,lev,o,c,"hPa" out.nc
+ncatted -O -a units,ts,o,c,"K" out.nc
+ncatted -O -a units,q1,o,c,"K/day" out.nc
+ncatted -O -a units,q2,o,c,"K/day" out.nc
+ncatted -O -a units,hT,o,c,"K/day" out.nc
+ncatted -O -a units,vT,o,c,"K/day" out.nc
+ncatted -O -a units,vq,o,c,"kg/kg/day" out.nc
+ncatted -O -a units,hq,o,c,"kg/kg/day" out.nc
+ncatted -O -a units,w,o,c,"Pa/s" out.nc
+ncatted -O -a units,omega_srf,o,c,"Pa/s" out.nc
+ncatted -O -a units,T_srf,o,c,"K" out.nc
+ncatted -O -a units,advT,o,c,"K/day" out.nc
+ncatted -O -a units,advq,o,c,"kg/kg/day" out.nc
+ncatted -O -a units,psurf,o,c,"hPa" out.nc
+
+#on fixe le temps
+cdo  setreftime,2011-10-01,0,1s  -settaxis,2011-10-01,3:00:00,1day  -setcalendar,360_day out.nc in.nc
+
+#on prend que 40 niveau
+cdo sellevel,4000,6500,9000,11500,14000,16500,19000,21500,24000,26500,29000,31500,34000,36500,39000,41500,44000,46500,49000,51500,54000,56500,59000,61500,64000,66500,69000,71500,74000,76500,79000,81500,84000,86500,89000,91500,94000,96500,99000,101500 in.nc toto.nc
+
+#on extrait aussi la temperature et SH et LH
+ncks -v sens,flat,ts,psurf,u_srf,v_srf,T_srf,q_srf,omega_srf in.nc titi.nc
+
+#On merge les fichiers ce qui ressemble au fichier final mais sans dimensions lon et lat
+cdo merge titi.nc toto.nc final.nc
+
+#on nettoie nos affaires
+rm toto.nc titi.nc out.nc in.nc
+ 
+
+
+#############################################
+#Maintenant on s attaque au fichier initiale 
+
+#on selectionne les pas de temps pour coller au nouveau forcage
+
+#ncks -d time,8,735 cas_ini.nc cas_ini_f.nc
+cp cas_ini.nc cas_ini_f.nc
+
+#on envoie tout ca dans python car ancien forcage definition pourrie donc on gere en python
+
+python modif_netcdf.py
+
+#on recupere le fichier final et on l'envoie au bon endroit pour effectuer un test par la suite !
+mv cas_ini_f.nc cas.nc
+#ncatted -a units,time,o,c,"seconds since 2011-10-01 00:00:00" cas.nc
+chmod +x cas.nc
+#cp cas.nc /homel/otorres/LMDZ/LMDz_2017_test_CINDY/LMDZ20170316.trunk/1D/CAS/cindynamo/setup/.
+cp cas.nc /homel/otorres/LMDz_2018_BULK_JLR/LMDZtrunk/1D/CAS/cindynamo/setup/.
+#rm final.nc
+
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_netcdf.py b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_netcdf.py
new file mode 100644
index 0000000..f8d375c
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/modif_netcdf.py
@@ -0,0 +1,79 @@
+import netCDF4
+import numpy as np
+
+dset = netCDF4.Dataset('/homel/otorres/FORCAGE_CINDY_HUGO/modif_FILES/final.nc')
+
+ts_m      = dset['ts'][:]
+ps_m      = dset['psurf'][:]
+lh_m      = dset['flat'][:]
+sh_m      = dset['sens'][:]
+qh_m      = dset['hq'][:,:]
+qv_m      = dset['vq'][:,:]
+th_m      = dset['hT'][:,:]
+tv_m      = dset['vT'][:,:]
+w_m       = dset['w'][:,:]
+omega_m_s = dset['omega_srf'][:]
+u_m       = dset['u'][:,:]
+u_m_s     = dset['u_srf'][:]
+v_m       = dset['v'][:,:]
+v_m_s     = dset['v_srf'][:]
+q_m       = dset['rv'][:,:]
+q_m_s     = dset['q_srf'][:]
+t_m       = dset['temperature'][:,:]
+t_m_s     = dset['T_srf'][:]
+advq_m    = dset['advq'][:,:]
+advt_m    = dset['advT'][:,:]
+lev_m     = dset['lev'][:]
+time_m    = dset['time'][:]
+dset.close()
+
+dset = netCDF4.Dataset('cas_ini_f.nc','r+')
+
+time_o = dset['time'][8:736]
+dset.variables['lev'][:] = lev_m
+dset.variables['ts'][8:736,:,:] = ts_m
+dset.variables['flat'][8:736,:,:] = lh_m
+dset.variables['sens'][8:736,:,:] = sh_m
+dset.variables['w'][8:736,:,:,:] = w_m
+dset.variables['w'][8:736,0,:,:] = omega_m_s
+dset.variables['u'][8:736,:,:,:] = u_m
+dset.variables['u'][8:736,0,:,:] = u_m_s
+dset.variables['v'][8:736,:,:,:] = v_m
+dset.variables['v'][8:736,0,:,:] = v_m_s
+
+dset.variables['rv'][8:736,:,:,:] = q_m
+dset.variables['rv'][8:736,0,:,:] = q_m_s
+dset.variables['temp'][8:736,:,:,:] = t_m
+dset.variables['temp'][8:736,0,:,:] = t_m_s
+
+dset.variables['pp'][8:736,0,:,:] = ps_m
+for i in range(8,736) :
+    print(i)
+    dset.variables['pp'][i,1:39,0,0] = lev_m[1:39]
+
+#on met zz a 1 pour voir si il est utilise
+dset.variables['zz'][:,:,:,:] = 1
+
+dset.variables['hq'][8:736,:,:,:] = qh_m
+dset.variables['vq'][8:736,:,:,:] = qv_m
+dset.variables['hT'][8:736,:,:,:] = th_m
+dset.variables['vT'][8:736,:,:,:] = tv_m
+
+dset.variables['advq'][8:736,:,:,:] = advq_m
+dset.variables['advT'][8:736,:,:,:] = advt_m
+
+
+dset.close()
+
+#dset = netCDF4.Dataset('cas_ini.nc','r+')
+
+#pp = dset['pp'][7:735,:,0,0]
+#zz = dset['zz'][7:735,:,0,0]
+#lev = dset.variables['lev'][:]
+#dset.close()
+
+
+#dset = netCDF4.Dataset('/homel/otorres/FORCAGE_CINDY_HUGO/rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf','r+')
+#levini = dset.variables['lev'][:]
+#dset.close()
+
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/texput.log b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/texput.log
new file mode 100644
index 0000000..8e69f1e
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/texput.log
@@ -0,0 +1,12 @@
+This is Omegak, Version 3.141592-1.23.2.3 (Web2C 7.5.6)
+ %&-line parsing enabled. (format=omega 2018.11.7)
+6 DEC 2018 10:29
+Copyright (c) 1994--2000 John Plaice and Yannis Haralambous
+**netcdf rev180varanaecmwfanaradar50kmC1.c1.20111001.000000 {
+
+! Emergency stop.
+<*> netcdf 
+           rev180varanaecmwfanaradar50kmC1.c1.20111001.000000 {
+End of file on the terminal!
+
+No pages of output.
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/value_ln-units.txt b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/value_ln-units.txt
new file mode 100644
index 0000000..feedbbc
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/ens-revelle/value_ln-units.txt
@@ -0,0 +1,39 @@
+|Variable | units   | Null    | Initial | Dimen   |
+|_________|_________|_________|_________|_________|
+|zz       | m       | yes (1) | yes (1) | 4       |
+|pp       | hPa     | no      | yes     | 4       |
+|temp     | K       | no      | yes     | 4       |
+|qv       | kg/kg   | no      | no      | 4       |
+|rh       | -       | no      | no      | 4       |
+|theta    | K       | no      | no      | 4       |
+|rv       | kg/kg   | no      | yes     | 4       |
+|u        | m/s     | no      | yes     | 4       |
+|v        | m/s     | no      | yes     | 4       |
+|ug       | m/s     | yes (0) | no      | 4       |
+|vg       | m/s     | yes (0) | no      | 4       |
+|w        | Pa/s    | no      | yes     | 4       |
+|advu     | m/s     | yes (0) | no      | 4       |
+|hu       | m/s     | yes (0) | no      | 4       |
+|vu       | m/s     | yes (0) | no      | 4       |
+|advv     | m/s     | yes (0) | no      | 4       |
+|hv       | m/s     | yes (0) | no      | 4       |
+|vv       | m/s     | yes (0) | no      | 4       |
+|advT     | K/s     | no      | yes     | 4       |
+|hT       | K/s     | no      | yes     | 4       |
+|vT       | K/s     | no      | yes     | 4       |
+|advq     | kg/kg/s | no      | yes     | 4       |
+|hq       | kg/kg/s | no      | yes     | 4       |
+|vq       | kg/kg/s | no      | yes     | 4       |
+|advth    | K/s     | yes (0) | no      | 4       |
+|hth      | K/s     | yes (0) | no      | 4       |
+|vth      | K/s     | yes (0) | no      | 4       |
+|advr     | kg/kg/s | yes (0) | no      | 4       |
+|hr       | kg/kg/s | yes (0) | no      | 4       |
+|vr       | kg/kg/s | yes (0) | no      | 4       |
+|radT     | K/s     | yes (0) | no      | 4       |
+|sens     | W/m2    | no      | yes     | 3       |
+|flat     | W/m2    | no      | yes     | 3       |
+|ts       | K       | no      | yes     | 3       |
+|q1       | K/s     | no      | no      | 3       |
+|q2       | K/s     | no      | no      | 3       |
+|_________|_________|_________|_________|_________|
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mean_rev.nc b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mean_rev.nc
new file mode 100644
index 0000000..fbf4afa
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mean_rev.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.f b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.f
new file mode 100644
index 0000000..e39502d
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.f
@@ -0,0 +1,169 @@
+MODULE mod_sst_ostia
+
+  ! Intrinsic
+  USE, INTRINSIC :: ISO_FORTRAN_ENV, ONLY: sr => REAL32, dr => REAL64, &
+                                           si => INT32, di => INT64
+
+  ! Other modules
+  USE mod_time, ONLY: update_date
+  USE mod_alert, ONLY: check
+
+  ! Libraries
+  USE netcdf
+
+  IMPLICIT NONE
+
+  INTEGER, PARAMETER                :: kr = dr
+  INTEGER, PARAMETER                :: hshift = 3
+  INTEGER, PARAMETER                :: NLAT = 3600, NLON = 7200, ND_SST = 3
+  REAL(KIND = kr), PARAMETER        :: LAT_MIN = -0.8, LON_MIN = 79.7
+  REAL(KIND = kr), PARAMETER        :: LAT_MAX = 0.8, LON_MAX = 81.3
+  CHARACTER(LEN = *), PARAMETER     :: SST_path = '/bdd/OSTIA_SST_NRT/' &
+                                       // 'SST_GLO_SST_L4_NRT_OBSERVATIONS_010_001/' &
+                                       // 'METOFFICE-GLO-SST-L4-NRT-OBS-SST-V2/'
+  CHARACTER(LEN = *), PARAMETER     :: SST_ext = '120000-UKMO-L4_GHRSST-SSTfnd' &
+                                       // '-OSTIA-GLOB-v02.0-fv02.0.nc'
+  CHARACTER(LEN = *), PARAMETER     :: FMT1 = "(I4)"
+  CHARACTER(LEN = *), PARAMETER     :: FMT2 = "(I2.2)"
+  CHARACTER(LEN = *), PARAMETER     :: LON_NAME = "lon"
+  CHARACTER(LEN = *), PARAMETER     :: LAT_NAME = "lat"
+  CHARACTER(LEN = *), PARAMETER     :: TP_NAME = "analysed_sst"
+  CHARACTER(LEN = *), PARAMETER     :: AO_NAME = "add_offset"
+  CHARACTER(LEN = *), PARAMETER     :: SF_NAME = "scale_factor"
+
+CONTAINS
+
+  ELEMENTAL REAL(KIND = kr) FUNCTION UPACK(FIELD, add_offset, scale_factor)
+
+    INTEGER, INTENT(IN)               :: FIELD
+    REAL(KIND = kr), INTENT(IN)       :: add_offset, scale_factor
+
+    UPACK = REAL(FIELD, KIND = kr) * scale_factor + add_offset
+
+  END FUNCTION UPACK
+
+
+
+  SUBROUTINE get_sst_ostia(temp_1d)
+
+    REAL(KIND = kr), DIMENSION(:), INTENT(OUT) :: temp_1d
+    INTEGER                                    :: unit_in
+    INTEGER                                    :: iyear = 2011, imonth = 10
+    INTEGER                                    :: iday = 2, ihour = 0
+    INTEGER                                    :: tyear, tmonth, tday, thour
+    ! year, month, day and forecast hour character 
+    CHARACTER(LEN = 4)                         :: cyear
+    CHARACTER(LEN = 2)                         :: cmonth, cday
+    CHARACTER(LEN = 200)                       :: FILE_NAME
+    INTEGER                                    :: LAMI, LAMA, NLA
+    INTEGER                                    :: LOMI, LOMA, NLO
+    INTEGER                                    :: LAT_dimid, LON_dimid, TP_varid
+    INTEGER, DIMENSION(ND_SST)                 :: nc_start, nc_count
+    REAL(KIND = kr), DIMENSION(NLAT)           :: LAT_val
+    REAL(KIND = kr), DIMENSION(NLON)           :: LON_val
+    REAL(KIND = kr)                            :: add_offset, scale_factor
+    REAL(KIND = kr)                            :: old_val, new_val
+    INTEGER, DIMENSION(:,:), ALLOCATABLE       :: temp_val
+    INTEGER                                    :: iw, it
+
+    WRITE(UNIT = cyear, FMT = FMT1) iyear
+    WRITE(UNIT = cmonth, FMT = FMT2) imonth
+    WRITE(UNIT = cday, FMT = FMT2) iday - 1
+
+    FILE_NAME = SST_PATH // cyear // '/' // cmonth // '/' // cyear // cmonth &
+                // cday // SST_ext
+
+    CALL check( nf90_open(TRIM(FILE_NAME), nf90_nowrite, unit_in) )
+
+    CALL check( nf90_inq_varid(unit_in, LAT_NAME, LAT_dimid) )
+    CALL check( nf90_inq_varid(unit_in, LON_NAME, LON_dimid) )
+    CALL check( nf90_inq_varid(unit_in, TP_NAME, TP_varid) )
+
+    CALL check( nf90_get_att(unit_in, TP_varid, AO_NAME, add_offset) )
+    CALL check( nf90_get_att(unit_in, TP_varid, SF_NAME, scale_factor) )
+
+    CALL check( nf90_get_var(unit_in, LAT_dimid, LAT_val) )
+    CALL check( nf90_get_var(unit_in, LON_dimid, LON_val) )
+
+    ! Get the increment values and initialize the start and count vectors
+    LAMI = MINLOC(ABS(LAT_val - LAT_MIN), DIM = 1)
+    LAMA = MINLOC(ABS(LAT_val - LAT_MAX), DIM = 1)
+    LOMI = MINLOC(ABS(LON_val - LON_MIN), DIM = 1)
+    LOMA = MINLOC(ABS(LON_val - LON_MAX), DIM = 1)
+    IF ( LAMI > LAMA ) THEN
+      NLA = LAMI - LAMA + 1
+      nc_start(2) = LAMA
+    ELSE
+      NLA = LAMA - LAMI + 1
+      nc_start(2) = LAMI
+    END IF
+    IF ( LOMI > LOMA ) THEN
+      NLO = LOMI - LOMA + 1
+      nc_start(1) = LOMA
+    ELSE
+      NLO = LOMA - LOMI + 1
+      nc_start(1) = LOMI
+    END IF
+    nc_start(3) = 1
+    nc_count = [NLO, NLA, 1]
+    ALLOCATE(temp_val(NLO, NLA))
+    CALL check( nf90_get_var(unit_in, TP_varid, temp_val, start = nc_start, &
+         count = nc_count) )
+    CALL check( nf90_close(unit_in) )
+    old_val = UPACK(SUM(temp_val), add_offset, scale_factor) / &
+              REAL(SIZE(temp_val), KIND = kr)
+
+    WRITE(UNIT = cyear, FMT = FMT1) iyear
+    WRITE(UNIT = cmonth, FMT = FMT2) imonth
+    WRITE(UNIT = cday, FMT = FMT2) iday
+
+    FILE_NAME = SST_PATH // cyear // '/' // cmonth // '/' // cyear // cmonth &
+                // cday // SST_ext
+
+    CALL check( nf90_open(TRIM(FILE_NAME), nf90_nowrite, unit_in) )
+    CALL check( nf90_get_var(unit_in, TP_varid, temp_val, start = nc_start, &
+         count = nc_count) )
+    CALL check( nf90_close(unit_in) )
+    new_val = UPACK(SUM(temp_val), add_offset, scale_factor) / &
+              REAL(SIZE(temp_val), KIND = kr)
+
+    DO it = 1, SIZE(temp_1d)
+    
+      IF ( ihour == 12 ) THEN
+        temp_1d(it) = new_val
+        old_val = new_val
+
+        tyear = iyear
+        tmonth = imonth
+        tday = iday
+        thour = 0
+        CALL update_date(tyear, tmonth, tday, thour, 24)
+
+        WRITE(UNIT = cyear, FMT = FMT1) tyear
+        WRITE(UNIT = cmonth, FMT = FMT2) tmonth
+        WRITE(UNIT = cday, FMT = FMT2) tday
+
+        FILE_NAME = SST_PATH // cyear // '/' // cmonth // '/' // cyear // cmonth &
+                    // cday // SST_ext
+
+        CALL check( nf90_open(TRIM(FILE_NAME), nf90_nowrite, unit_in) )
+        CALL check( nf90_get_var(unit_in, TP_varid, temp_val, start = nc_start, &
+             count = nc_count) )
+        CALL check( nf90_close(unit_in) )
+        new_val = UPACK(SUM(temp_val), add_offset, scale_factor) / &
+                  REAL(SIZE(temp_val), KIND = kr)
+
+      ELSE
+        iw = MOD( ihour + 12, 24)
+        temp_1d(it) = ( REAL(24 - iw, KIND = kr) * old_val + &
+                      REAL(iw, KIND = kr) * new_val ) / REAL(24, KIND = kr)
+      END IF
+
+      CALL update_date(iyear, imonth, iday, ihour, hshift)
+
+    END DO
+
+
+  END SUBROUTINE get_sst_ostia
+
+END MODULE mod_sst_ostia
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.mod b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.mod
new file mode 100644
index 0000000..0b7c3bd
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.mod differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.o b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.o
new file mode 100644
index 0000000..2e10468
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/CREATE_1D_LMDZ/mod_sst_ostia.o differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_1979.txt b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_1979.txt
new file mode 100644
index 0000000..b95b611
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_1979.txt
@@ -0,0 +1,89 @@
+from http://www.digitaldutch.com/atmoscalc/tableatmosphere.htm
+Altitude [km]	Temperature [Kelvin]	Pressure [pascal]	Density [kg/m3]	Speed of sound [m/s]	Viscosity [Pa.s]
+0.00000	288.150	101325		1.22500	        340.294	0.0000181206
+1.00000	281.650	89874.6		1.11164	        336.434	0.0000177943
+2.00000	275.150	79495.2		1.00649	        332.529	0.0000174645
+3.00000	268.650	70108.5		0.909122	328.578	0.0000171311
+4.00000	262.150	61640.2		0.819129	324.579	0.0000167940
+5.00000	255.650	54019.9		0.736116	320.529	0.0000164531
+6.00000	249.150	47181.0		0.659697	316.428	0.0000161084
+7.00000	242.650	41060.7		0.589501	312.274	0.0000157596
+8.00000	236.150	35599.8		0.525168	308.063	0.0000154068
+9.00000	229.650	30742.5		0.466348	303.793	0.0000150498
+10.0000	223.150	26436.3		0.412707	299.463	0.0000146884
+11.0000	216.650	22632.1		0.363918	295.070	0.0000143226
+12.0000	216.650	19330.4		0.310828	295.070	0.0000143226
+13.0000	216.650	16510.4		0.265483	295.070	0.0000143226
+14.0000	216.650	14101.8		0.226753	295.070	0.0000143226
+15.0000	216.650	12044.6		0.193674	295.070	0.0000143226
+16.0000	216.650	10287.5		0.165420	295.070	0.0000143226
+17.0000	216.650	8786.68		0.141288	295.070	0.0000143226
+18.0000	216.650	7504.84		0.120676	295.070	0.0000143226
+19.0000	216.650	6410.01		0.103071	295.070	0.0000143226
+20.0000	216.650	5474.89		0.0880349	295.070	0.0000143226
+21.0000	217.650	4677.89		0.0748737	295.750	0.0000143792
+22.0000	218.650	3999.79		0.0637273	296.428	0.0000144357
+23.0000	219.650	3422.43		0.0542803	297.105	0.0000144920
+24.0000	220.650	2930.49		0.0462674	297.781	0.0000145483
+25.0000	221.650	2511.02		0.0394658	298.455	0.0000146044
+26.0000	222.650	2153.09		0.0336882	299.128	0.0000146604
+27.0000	223.650	1847.46		0.0287769	299.799	0.0000147164
+28.0000	224.650	1586.29		0.0245988	300.468	0.0000147722
+29.0000	225.650	1362.96		0.0210420	301.136	0.0000148279
+30.0000	226.650	1171.87		0.0180119	301.803	0.0000148835
+31.0000	227.650	1008.23		0.0154288	302.468	0.0000149390
+32.0000	228.650	868.019		0.0132250	303.131	0.0000149945
+33.0000	231.450	748.228		0.0112620	304.982	0.0000151491
+34.0000	234.250	646.122		0.00960889	306.821	0.0000153029
+35.0000	237.050	558.924		0.00821392	308.649	0.0000154559
+36.0000	239.850	484.317		0.00703441	310.467	0.0000156082
+37.0000	242.650	420.367		0.00603513	312.274	0.0000157596
+38.0000	245.450	365.455		0.00518691	314.070	0.0000159104
+39.0000	248.250	318.220		0.00446557	315.856	0.0000160603
+40.0000	251.050	277.522		0.00385101	317.633	0.0000162096
+41.0000	253.850	242.395		0.00332648	319.399	0.0000163581
+42.0000	256.650	212.030		0.00287802	321.156	0.0000165058
+43.0000	259.450	185.738		0.00249393	322.903	0.0000166529
+44.0000	262.250	162.937		0.00216443	324.641	0.0000167992
+45.0000	265.050	143.135		0.00188129	326.369	0.0000169449
+46.0000	267.850	125.910		0.00163760	328.088	0.0000170898
+47.0000	270.650	110.906		0.00142753	329.799	0.0000172341
+48.0000	270.650	97.7545		0.00125825	329.799	0.0000172341
+49.0000	270.650	86.1623		0.00110904	329.799	0.0000172341
+50.0000	270.650	75.9448		0.000977525	329.799	0.0000172341
+51.0000	270.650	66.9389		0.000861606	329.799	0.0000172341
+52.0000	267.850	58.9622		0.000766867	328.088	0.0000170898
+53.0000	265.050	51.8668		0.000681710	326.369	0.0000169449
+54.0000	262.250	45.5632		0.000605252	324.641	0.0000167992
+55.0000	259.450	39.9700		0.000536684	322.903	0.0000166529
+56.0000	256.650	35.0137		0.000475263	321.156	0.0000165058
+57.0000	253.850	30.6274		0.000420311	319.399	0.0000163581
+58.0000	251.050	26.7509		0.000371207	317.633	0.0000162096
+59.0000	248.250	23.3296		0.000327382	315.856	0.0000160603
+60.0000	245.450	20.3143		0.000288321	314.070	0.0000159104
+61.0000	242.650	17.6606		0.000253550	312.274	0.0000157596
+62.0000	239.850	15.3287		0.000222640	310.467	0.0000156082
+63.0000	237.050	13.2826		0.000195200	308.649	0.0000154559
+64.0000	234.250	11.4900		0.000170875	306.821	0.0000153029
+65.0000	231.450	9.92203		0.000149342	304.982	0.0000151491
+66.0000	228.650	8.55275		0.000130308	303.131	0.0000149945
+67.0000	225.850	7.35895		0.000113510	301.269	0.0000148390
+68.0000	223.050	6.31992		0.0000987069	299.396	0.0000146828
+69.0000	220.250	5.41717		0.0000856830	297.511	0.0000145258
+70.0000	217.450	4.63422		0.0000742430	295.614	0.0000143679
+71.0000	214.650	3.95642		0.0000642110	293.704	0.0000142092
+72.0000	212.650	3.37176		0.0000552370	292.333	0.0000140953
+73.0000	210.650	2.86917		0.0000474496	290.955	0.0000139810
+74.0000	208.650	2.43773		0.0000407010	289.570	0.0000138662
+75.0000	206.650	2.06792		0.0000348607	288.179	0.0000137510
+76.0000	204.650	1.75140		0.0000298135	286.781	0.0000136353
+77.0000	202.650	1.48092		0.0000254579	285.377	0.0000135192
+78.0000	200.650	1.25012		0.0000217046	283.965	0.0000134027
+79.0000	198.650	1.05351	        0.0000184751	282.546	0.0000132856
+80.0000	196.650	0.886280	0.0000157005	281.120	0.0000131682
+81.0000	194.650	0.744280	0.0000133205	279.687	0.0000130502
+82.0000	192.650	0.623905	0.0000112820	278.246	0.0000129318
+83.0000	190.650	0.522037	0.00000953899	276.798	0.0000128129
+84.0000	188.650	0.435981	0.00000805098	275.343	0.0000126935
+85.0000	186.946	0.363420	0.00000677222	274.096	0.0000125915
+86.0000	186.946	0.302723	0.00000564114	274.096	0.0000125915
diff --git a/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_plevel.nc b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_plevel.nc
new file mode 100644
index 0000000..bf589ca
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_plevel.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_zlevel.nc b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_zlevel.nc
new file mode 100644
index 0000000..05e7873
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/Standard_Atmosphere_zlevel.nc differ
diff --git a/CASES/CINDY-DYNAMO/COCOA/convert.py b/CASES/CINDY-DYNAMO/COCOA/convert.py
new file mode 100644
index 0000000..3e5d383
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/convert.py
@@ -0,0 +1,221 @@
+import cdms2
+import MV2
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+nt = 728
+dt = 3*3600
+
+nlev = 41
+
+lat = [0.1,]
+lat = cdms2.createAxis(lat)
+lat.designateLatitude()
+lat.id = 'lat'
+
+lon =[80.5,]
+lon = cdms2.createAxis(lon)
+lon.designateLongitude()
+lon.id = 'lon'
+
+time = MV2.zeros(nt,typecode=MV2.float32)
+tunits = 'seconds since 2011-10-2 0:0:0.0'
+time = cdms2.createAxis(time)
+time.id = 'time'
+time.designateTime()
+time.units = tunits
+time.calendar = 'gregorian'
+for it in range(0,nt):
+  time[it] = it*dt    
+
+lev = MV2.array(range(0,nlev),typecode=MV2.float32)
+lev = cdms2.createAxis(lev)
+lev.id = 'lev'
+lev.designateLevel()
+lev.long_name = 'level number'
+lev.units = '-'
+
+
+
+f = cdms2.open('rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf')
+
+data = {}
+for var in f.listvariables():
+  data[var] = f(var)
+
+f.close()
+
+datanew = {}
+
+variables3D = ['u','v','T','q','omega','T_adv_h','q_adv_h','q1','q2']
+variables2D = ['LH','SH','prec_srf','T_skin','q_srf','omega_srf','u_srf','v_srf','T_srf','p_srf_aver']
+
+coefs = {}
+for var in variables2D+variables3D:
+    coefs[var] = 1
+
+coefs['q'] = 1./1000.
+coefs['omega'] = 100/3600.
+coefs['T_adv_h'] = 1/3600.
+coefs['q_adv_h'] = 1/3600./1000.
+coefs['q1'] = 1/3600.*86400
+coefs['q2'] = 1/3600.*86400
+coefs['prec_srf'] = 24.
+coefs['p_srf_aver'] = 100.
+
+newvariables3D = ['u','v','temp','qv','omega','tadvh','qadvh','Q1','Q2']
+newvariables2D = ['sfc_lat_flx','sfc_sens_flx','pr','ts','ps']
+
+dico = {}
+dico['u'] = 'u'
+dico['v'] = 'v'
+dico['temp'] = 'T'
+dico['qv'] = 'q'
+dico['omega'] = 'omega'
+dico['tadvh'] = 'T_adv_h'
+dico['qadvh'] = 'q_adv_h'
+dico['Q1'] = 'q1'
+dico['Q2'] = 'q2'
+dico['ps'] = 'p_srf_aver'
+dico['ts'] = 'T_skin'
+dico['pr'] = 'prec_srf'
+dico['sfc_lat_flx'] = 'LH'
+dico['sfc_sens_flx'] = 'SH'
+
+names = {}
+names['temp'] = 'Temperature'
+names['qv'] = 'Specific Humidity'
+names['u'] = 'Zonal Wind'
+names['v'] = 'Meridional Wind'
+names['tadvh'] = 'Horizontal Temperature Advection'
+names['qadvh'] = 'Horizontal Specific Humidity Advection'
+names['omega'] = 'Vertical Pressure Velocity'
+names['ps'] = 'Surface Pressure'
+names['pressure'] = 'Pressure'
+names['ts'] = 'Surface Temperature'
+names['Q1'] = 'Q1'
+names['Q2'] = 'Q2'
+names['sfc_lat_flx'] = 'Latent heat flux'
+names['sfc_sens_flx'] = 'Sensible heat flux'
+names['pr'] = 'Precipitation'
+
+units = {}
+units['pressure'] = 'Pa'
+units['u'    ] = 'm/s'
+units['v'    ] = 'm/s'
+units['omega'] = 'Pa/s'
+units['temp' ] = 'K'
+units['qv'   ] = 'kg/kg'
+units['tadvh' ] = 'K/s'
+units['qadvh' ] = 'kg/kg/s'
+units['Q1'   ] = 'K/day'
+units['Q2'   ] = 'K/day'
+units['pr'] = 'mm/day'
+units['sfc_lat_flx'] = 'W/m2'
+units['sfc_sens_flx'] = 'W/m2'
+units['ps'] = 'Pa'
+units['ts'] = 'K'
+
+tmp = data['u'].getLevel()
+pres = MV2.zeros((nt,nlev,1,1),typecode=MV2.float32)
+pres[:,0,0,0] = data['p_srf_aver'][:]*100.
+for it in range(0,nt):
+  pres[it,1:,0,0] = tmp[1:]*100.
+
+pres.id = 'pressure'
+pres.title = names['pressure']
+pres.units = 'Pa'
+pres.setAxis(0,time)
+pres.setAxis(1,lev)
+pres.setAxis(2,lat)
+pres.setAxis(3,lon)
+
+datanew['pressure'] = pres
+
+for var in newvariables2D:
+  tmp = MV2.reshape(data[dico[var]],(nt,1,1))*coefs[dico[var]]
+  if var == 'ts':
+      tmp = tmp + 273.15
+
+  for att in tmp.listattributes():
+      tmp.deleteattribute(att)
+  tmp.setAxis(0,time)
+  tmp.setAxis(1,lat)
+  tmp.setAxis(2,lon)
+
+  tmp.id = var
+  tmp.title = names[var]
+  tmp.units = units[var]
+
+  datanew[var] = tmp
+
+
+
+for var in newvariables3D:
+  tmp = MV2.reshape(data[dico[var]],(nt,nlev,1,1))*coefs[dico[var]]
+  for att in tmp.listattributes():
+      tmp.deleteattribute(att)
+  tmp.setAxis(0,time)
+  tmp.setAxis(1,lev)
+  tmp.setAxis(2,lat)
+  tmp.setAxis(3,lon)
+
+  tmp.id = var
+  tmp.title = names[var]
+  tmp.units = units[var]
+
+  datanew[var] = tmp
+
+datanew['u'][:,0,0,0] = data['u_srf'][:]
+datanew['v'][:,0,0,0] = data['v_srf'][:] 
+datanew['omega'][:,0,0,0] = data['omega_srf'][:]*coefs['omega']
+datanew['temp'][:,0,0,0] = data['T_srf'][:] + 273.15
+datanew['qv'][:,0,0,0] = data['q_srf'][:]
+
+g = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR.nc','w')
+
+for var in newvariables2D+newvariables3D+['pressure',]:
+  print var
+  g.write(datanew[var])
+
+
+g.comment = 'Forcing and initial conditions for CINDY-DYNAMO Revelle ARM-CSU (50 km) case'
+g.reference = 'TBD'
+g.author = 'R. Roehrig'
+
+
+g.case = 'CINDY-DYNAMO - Revelle ARM-CSU (50 km)'
+g.startDate = '20111002000000'
+g.endDate = '20111231210000'
+
+g.qadvh = 1
+g.tadvh = 1
+g.tadvv = 0
+g.qadvv = 0
+g.trad = 0
+
+g.forc_omega = 1
+g.forc_w = 0
+
+g.forc_geo = 0
+
+g.nudging_u = 10800
+g.nudging_v = 10800
+g.nudging_t = 10800
+g.nudging_q = 10800
+
+g.p_nudging_u = 110000
+g.p_nudging_v = 110000
+g.p_nudging_t = 10000
+g.p_nudging_q = 10000
+
+
+g.zorog = 0.
+g.z0 = 0.1
+g.surfaceType = 'ocean'
+g.surfaceForcing = 'ts'
+
+g.close()
+
diff --git a/CASES/CINDY-DYNAMO/COCOA/convertStandardAtm.py b/CASES/CINDY-DYNAMO/COCOA/convertStandardAtm.py
new file mode 100644
index 0000000..7969f0f
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/convertStandardAtm.py
@@ -0,0 +1,82 @@
+import cdms2
+import MV2
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+nlev = 87
+
+lev = MV2.array(range(0,nlev),typecode=MV2.float32)
+lev = cdms2.createAxis(lev)
+lev.id = 'lev'
+lev.designateLevel()
+lev.long_name = 'Altitude'
+lev.units = 'km'
+
+
+variables = ['zz','temp','pp','rho']
+
+units = {}
+units['zz'  ] = 'km'
+units['temp'] = 'K'
+units['pp'  ] = 'Pa'
+units['rho' ] = 'kg/m3'
+
+names = {}
+names['zz'  ] = 'Altitude'
+names['temp'] = 'Air Temperature'
+names['pp'  ] = 'Pressure'
+names['rho' ] = 'Air density'
+
+data = {}
+for var in variables:
+  data[var] = MV2.zeros(nlev,typecode=MV2.float32)
+
+f = open('Standard_Atmosphere_1979.txt')
+f.readline()
+f.readline()
+
+for ilev in range(0,nlev):
+  line = f.readline().split()
+  data['zz'  ][ilev] = float(line[0])
+  data['temp'][ilev] = float(line[1])
+  data['pp'  ][ilev] = float(line[2])
+  data['rho' ][ilev] = float(line[3])
+
+f.close()
+
+for var in variables:
+  data[var].setAxis(0,lev)
+  data[var].id = var
+  data[var].units = units[var]
+  data[var].long_name = names[var]
+
+g = cdms2.open('Standard_Atmosphere_zlevel.nc','w')
+for var in variables:
+  g.write(data[var])
+
+g.source = 'http://www.digitaldutch.com/atmoscalc/tableatmosphere.htm'
+
+g.close()
+
+lev = cdms2.createAxis(MV2.array(data['pp'],typecode=MV2.float32))
+lev.id = 'lev'
+lev.designateLevel()
+lev.long_name = 'Pressure'
+lev.units = 'Pa'
+
+
+for var in variables:
+  data[var].setAxis(0,lev)
+  data[var].id = var
+  data[var].units = units[var]
+  data[var].long_name = names[var]
+
+g = cdms2.open('Standard_Atmosphere_plevel.nc','w')
+for var in variables:
+  g.write(data[var])
+
+g.source = 'http://www.digitaldutch.com/atmoscalc/tableatmosphere.htm'
+
+g.close()
diff --git a/CASES/CINDY-DYNAMO/COCOA/extend.py b/CASES/CINDY-DYNAMO/COCOA/extend.py
new file mode 100644
index 0000000..f067953
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/extend.py
@@ -0,0 +1,162 @@
+import cdms2
+import MV2
+import cdtime
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+
+latmin = -0.5
+latmax = 0.5
+lonmin = 80
+lonmax = 81
+levmin = 14.
+levmax = 0.
+
+
+f = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR.nc')
+variables = f.listvariables()
+
+f1 = cdms2.open('/Users/romainroehrig/data/CINDY-DYNAMO/ERAI/thermo_ERAI_6hourly.nc')
+ta = f1('t', latitude = (latmin,latmax), longitude = (lonmin,lonmax), level = (levmin,levmax))
+ta = MV2.average(ta,axis=3)
+ta = MV2.average(ta,axis=2)
+
+nlevp = ta.shape[1]
+levp = ta.getLevel()
+
+hus = f1('q', latitude = (latmin,latmax), longitude = (lonmin,lonmax), level = (levmin,levmax))
+hus = MV2.average(hus,axis=3)
+hus = MV2.average(hus,axis=2)
+
+
+
+fw = cdms2.open('/Users/romainroehrig/data/CINDY-DYNAMO/ERAI/wind_ERAI_6hourly.nc')
+ua = fw('u', latitude = (latmin,latmax), longitude = (lonmin,lonmax), level = (levmin,levmax))
+ua = MV2.average(ua,axis=3)
+ua = MV2.average(ua,axis=2)
+
+va = fw('v', latitude = (latmin,latmax), longitude = (lonmin,lonmax), level = (levmin,levmax))
+va = MV2.average(va,axis=3)
+va = MV2.average(va,axis=2)
+
+wap = fw('w', latitude = (latmin,latmax), longitude = (lonmin,lonmax), level = (levmin,levmax))
+wap = MV2.average(wap,axis=3)
+wap = MV2.average(wap,axis=2)
+
+
+
+f2 = cdms2.open('Standard_Atmosphere_plevel.nc')
+ta2 = f2('temp',level=(101,0))
+zz2 = f2('zz',level=(101,0))*1000.
+
+nlevp2 = ta2.shape[0]
+levp2 = ta2.getLevel()
+
+
+dataext = {}
+dataext['temp'] = ta
+dataext['u'] = ua
+dataext['v'] = va
+dataext['omega'] = wap
+dataext['qv'] = hus
+
+dataext2 = {}
+dataext2['temp'] = ta2
+
+g = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc','w')
+
+pp = f('pressure')
+nt,nlev,nlat,nlon = pp.shape
+time = pp.getTime()
+lev = pp.getLevel()
+lat = pp.getLatitude()
+lon = pp.getLongitude()
+levnew = MV2.array(range(0,nlev+nlevp+nlevp2),typecode=MV2.int)
+levnew = cdms2.createAxis(levnew)
+levnew.designateLevel()
+levnew.id = 'lev'
+levnew.units = '-'
+levnew.long_name = 'level number'
+
+for var in variables:
+  print var
+  data = f(var)
+  if len(data.shape) == 3:
+    g.write(data)
+  elif len(data.shape) == 4:
+    data = f(var)
+    datanew = MV2.zeros((nt,nlev+nlevp+nlevp2,nlat,nlon),typecode=MV2.float)
+    datanew[:,0:nlev,:,:] = data[:,:,:,:]
+    if var == 'pressure':
+      for ilev in range(0,nlevp):
+        datanew[:,nlev+ilev,:,:] = datanew[:,nlev+ilev,:,:] + levp[ilev]
+      for ilev in range(0,nlevp2):
+        datanew[:,nlev+nlevp+ilev,:,:] = datanew[:,nlev+nlevp+ilev,:,:] + levp2[ilev]/100.
+    elif var in ['temp','u','v','qv']:	    
+      for it in range(0,nt):
+        tt = cdtime.reltime(time[it],time.units)
+	if time[it] % 21600 == 0:
+          for ilev in range(0,nlevp):
+            datanew[it,nlev+ilev,:,:] = datanew[it,nlev+ilev,:,:]+dataext[var](time = tt)[0,ilev]
+	else:
+          for ilev in range(0,nlevp):
+            t1 = tt.add(-3,cdtime.Hour)		  
+	    t2 = tt.add(3,cdtime.Hour)
+            datanew[it,nlev+ilev,:,:] = datanew[it,nlev+ilev,:,:]+(dataext[var](time = t1)[0,ilev]+dataext[var](time = t2)[0,ilev])/2.
+      if var in ['temp']:
+        for ilev in range(0,nlevp2):	      
+          datanew[:,nlev+nlevp+ilev,:,:] = datanew[:,nlev+nlevp+ilev,:,:] + dataext2[var][ilev]
+
+    datanew.setAxis(0,time)
+    datanew.setAxis(1,levnew)
+    datanew.setAxis(2,lat)
+    datanew.setAxis(3,lon)
+    datanew.id = data.id
+    datanew.title = data.title
+    datanew.units = data.units
+    datanew.missing_value = data.missing_value
+
+    g.write(datanew)
+
+
+
+g.comment = 'Forcing and initial conditions for CINDY-DYNAMO Revelle ARM-CSU (50 km) case'
+g.reference = 'TBD'
+g.author = 'R. Roehrig'
+
+g.case = 'CINDY-DYNAMO - Revelle ARM (50 km)'
+g.startDate = '20111002000000'
+g.endDate = '20111231210000'
+
+g.qadvh = 1
+g.tadvh = 1
+g.tadvv = 0
+g.qadvv = 0
+g.trad = 0
+
+g.forc_omega = 1
+g.forc_w = 0
+
+g.forc_geo = 0
+
+g.nudging_u = 10800
+g.nudging_v = 10800
+g.nudging_t = 10800
+g.nudging_q = 10800
+
+g.p_nudging_u = 110000
+g.p_nudging_v = 110000
+g.p_nudging_t = 10000
+g.p_nudging_q = 10000
+
+
+g.zorog = 0.
+g.z0 = 0.1
+
+g.surfaceType = 'ocean'
+g.surfaceForcing = 'ts'
+
+g.close()
+f.close()
diff --git a/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13-22Nov.py b/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13-22Nov.py
new file mode 100644
index 0000000..8c16970
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13-22Nov.py
@@ -0,0 +1,62 @@
+import cdms2
+import cdtime
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+tmin = cdtime.comptime(2011,11,13,0,0,0)
+tmax = cdtime.comptime(2011,11,23,0,0,0)
+
+f = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc')
+variables = f.listvariables()
+
+g = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU-13-22Nov_50km_driver_RR_extended.nc','w')
+
+for var in variables:
+  print var
+  data = f(var,time = (tmin,tmax))
+
+  g.write(data)
+
+g.comment = 'Forcing and initial conditions for CINDY-DYNAMO Revelle ARM-CSU (50 km) 13 November case'
+g.reference = 'TBD'
+g.author = 'R. Roehrig'
+
+
+g.case = 'CINDY-DYNAMO - Revelle ARM-CSU-13Nov (50 km)'
+g.startDate = '20111113000000'
+g.endDate = '20111123000000'
+
+g.qadvh = 1
+g.tadvh = 1
+g.tadvv = 0
+g.qadvv = 0
+g.trad = 0
+
+g.forc_omega = 1
+g.forc_w = 0
+
+g.forc_geo = 0
+
+g.nudging_u = 10800
+g.nudging_v = 10800
+g.nudging_t = 10800
+g.nudging_q = 10800
+
+g.p_nudging_u = 110000
+g.p_nudging_v = 110000
+g.p_nudging_t = 10000
+g.p_nudging_q = 10000
+
+
+g.zorog = 0.
+g.z0 = 0.1
+g.surfaceType = 'ocean'
+g.surfaceForcing = 'ts'
+
+
+g.close()
+f.close()
+
+
diff --git a/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13Nov.py b/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13Nov.py
new file mode 100644
index 0000000..0c98286
--- /dev/null
+++ b/CASES/CINDY-DYNAMO/COCOA/extract_CSU_13Nov.py
@@ -0,0 +1,62 @@
+import cdms2
+import cdtime
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+tmin = cdtime.comptime(2011,11,13,0,0,0)
+tmax = cdtime.comptime(2011,11,14,0,0,0)
+
+f = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc')
+variables = f.listvariables()
+
+g = cdms2.open('CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_50km_driver_RR_extended.nc','w')
+
+for var in variables:
+  print var
+  data = f(var,time = (tmin,tmax))
+
+  g.write(data)
+
+g.comment = 'Forcing and initial conditions for CINDY-DYNAMO Revelle ARM-CSU (50 km) 13 November case'
+g.reference = 'TBD'
+g.author = 'R. Roehrig'
+
+
+g.case = 'CINDY-DYNAMO - Revelle ARM-CSU-13Nov (50 km)'
+g.startDate = '20111113000000'
+g.endDate = '20111114000000'
+
+g.qadvh = 1
+g.tadvh = 1
+g.tadvv = 0
+g.qadvv = 0
+g.trad = 0
+
+g.forc_omega = 1
+g.forc_w = 0
+
+g.forc_geo = 0
+
+g.nudging_u = 10800
+g.nudging_v = 10800
+g.nudging_t = 10800
+g.nudging_q = 10800
+
+g.p_nudging_u = 110000
+g.p_nudging_v = 110000
+g.p_nudging_t = 10000
+g.p_nudging_q = 10000
+
+
+g.zorog = 0.
+g.z0 = 0.1
+g.surfaceType = 'ocean'
+g.surfaceForcing = 'ts'
+
+
+g.close()
+f.close()
+
+
diff --git a/CASES/CINDY-DYNAMO/COCOA/rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf b/CASES/CINDY-DYNAMO/COCOA/rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf
new file mode 100644
index 0000000..15d25cc
Binary files /dev/null and b/CASES/CINDY-DYNAMO/COCOA/rev180varanaecmwfanaradar50kmC1.c1.20111001.000000.cdf differ
diff --git a/CASES/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc b/CASES/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc
index cd444e0..202ded1 100644
Binary files a/CASES/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc and b/CASES/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc differ
diff --git a/CASES/CINDY-DYNAMO/NSA3a/convertDEPHY2_flux.py b/CASES/CINDY-DYNAMO/NSA3a/convertDEPHY2_flux.py
index 4fef300..d255eaf 100644
--- a/CASES/CINDY-DYNAMO/NSA3a/convertDEPHY2_flux.py
+++ b/CASES/CINDY-DYNAMO/NSA3a/convertDEPHY2_flux.py
@@ -68,8 +68,8 @@ g.author = 'R. Roehrig'
 
 g.case = 'CINDY-DYNAMO - NSA3a - flux forcing'
 g.startDate = '20111001000000'
-g.endDate = '20111231210000'
-#g.endDate =   '20111031210000'
+g.endDate =   '20111231210000'
+#g.endDate =   '20111030000000'
 
 g.qadvh = 1
 g.tadvh = 1
diff --git a/CASES/EMS_cases.py b/CASES/EMS_cases.py
index 0fa246f..2832d5c 100644
--- a/CASES/EMS_cases.py
+++ b/CASES/EMS_cases.py
@@ -45,15 +45,11 @@ data_input[case]['OA_FLUX_USTAR'] = rep0 + '/GABLS4/Olivier/GABLS4_24h_driver_FC
 # AYOTTE Cases
 case = 'AYOTTE'
 cases.append(case)
-subcases[case] = ['00SC','00WC','03SC','05SC','05WC','24F','24SC','24SC_us','24SC_modif','24SC_modif_us']
+subcases[case] = ['00SC','00WC','03SC','05SC','05WC','24F','24SC']
 data_input[case] = {}
 for cc in subcases[case]:
   data_input[case][cc] = rep0 + '/AYOTTE/AYOTTE_A{0}_driver_FC_RR.nc'.format(cc)
 
-data_input[case]['24SC_us'] = rep0 + '/AYOTTE/AYOTTE_A24SC_driver_FC_RR_us.nc'.format(cc)
-data_input[case]['24SC_modif'] = rep0 + '/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR.nc'.format(cc)
-data_input[case]['24SC_modif_us'] = rep0 + '/AYOTTE/AYOTTE_A24SC_modif_driver_FC_RR_us.nc'.format(cc)
-
 # IHOP Cases
 case = 'IHOP'
 cases.append(case)
@@ -95,9 +91,11 @@ data_input[case]['REF'] = rep0 + '/RICO/rico_driver_RR.nc'
 # ARMCU Case
 case = 'ARMCU'
 cases.append(case)
-subcases[case] = ['REF']
+subcases[case] = ['REF','DEPHY']
+#subcases[case] = ['REF']
 data_input[case] = {}
 data_input[case]['REF'] = rep0 + '/ARMCu/ARMCu_driver_RR.nc'
+data_input[case]['DEPHY'] = rep0 + '/ARMCu/ARMCu_driver_RR_new.nc'
 
 # BOMEX Case
 case = 'BOMEX'
@@ -175,6 +173,9 @@ cases.append(case)
 subcases[case] = ['NSA3aflux']
 #subcases[case] = ['Revelle-ARM-CSU-13Nov']
 #subcases[case] = ['Revelle-PE-13Nov']
+#subcases[case] = ['COCOA-13Nov']
+#subcases[case] = ['COCOA-13-22Nov']
+#subcases[case] = ['COCOA']
 data_input[case] = {}
 data_input[case]['NSA3a'] = rep0 + '/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3a_driver_RR.nc'
 data_input[case]['NSA3aflux'] = rep0 + '/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc'
@@ -182,6 +183,9 @@ data_input[case]['SSA3a'] = rep0 + '/CINDY-DYNAMO/SSA3a/cindy-dynamo-SSA3a_drive
 data_input[case]['Revelle-ARM-CSU-leg3'] = rep0 + '/CINDY-DYNAMO/RevelleARM1/CINDY-DYNAMO_Revelle-ARM-CSU-leg3_driver_RR_extended.nc'
 data_input[case]['Revelle-ARM-CSU-13Nov'] = rep0 + '/CINDY-DYNAMO/RevelleARM1/CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_driver_RR_extended.nc'
 data_input[case]['Revelle-PE-13Nov'] = rep0 + '/CINDY-DYNAMO/RevellePE/CINDY-DYNAMO_Revelle-PE-13Nov_driver_RR.nc'
+data_input[case]['COCOA'] = rep0 + '/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU_50km_driver_RR_extended.nc'
+data_input[case]['COCOA-13Nov'] = rep0 + '/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13Nov_50km_driver_RR_extended.nc'
+data_input[case]['COCOA-13-22Nov'] = rep0 + '/CINDY-DYNAMO/COCOA/CINDY-DYNAMO_Revelle-ARM-CSU-13-22Nov_50km_driver_RR_extended.nc'
 
 # Derbyshire cases
 case = 'Derbyshire'
diff --git a/CASES/IHOP/IHOP_driver_FC_RR.nc b/CASES/IHOP/IHOP_driver_FC_RR.nc
index 6ce059a..ed32a7a 100644
Binary files a/CASES/IHOP/IHOP_driver_FC_RR.nc and b/CASES/IHOP/IHOP_driver_FC_RR.nc differ
diff --git a/CASES/IHOP/convert.py b/CASES/IHOP/convert.py
index 4d65ec5..fc39e6f 100644
--- a/CASES/IHOP/convert.py
+++ b/CASES/IHOP/convert.py
@@ -80,7 +80,7 @@ lon.designateLongitude()
 lon.id = 'lon'
 lon.units = 'degrees_east'
 
-lev = [0, 16, 51.4, 76, 86.9, 122.6, 124, 158.4, 174, 212.3, 225, 274, 284.7, 325, 357.7, 375, 425, 431.2, 475, 505.2, 525, 574, 579.9, 624, 655.1, 674, 725, 769, 774, 825, 874, 923.1, 925, 974, 1025, 1075, 1079.8, 1125, 1175, 1225, 1239, 1275, 1324, 1374, 1401, 1424, 1474, 1524, 1575, 1586.6, 1625, 1675, 1725, 1774, 1797.2, 1825, 1874, 1924, 1974, 2025, 2075, 2122.2, 2124, 2176, 2225, 2275, 2325, 2375, 2426, 2475, 2524, 2574.1, 2575, 2624, 2675, 2725, 2775, 2824, 2875, 2923, 2974, 3024, 3049.3, 3075, 3125, 3176, 3225, 3275, 3324, 3375, 3424, 3475, 3525, 3574, 3625, 3675, 3723, 3774, 3811.9, 3824, 3873, 3924, 3974, 4025, 4075, 4125, 4175, 4218, 4274.9, 4325.6, 4374.5, 4425.7, 4474.9, 4500, 4525.6, 4574.5, 4625, 4674.5, 4724.8, 4774.9, 4823.4, 4874.5, 4925.3, 4974.5]
+lev = [0, 16, 51.4, 76, 86.9, 122.6, 124, 158.4, 174, 212.3, 225, 274, 284.7, 325, 357.7, 375, 425, 431.2, 475, 505.2, 525, 574, 579.9, 624, 655.1, 674, 725, 769, 774, 825, 874, 923.1, 925, 974, 1025, 1075, 1079.8, 1125, 1175, 1225, 1239, 1275, 1324, 1374, 1401, 1424, 1474, 1524, 1575, 1586.6, 1625, 1675, 1725, 1774, 1797.2, 1825, 1874, 1924, 1974, 2025, 2075, 2122.2, 2124, 2176, 2225, 2275, 2325, 2375, 2426, 2475, 2524, 2574.1, 2575, 2624, 2675, 2725, 2775, 2824, 2875, 2923, 2974, 3024, 3049.3, 3075, 3125, 3176, 3225, 3275, 3324, 3375, 3424, 3475, 3525, 3574, 3625, 3675, 3723, 3774, 3811.9, 3824, 3873, 3924, 3974, 4025, 4075, 4125, 4175, 4218, 4274.9, 4325.6, 4374.5, 4425.7, 4474.9, 4500, 4525.6, 4574.5, 4625, 4674.5, 4724.8, 4774.9, 4823.4, 4874.5, 4925.3, 4974.5, 6000, 10000, 15000]
 nlev = len(lev)
 lev = MV2.array(lev,typecode=MV2.float32)
 lev = cdms2.createAxis(lev)
@@ -91,7 +91,7 @@ lev.positive = 'up'
 
 
 variables0D = [] #['orog']
-variables2D = ['sfc_lat_flx','sfc_sens_flx','ps']
+variables2D = ['sfc_lat_flx','sfc_sens_flx','ps','ts']
 variables3D = ['pressure','th','qv','temp','u','v','thadvh','qadvh','w','ug','vg']
 
 variables = variables3D + variables2D + variables0D
@@ -109,6 +109,7 @@ units['sfc_lat_flx'] = 'W m-2'
 units['sfc_sens_flx'] = 'W m-2'
 units['orog'] = 'm'
 units['ps'] = 'Pa'
+units['ts'] = 'K'
 units['w'] = 'm s-1'
 units['qadvh'] = 'kg kg-1 s-1'
 units['thadvh'] = 'K s-1'
@@ -129,6 +130,7 @@ names['sfc_sens_flx'] = 'Surface sensible heat flux'
 names['ustar'] = 'Surface ustar'
 names['orog'] = 'Surface orography'
 names['ps'] = 'Surface pressure'
+names['ts'] = 'Surface temperature'
 names['w'] = 'Vertical velocity'
 names['qadvh'] = 'Specific Humidity horizontal advection'
 names['thadvh'] = 'Potential temperature horizontal advection'
@@ -197,14 +199,33 @@ for var in variables3D:
 #      for it2 in range(0,6):
 #        datanew[var][it1*6+it2,ilev,0,0] = tmp[it1] + (tmp[it1+1]-tmp[it1])*it2/6. 
     datanew[var][:,ilev,0,0] = tmp[:]
+    if var == 'qv' and not(lflag):
+        datanew[var][:,ilev,0,0] = 0.
 
 
+nt,nlev,x,y = datanew['temp'].shape
+#10000 m
+datanew['pressure'][:,-2,0,0] = datanew['pressure'][:,-2,0,0]*0. + 30000.
+datanew['u'][:,-2,0,0] = datanew['u'][:,-2,0,0]*0.
+datanew['v'][:,-2,0,0] = datanew['v'][:,-2,0,0]*0.
+
+#15000 m
+datanew['pressure'][:,-1,0,0] = datanew['pressure'][:,-1,0,0]*0. + 10000.
+datanew['u'][:,-1,0,0] = datanew['u'][:,-1,0,0]*0.
+datanew['v'][:,-1,0,0] = datanew['v'][:,-1,0,0]*0.
+
+for ilev in range(0,nlev):
+  for it in range(0,nt):
+    datanew['temp'][it,ilev,0,0] = datanew['th'][it,ilev,0,0]*(datanew['pressure'][it,ilev,0,0]/100000.)**(2./7.) 
+
 for var in ['sfc_lat_flx','sfc_sens_flx']:
     time0 = data[var].getAxis(0)
     ff = interpolate.interp1d(np.array(time0[:]),np.array(data[var][:]))
     datanew[var][0:nt,0,0] = ff(np.array(time[:]))
 
 
+datanew['ts'] = datanew['sfc_lat_flx']*0. + 320.
+
 datanew['ps'][:,0,0] = datanew['ps'][:,0,0] + data['ps']
 #datanew['orog'][0,0] = datanew['orog'][0,0] + data['orog']
 
diff --git a/Examples/config/config_arp631_CMIP6.py b/Examples/config/config_arp631_CMIP6.py
index bff28f7..84da07a 100644
--- a/Examples/config/config_arp631_CMIP6.py
+++ b/Examples/config/config_arp631_CMIP6.py
@@ -4,8 +4,8 @@ rep0 = os.getenv('REP_MUSC')
 
 config = 'CMIP6'
 cycle = 'arp631'
-MASTER = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/MASTER'
-PGD = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/PGD'
-PREP = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/PREP'
+MASTER = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin//MASTERODB'
+PGD = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin/PGD'
+PREP = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin/PREP'
 namATMref = rep0 + '/namelist/ARPCLIMAT/nam.atm.tl127l91r.CMIP6.v631'
 namSFXref = rep0 + '/namelist/SURFEX/nam.sfx.tl127.CMIP6.v631'
diff --git a/UTIL/Init_Forc/ARPCLIMAT/L105.dta b/UTIL/Init_Forc/ARPCLIMAT/L105.dta
deleted file mode 100644
index 03c54f5..0000000
--- a/UTIL/Init_Forc/ARPCLIMAT/L105.dta
+++ /dev/null
@@ -1,106 +0,0 @@
-0.0000000000 0.0000000000
-20.0000000000 0.0000000000
-30.0900250000 0.0000000000
-44.5725840000 0.0000000000
-64.8628530000 0.0000000000
-93.1103600000 0.0000000000
-132.4434150000 0.0000000000
-187.5408470000 0.0000000000
-263.8034090000 0.0000000000
-367.6816280000 0.0000000000
-506.5629410000 0.0000000000
-688.3795370000 0.0000000000
-920.8414950000 0.0000000000
-1207.5043340000 0.0000000000
-1549.8119420000 0.0000000000
-1947.2420910000 0.0000000000
-2396.5235870000 0.0000000000
-2892.3116290000 0.0000000000
-3428.5026540000 0.0000000000
-4000.0875360000 0.0000000000
-4605.3774870000 0.0000000000
-5248.4628390000 0.0000000000
-5920.0241800000 0.0000000000
-6608.2946160000 0.0000000000
-7236.0611760000 0.0006583614
-7792.4414110000 0.0019866155
-8292.1713320000 0.0037586329
-8741.1175900000 0.0058592630
-9144.6929890000 0.0082085507
-9509.0644440000 0.0107558012
-9841.3383210000 0.0134825104
-10149.4364970000 0.0164075393
-10441.8470130000 0.0195935371
-10727.2842700000 0.0231554825
-11003.4669370000 0.0271081824
-11268.2827840000 0.0314653107
-11519.8068600000 0.0362398827
-11756.3103980000 0.0414449575
-11976.2581440000 0.0470945886
-12178.2920550000 0.0532050399
-12361.1999510000 0.0597962823
-12523.8678620000 0.0668937902
-12665.2149630000 0.0745306536
-12784.1100870000 0.0827500364
-12879.2685310000 0.0916080249
-12949.0554890000 0.1011642928
-12991.4073950000 0.1114385264
-13004.4792440000 0.1224324165
-12986.7986620000 0.1341542901
-12937.1816270000 0.1466112016
-12854.7154740000 0.1598096637
-12738.7333460000 0.1737565294
-12588.7811340000 0.1884600042
-12404.5783710000 0.2039307776
-12185.9748850000 0.2201832544
-11932.9053920000 0.2372368657
-11645.3444880000 0.2551174387
-11323.2647830000 0.2738586045
-10966.6012810000 0.2935032234
-10575.2255050000 0.3141048054
-10148.9334450000 0.3357289042
-9690.6880990000 0.3582970605
-9204.2649590000 0.3817170714
-8694.1628620000 0.4058838040
-8165.4851370000 0.4306804128
-7623.7956720000 0.4559799180
-7074.9562640000 0.4816470768
-6524.9524250000 0.5075404867
-5979.7161580000 0.5335148193
-5444.9536710000 0.5594231111
-4925.9860170000 0.5851190222
-4427.6095470000 0.6104589853
-3953.9817680000 0.6353041816
-3508.5366740000 0.6595222851
-3093.9314770000 0.6829889557
-2711.5357590000 0.7056187317
-2361.9465340000 0.7273414649
-2045.0561350000 0.7481027784
-1760.1383410000 0.7678642560
-1505.9465450000 0.7866034114
-1280.8556900000 0.8043104125
-1082.9531980000 0.8209878455
-910.1285930000 0.8366502626
-760.1566370000 0.8513236885
-630.8682130000 0.8650344412
-520.1356330000 0.8778133401
-425.9079910000 0.8896952320
-346.2388260000 0.9007185732
-279.3067050000 0.9109250642
-223.4294180000 0.9203593338
-177.0725550000 0.9290686684
-138.8532710000 0.9371027834
-107.5400440000 0.9445136304
-82.0492750000 0.9513552345
-61.5200200000 0.9576569759
-45.1846750000 0.9634485922
-32.3647680000 0.9687601101
-22.4659420000 0.9736217877
-14.9723630000 0.9780640672
-9.4407480000 0.9821175362
-5.4941910000 0.9858128963
-2.8159620000 0.9891809376
-1.1433960000 0.9922525186
-0.2620190000 0.9950585503
-0.0000000000 0.9976299837
-0.0000000000 1.0000000000
diff --git a/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so b/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so
index 6ba9413..f83c6d1 100755
Binary files a/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so and b/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so differ
diff --git a/UTIL/Init_Forc/ARPCLIMAT/prepare_forcing.py b/UTIL/Init_Forc/ARPCLIMAT/prepare_forcing.py
index f0f81d4..0898af8 100644
--- a/UTIL/Init_Forc/ARPCLIMAT/prepare_forcing.py
+++ b/UTIL/Init_Forc/ARPCLIMAT/prepare_forcing.py
@@ -36,7 +36,7 @@ ss2 = int(endDate[12:14])
 tend = cdtime.comptime(yyyy2,mm2,dd2,hh2,mi2,ss2)
 
 attributes = {}
-for att in ['tadvh','qdvh','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
+for att in ['tadvh','qadvh','qvadvh','qvadv','qvadvv','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
   attributes[att] = 0
 
 for att in f.listglobal():
@@ -56,12 +56,18 @@ if attributes['tadv'] == 1:
 if attributes['qadv'] == 1:
   variables3D.append('qadv')
   nt = f['qadv'].shape[0]
+if attributes['qvadv'] == 1:
+  variables3D.append('qvadv')
+  nt = f['qvadv'].shape[0]
 if attributes['tadvh'] == 1:
   variables3D.append('tadvh')
   nt = f['tadvh'].shape[0]
 if attributes['qadvh'] == 1:
   variables3D.append('qadvh')
   nt = f['qadvh'].shape[0]
+if attributes['qvadvh'] == 1:
+  variables3D.append('qvadvh')
+  nt = f['qvadvh'].shape[0]
 if attributes['qtadvh'] == 1:
   variables3D.append('qadvh')
   nt = f['qtadvh'].shape[0]
@@ -75,6 +81,8 @@ if attributes['tadvv'] == 1:
   variables3D.append('tadvv')	
 if attributes['qadvv'] == 1:
   variables3D.append('qadvv')	
+if attributes['qvadvv'] == 1:
+  variables3D.append('qvadvv')	
 if attributes['qtadvv'] == 1:
   variables3D.append('qadvv')
 if attributes['uadvv'] == 1:
@@ -122,14 +130,17 @@ for var in variables3D:
 names['ps'] = 'Ps'
 names['tadvh'] = 'dT'
 names['qadvh'] = 'dq'
+names['qvadvh'] = 'dq'
 names['uadvh'] = 'du'
 names['vadvh'] = 'dv'
 names['tadvv'] = 'dT'
 names['qadvv'] = 'dq'
+names['qvadvv'] = 'dq'
 names['uadvv'] = 'du'
 names['vadvv'] = 'dv'
 names['tadv'] = 'dT'
 names['qadv'] = 'dq'
+names['qvadv'] = 'dq'
 names['uadv'] = 'du'
 names['vadv'] = 'dv'
 names['u'] = 'u'
diff --git a/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py b/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
index 459b461..af44631 100644
--- a/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
+++ b/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
@@ -28,6 +28,8 @@ data_in = {}
 
 f = cdms2.open('data_input.nc')
 
+print f.listvariables()
+
 lat = f['temp'].getLatitude()[0]
 lon = f['temp'].getLongitude()[0]
 
@@ -35,7 +37,7 @@ t0 = f['temp'].getAxis(0)[0]
 units0 = f['temp'].getAxis(0).units
 
 attributes = {}
-for att in ['tadvh','qdvh','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
+for att in ['tadvh','qadvh','qvadvh','qvadv','qvadvv','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
   attributes[att] = 0
 
 for att in f.listglobal():
@@ -59,6 +61,9 @@ if attributes['tadv'] == 1:
 if attributes['qadv'] == 1:
   var2read.append('qadv')	
   var2interpol.append('qadv')
+if attributes['qvadv'] == 1:
+  var2read.append('qvadv')	
+  var2interpol.append('qvadv')
 if attributes['tadvh'] == 1:
   var2read.append('tadvh')	
   var2interpol.append('tadvh')
@@ -66,6 +71,9 @@ if attributes['tadvh'] == 1:
 if attributes['qadvh'] == 1:
   var2read.append('qadvh')	
   var2interpol.append('qadvh')
+if attributes['qvadvh'] == 1:
+  var2read.append('qvadvh')	
+  var2interpol.append('qvadvh')
 if attributes['qtadvh'] == 1:
   var2read.append('qtadvh')	
   var2interpol.append('qtadvh')
@@ -81,6 +89,9 @@ if attributes['tadvv'] == 1:
 if attributes['qadvv'] == 1:
   var2read.append('qadvv')	
   var2interpol.append('qadvv')
+if attributes['qvadvv'] == 1:
+  var2read.append('qvadvv')	
+  var2interpol.append('qadvv')
 if attributes['uadvv'] == 1:
   var2read.append('uadvv')	
   var2interpol.append('uadvv')
@@ -464,6 +475,14 @@ if lforc:
         print >>g, data_out['qadvh'][it,ilev]	  
     g.close()
 
+  if attributes['qvadvh'] == 1:
+    g = open(dirout + 'qvadvh_profiles_L' + str(nlev_out),'w')
+    for it in range(0,nt):
+      print >>g, 'Horizontal Specific Humidity Advection', int(dt*it) 
+      for ilev in range(0,nlev_out):
+        print >>g, data_out['qvadvh'][it,ilev]	  
+    g.close()
+
   if attributes['qtadvh'] == 1:
     g = open(dirout + 'qadvh_profiles_L' + str(nlev_out),'w')
     for it in range(0,nt):
@@ -504,6 +523,14 @@ if lforc:
         print >>g, data_out['qadvv'][it,ilev]	  
     g.close()
 
+  if attributes['qvadvv'] == 1:
+    g = open(dirout + 'qvadvv_profiles_L' + str(nlev_out),'w')
+    for it in range(0,nt):
+      print >>g, 'Vertical Specific Humidity Advection', int(dt*it)
+      for ilev in range(0,nlev_out):
+        print >>g, data_out['qvadvv'][it,ilev]	  
+    g.close()
+
   if attributes['tadv'] == 1:
     g = open(dirout + 'tadv_profiles_L' + str(nlev_out),'w')
     for it in range(0,nt):
@@ -520,6 +547,14 @@ if lforc:
         print >>g, data_out['qadv'][it,ilev]	  
     g.close()
 
+  if attributes['qvadv'] == 1:
+    g = open(dirout + 'qvadv_profiles_L' + str(nlev_out),'w')
+    for it in range(0,nt):
+      print >>g, 'Total Specific Humidity Advection', int(dt*it)
+      for ilev in range(0,nlev_out):
+        print >>g, data_out['qvadv'][it,ilev]	  
+    g.close()
+
   if attributes['uadv'] == 1:
     g = open(dirout + 'uadv_profiles_L' + str(nlev_out),'w')
     for it in range(0,nt):
diff --git a/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh b/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
index 321447c..5c4dc61 100755
--- a/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
+++ b/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
@@ -1,5 +1,8 @@
 #!/bin/sh
 
+source activate myuvcdat
+alias cdat='python'
+
 cat << EOF > tmp.py
 import os
 
diff --git a/UTIL/Runs/run_ARPCLIMAT.sh b/UTIL/Runs/run_ARPCLIMAT.sh
index 49a4620..8bfac11 100755
--- a/UTIL/Runs/run_ARPCLIMAT.sh
+++ b/UTIL/Runs/run_ARPCLIMAT.sh
@@ -3,7 +3,7 @@
 #------------------------------------------------------------
 # 			INTIALISATION
 #------------------------------------------------------------
-set -vx
+set -x
 
 . ./param
 
@@ -25,12 +25,12 @@ fi
 
 TMPDIR=$HOME/tmp/EXEMUSC
 
-rm -rf $TMPDIR
-mkdir $TMPDIR
+if [ ! -d $TMPDIR ] ; then
+  mkdir $TMPDIR
+fi
 
 cd $TMPDIR
-
-#find $TMPDIR/ -name '*' -exec rm -rf {} \; || :
+find $TMPDIR -name '*' -exec rm -rf {} \ || :
 #rm -rf $TMPDIR/* || : 
 
 ladate=`date`
@@ -123,7 +123,7 @@ export OMP_NUM_THREADS=1
 #export DR_HOOK=0
 export DR_HOOK_IGNORE_SIGNALS=-1
 
-ulimit -s unlimited
+#ulimit -s unlimited
 
 date
 ./MASTER -c001 -vmeteo -maladin -e${EXP} -t$TSTEP -f$NSTOP -a$ADVEC  >lola 2>&1
@@ -164,7 +164,6 @@ set -x
 
 find $OUTPUTDIR/ -name '*' -exec rm -f {} \;
 find ./ -name 'Out*' -exec mv {} $OUTPUTDIR \;
-#find ./ -name 'out*.txt' -exec mv {} $OUTPUTDIR \;
 find ./ -name 'NODE*' -exec mv {} $OUTPUTDIR \;
 find ./ -name 'lola' -exec mv {} $OUTPUTDIR \;
 
diff --git a/UTIL/Tools/ASCII2FA/bin/ascii2fa b/UTIL/Tools/ASCII2FA/bin/ascii2fa
index a175842..df05251 100755
Binary files a/UTIL/Tools/ASCII2FA/bin/ascii2fa and b/UTIL/Tools/ASCII2FA/bin/ascii2fa differ
diff --git a/UTIL/Tools/ASCII2FA/src/Makefile b/UTIL/Tools/ASCII2FA/src/Makefile
index 5c1b937..ed5e0cf 100755
--- a/UTIL/Tools/ASCII2FA/src/Makefile
+++ b/UTIL/Tools/ASCII2FA/src/Makefile
@@ -2,7 +2,7 @@
 
 FC	 =	gfortran
 FFLAGS	 =      -ff2c -fconvert=big-endian -frecord-marker=4 $(M32) -ffixed-form -fdefault-real-8 -DADDRESS64 -DLITTLE_ENDIAN -DHIGHRES
-F90FLAGS =      -fconvert=big-endian -frecord-marker=4 $(M32) -ffree-form -fdefault-real-8 -DADDRESS64 -DHIGHRES
+F90FLAGS =      -fconvert=swap -fno-second-underscore -fbacktrace -fopenmp -fno-sign-zero -fpic -ffree-line-length-none -m64 -ffree-form  -DLINUX -DLITTLE_ENDIAN -DLITTLE -DDARWIN -DADDRESS64 -fdefault-real-8 -fdefault-double-8 -g -O2
 EXEC	 =	acadfa_exe
 
 OBJS	 =	acadfa1D_main.o \
@@ -10,10 +10,11 @@ OBJS	 =	acadfa1D_main.o \
 		real2spec.o \
 		empty.o 
 
-XRD	 =	libxrd.a 
-GRIBEX   =      /home/common/sync/gfortran/auxlibs/lib/libgribex.a 
-MPIDUMMY =      /home/common/sync/gfortran/auxlibs/lib/libmpidummy.a
-LIBS	 =	$(XRD) $(GRIBEX) $(MPIDUMMY)
+XRD	 =	/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxrd.local.a 
+XLA	 =	/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxla.local.a 
+GRIBEX   =      /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libgribex.a 
+MPIDUMMY =      /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libmpidummy.a
+LIBS	 =	$(XRD) $(XLA) $(GRIBEX) $(MPIDUMMY) 
 
 %.o:%.F90
 	$(FC) $(F90FLAGS) -c $<
diff --git a/UTIL/Tools/ASCII2FA/src/libxrd.a b/UTIL/Tools/ASCII2FA/src/libxrd.a
deleted file mode 100644
index 4e4a59c..0000000
Binary files a/UTIL/Tools/ASCII2FA/src/libxrd.a and /dev/null differ
diff --git a/UTIL/Tools/LFA/bin/cllangu b/UTIL/Tools/LFA/bin/cllangu
index 9f95061..fb1e1b6 100755
Binary files a/UTIL/Tools/LFA/bin/cllangu and b/UTIL/Tools/LFA/bin/cllangu differ
diff --git a/UTIL/Tools/LFA/bin/lfa2lfa b/UTIL/Tools/LFA/bin/lfa2lfa
index f902433..9ea0865 100755
Binary files a/UTIL/Tools/LFA/bin/lfa2lfa and b/UTIL/Tools/LFA/bin/lfa2lfa differ
diff --git a/UTIL/Tools/LFA/bin/lfa2lfp b/UTIL/Tools/LFA/bin/lfa2lfp
index d2129e6..afc92d1 100755
Binary files a/UTIL/Tools/LFA/bin/lfa2lfp and b/UTIL/Tools/LFA/bin/lfa2lfp differ
diff --git a/UTIL/Tools/LFA/bin/lfa_autodocumentation b/UTIL/Tools/LFA/bin/lfa_autodocumentation
index fa079a0..81a8c39 100755
Binary files a/UTIL/Tools/LFA/bin/lfa_autodocumentation and b/UTIL/Tools/LFA/bin/lfa_autodocumentation differ
diff --git a/UTIL/Tools/LFA/bin/lfa_demo b/UTIL/Tools/LFA/bin/lfa_demo
index 64e0248..512a742 100755
Binary files a/UTIL/Tools/LFA/bin/lfa_demo and b/UTIL/Tools/LFA/bin/lfa_demo differ
diff --git a/UTIL/Tools/LFA/bin/lfac b/UTIL/Tools/LFA/bin/lfac
index cfd4db8..da679d3 100755
Binary files a/UTIL/Tools/LFA/bin/lfac and b/UTIL/Tools/LFA/bin/lfac differ
diff --git a/UTIL/Tools/LFA/bin/lfacre b/UTIL/Tools/LFA/bin/lfacre
index 5a4c669..49371c4 100755
Binary files a/UTIL/Tools/LFA/bin/lfacre and b/UTIL/Tools/LFA/bin/lfacre differ
diff --git a/UTIL/Tools/LFA/bin/lfadiff b/UTIL/Tools/LFA/bin/lfadiff
index ea9c582..1098916 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiff and b/UTIL/Tools/LFA/bin/lfadiff differ
diff --git a/UTIL/Tools/LFA/bin/lfadiffart b/UTIL/Tools/LFA/bin/lfadiffart
index 44ba560..db4bfd8 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiffart and b/UTIL/Tools/LFA/bin/lfadiffart differ
diff --git a/UTIL/Tools/LFA/bin/lfadiffrel b/UTIL/Tools/LFA/bin/lfadiffrel
index e345de1..f6fb680 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiffrel and b/UTIL/Tools/LFA/bin/lfadiffrel differ
diff --git a/UTIL/Tools/LFA/bin/lfafreq b/UTIL/Tools/LFA/bin/lfafreq
index f02ec67..db12761 100755
Binary files a/UTIL/Tools/LFA/bin/lfafreq and b/UTIL/Tools/LFA/bin/lfafreq differ
diff --git a/UTIL/Tools/LFA/bin/lfalaf b/UTIL/Tools/LFA/bin/lfalaf
index c6430df..d688e21 100755
Binary files a/UTIL/Tools/LFA/bin/lfalaf and b/UTIL/Tools/LFA/bin/lfalaf differ
diff --git a/UTIL/Tools/LFA/bin/lfaminm b/UTIL/Tools/LFA/bin/lfaminm
index 57bff37..b54e404 100755
Binary files a/UTIL/Tools/LFA/bin/lfaminm and b/UTIL/Tools/LFA/bin/lfaminm differ
diff --git a/UTIL/Tools/LFA/bin/lfamoy b/UTIL/Tools/LFA/bin/lfamoy
index 3dc0bda..24e2039 100755
Binary files a/UTIL/Tools/LFA/bin/lfamoy and b/UTIL/Tools/LFA/bin/lfamoy differ
diff --git a/UTIL/Tools/LFA/bin/lfareu b/UTIL/Tools/LFA/bin/lfareu
index dfe3cf7..b9ee641 100755
Binary files a/UTIL/Tools/LFA/bin/lfareu and b/UTIL/Tools/LFA/bin/lfareu differ
diff --git a/UTIL/Tools/LFA/bin/lfatest b/UTIL/Tools/LFA/bin/lfatest
index cde8c03..81268f2 100755
Binary files a/UTIL/Tools/LFA/bin/lfatest and b/UTIL/Tools/LFA/bin/lfatest differ
diff --git a/UTIL/Tools/LFA/bin/lfp2lfa b/UTIL/Tools/LFA/bin/lfp2lfa
index bc737bb..b47a98e 100755
Binary files a/UTIL/Tools/LFA/bin/lfp2lfa and b/UTIL/Tools/LFA/bin/lfp2lfa differ
diff --git a/UTIL/install/install_MUSC.py b/UTIL/install/install_MUSC.py
index 387ed26..2353a65 100644
--- a/UTIL/install/install_MUSC.py
+++ b/UTIL/install/install_MUSC.py
@@ -147,7 +147,7 @@ def install_SFX(model,case,filecase,repout,cycle,PGD,PREP,config,namref,subcase=
 
       g.close()
 
-      os.system('cdat tmp.py')
+      os.system('python tmp.py')
       os.system('rm -f tmp.py')
     
       if lperf:
@@ -183,7 +183,7 @@ def install_SFX(model,case,filecase,repout,cycle,PGD,PREP,config,namref,subcase=
 
         g.close()
 
-        os.system('cdat tmp.py')
+        os.system('python tmp.py')
         os.system('rm -f tmp.py')
 
         os.system('./prepare_SURFEX.sh')
@@ -308,7 +308,7 @@ def install_Run(model,case,filecase,repout,config,configOut,subcase=None,loverwr
 
       g.close()
 
-      os.system('cdat tmp.py')
+      os.system('python tmp.py')
       os.system('rm -f tmp.py')
 
       if lperf:
@@ -329,7 +329,7 @@ def install_Run(model,case,filecase,repout,config,configOut,subcase=None,loverwr
 
         g.close()
 
-        os.system('cdat tmp.py')
+        os.system('python tmp.py')
         os.system('rm -f tmp.py')
 
         if lperf:
@@ -523,13 +523,13 @@ def install_Atlas(case,repout,config,configAtlas,subcase=None,loverwrite=False,l
 
       g.close()
 
-      os.system('cdat atlas.py')
+      os.system('python atlas.py')
 
     else: 
       print 'Directory already exists:', rep
       if lupdate:
         os.chdir(rep)
-        os.system('cdat atlas.py')
+        os.system('python atlas.py')
       else:
         print 'Nothing is done'
 
diff --git a/UTIL/install/prepare_namATM_ARPCLIMAT.py b/UTIL/install/prepare_namATM_ARPCLIMAT.py
index cd18815..56814d0 100644
--- a/UTIL/install/prepare_namATM_ARPCLIMAT.py
+++ b/UTIL/install/prepare_namATM_ARPCLIMAT.py
@@ -139,7 +139,7 @@ def prep_nam_ATM(case,filecase,namref,timestep,NSTOP,namout=None,subcase=None):
   fin = cdms2.open(filecase)
 
   attributes = {}
-  for att in ['tadvh','qdvh','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
+  for att in ['tadvh','qadvh','qvadv','qvadvh','qvadvv','qtadvh','uadvh','vadvh','tadvv','qadvv','qtadvv','uadvv','vadvv','tadv','qadv','uadv','vadv','trad','forc_omega','forc_w','forc_geo','nudging_t','nudging_q','nudging_u','nudging_v']:
     attributes[att] = 0
 
   for att in ['p_nudging_t','p_nudging_q','p_nudging_u','p_nudging_v']:
@@ -187,7 +187,7 @@ def prep_nam_ATM(case,filecase,namref,timestep,NSTOP,namout=None,subcase=None):
 
   if attributes['tadv'] == 1 or attributes['tadvh'] == 1 or attributes['tadvv'] == 1:
       nam[nn]['LT_ADV_FRC'] = ['.TRUE.',]
-  if attributes['qadv'] == 1 or attributes['qadvh'] == 1 or attributes['qtadvh'] == 1 or attributes['qadvv'] == 1:
+  if attributes['qadv'] == 1 or attributes['qadvh'] == 1 or attributes['qtadvh'] == 1 or attributes['qadvv'] == 1 or attributes['qvadv'] == 1 or attributes['qvadvh'] == 1 or attributes['qvadvv'] == 1 :
       nam[nn]['LQV_ADV_FRC'] = ['.TRUE.',]
   if attributes['uadvh'] == 1 or attributes['uadvh'] == 1 or attributes['uadvv'] == 1 or attributes['vadvv'] == 1:
       nam[nn]['LUV_ADV_FRC'] = ['.TRUE.',]
diff --git a/UTIL/post_DEPHY/convert2p.so b/UTIL/post_DEPHY/convert2p.so
index eed38ec..20cd20c 100755
Binary files a/UTIL/post_DEPHY/convert2p.so and b/UTIL/post_DEPHY/convert2p.so differ
diff --git a/UTIL/post_DEPHY/convert2z.so b/UTIL/post_DEPHY/convert2z.so
index 690cb49..a432ba5 100755
Binary files a/UTIL/post_DEPHY/convert2z.so and b/UTIL/post_DEPHY/convert2z.so differ
diff --git a/UTIL/post_DEPHY/convertLFA2nc.py b/UTIL/post_DEPHY/convertLFA2nc.py
index a229b45..8bd1f65 100755
--- a/UTIL/post_DEPHY/convertLFA2nc.py
+++ b/UTIL/post_DEPHY/convertLFA2nc.py
@@ -9,44 +9,44 @@ else:
     os.system('rm -f netcdf/*')
 
 os.system('python lfa2nc_part1.py')
-os.system('cdat lfa2nc_part2.py')
+os.system('python lfa2nc_part2.py')
 
 os.system('mv Out_klevel.nc netcdf/')
 
 if config.convertk1h:
-    os.system('cdat convertk_to_1hourly.py')
+    os.system('python convertk_to_1hourly.py')
 
 if config.convertk3h:
     print 'convertk3h not coded yet'
     pass #sys.exit()
-    #os.system('cdat convertk_to_3hourly.py')
+    #os.system('python convertk_to_3hourly.py')
 
 if config.convertkday:
-    os.system('cdat convertk_to_daily.py')
+    os.system('python convertk_to_daily.py')
 
 
 if config.convert2p:
-    os.system('cdat convert2p.py')
+    os.system('python convert2p.py')
     if config.convertp1h:
-        os.system('cdat convertp_to_1hourly.py')
+        os.system('python convertp_to_1hourly.py')
 
     if config.convertp3h:
-        os.system('cdat convertp_to_3hourly.py')
+        os.system('python convertp_to_3hourly.py')
 
     if config.convertpday:
-        os.system('cdat convertp_to_daily.py')
+        os.system('python convertp_to_daily.py')
 
 
 if config.convert2z:
-    os.system('cdat convert2z.py')
+    os.system('python convert2z.py')
     if config.convertz1h:
-        os.system('cdat convertz_to_1hourly.py')
+        os.system('python convertz_to_1hourly.py')
 
     if config.convertz3h:
         print 'convertz3h not coded yet'
         pass #sys.exit()
-        #os.system('cdat convertz_to_3hourly.py')
+        #os.system('python convertz_to_3hourly.py')
 
     if config.convertzday:
-        os.system('cdat convertz_to_daily.py')
+        os.system('python convertz_to_daily.py')
 
diff --git a/UTIL/python/lfa.so b/UTIL/python/lfa.so
index cf2615f..fa60fc2 100755
Binary files a/UTIL/python/lfa.so and b/UTIL/python/lfa.so differ
diff --git a/UTIL/python/lfa/makelib.sh b/UTIL/python/lfa/makelib.sh
index 245f06e..6ab2673 100755
--- a/UTIL/python/lfa/makelib.sh
+++ b/UTIL/python/lfa/makelib.sh
@@ -1,5 +1,7 @@
 #!/bin/bash
 
+source activate myuvcdat
+
 DIR0=`pwd`
 
 for ff in cllang caracteres_lfa lfa
@@ -11,7 +13,7 @@ done
 
 gfortran -L$DIR0 -llfa -I$DIR0 -fconvert=big-endian -cpp  -c -fPIC -o famusc.o famusc.f90
 
-/opt/cdat/bin/f2py -I/opt/cdat/include -lgfortran -c famusc.pyf famusc.o liblfa.a
+f2py -lgfortran -c famusc.pyf famusc.o liblfa.a
 
 rm -f *.o *.mod *.a
 
@@ -20,3 +22,5 @@ mv lfa.so ../
 # Test
 
 #python tmp.py
+
+source deactivate myuvcdat
diff --git a/UTIL/python/lfa/makelib.sh.cnrm b/UTIL/python/lfa/makelib.sh.cnrm
deleted file mode 100644
index f08dba5..0000000
--- a/UTIL/python/lfa/makelib.sh.cnrm
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-#/opt/cdat/bin/f2py -m lfa -h famusc.pyf famusc.f90 (comment lfaread* subroutines)
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC cllang.f90
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC caracteres_lfa.f90
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC lfa.f90
-ar r liblfa.a *.o
-gfortran -L./ -llfa -I./ -fconvert=big-endian -cpp  -c -fPIC -o famusc.o famusc.f90
-#f2py -L./ -llfa -lm -lgfortran --f77flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --f90flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --fcompiler=gnu95 -c famusc.pyf famusc.o
-/opt/cdat/bin/f2py -I/opt/cdat/include -L./ -llfa -lm -lgfortran --f77flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --f90flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --fcompiler=gnu95 -c famusc.pyf famusc.o
-
-##Ne fonctionne pas...
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC cllang.f90
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC caracteres_lfa.f90
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC lfa.f90
-#ar r liblfa.a *.o
-#pgf90 -L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC -o famusc.o famusc.f90
-#/opt/cdat/bin/f2py -L./ -llfa --f77flags='-L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -fPIC' --f90flags='-L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -fPIC' --fcompiler=pg -c famusc.pyf famusc.o
diff --git a/atlas/atlas.py b/atlas/atlas.py
new file mode 100755
index 0000000..3f6a9e6
--- /dev/null
+++ b/atlas/atlas.py
@@ -0,0 +1,354 @@
+#!/usr/bin/env python
+# -*- coding:UTF-8 -*-
+
+import os, sys
+sys.path = ['./config/','./util/'] + sys.path
+import importlib
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+import plotMUSC
+import diag_simu
+
+import cases
+import references
+import simulations
+import variables_info
+
+
+lplot2D = True
+lplot2Dbias = True
+lplotTS = True
+lplotInit = True #False
+lplotAvgP = True
+
+try:
+  case = sys.argv[1]
+except IndexError:
+  print 'Use this program as atlas.py CASE [SUBCASE]'
+  sys.exit()
+except:
+  raise
+
+try:
+  subcases = [sys.argv[2],]
+except IndexError:
+  print 'You did not provide any subcase for {0}'.format(case)
+  print 'You can do it using the following command: atlas.py CASE [SUBCASE]'
+  print 'All subcases for {0} will be performed, namely:'.format(case), cases.subcases[case]
+  subcases = cases.subcases[case]
+except:
+  raise
+
+if os.path.isfile('./config/config_{0}.py'.format(case)):
+  config = importlib.import_module('config_{0}'.format(case))
+else:
+  print './config/config_{0}.py does not exist'.format(case)
+  sys.exit()
+
+error = {}
+
+tmin = config.tmin
+tmax = config.tmax
+
+var2compute = config.var2compute
+if not(os.path.exists('tmp')):
+  os.makedirs('tmp')
+
+names = variables_info.names
+units = variables_info.units
+coefs = variables_info.coefs
+
+plot2D = config.plot2D
+try:
+  plot2Dbias = config.plot2Dbias
+except AttributeError:
+  lplot2Dbias = False
+except:
+  raise
+plotTS = config.plotTS
+plotInitGV = config.plotInitGV
+plotInitLL = config.plotInitLL
+plotAvgP = config.plotAvgP
+
+for subcase in subcases:
+
+  fin = {}
+  varnames = {}
+  coefsimu = {}
+  lines = {}
+  for k in simulations.sim2plot:
+
+    if not(os.path.isfile(simulations.files[case][subcase][k])):
+      print '{0} does not exist'.format(simulations.files[case][subcase][k])
+      sys.exit()
+
+    fin[k] = 'tmp/{0}_{1}_{2}.nc'.format(k,case,subcase)
+    diag_simu.prepare(simulations.files[case][subcase][k],fin[k],var2compute)
+    varnames[k] = simulations.varnames[k]
+    coefsimu[k] = simulations.coefs[k]
+    lines[k] = simulations.lines[k]
+
+  for k in references.files[case][subcase].keys():
+
+    if not(os.path.isfile(references.files[case][subcase][k])):
+      print '{0} does not exist'.format(references.files[case][subcase][k])
+      sys.exit()
+
+    fin[k] = references.files[case][subcase][k]
+    varnames[k] = references.varnames[case][subcase][k]
+    coefsimu[k] = references.coefs[case][subcase][k]
+    lines[k] = references.lines[case][subcase][k]
+
+  repout = './atlas/{0}/{1}/{2}/PNG/'.format(simulations.name_atlas,case,subcase)
+  if not(os.path.exists(repout)):
+    os.makedirs(repout)
+
+  reptex = './atlas/{0}/{1}/{2}/TEX/'.format(simulations.name_atlas,case,subcase)
+  if not(os.path.exists(reptex)):
+    os.makedirs(reptex)
+
+
+###########################################################################
+# 2D plots
+
+  if lplot2D:
+    def plotloc(var,levels=None,extend='neither',lev='zh',firstwhite=False,cmap=plt.cm.RdBu.reversed()):
+
+      print 'plot2D:', var    
+
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits','dtlabel','xname','lgrid','figsize']:
+        try:
+            plotdico[vv] = plot2D[vv]    
+        except KeyError:
+            pass
+        except:
+            raise           
+      plotdico['lev'] = lev
+      plotdico['tmin'] = tmin
+      plotdico['tmax'] = tmax
+      plotdico['minmax'] = True
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1})'.format(names[var],units[var])
+      if levels is not None:
+        plotdico['levels'] = levels
+      plotdico['extend'] = extend
+      plotdico['firstwhite'] = firstwhite
+      plotdico['cmap'] = cmap
+      plotdico['namefig'] = {}
+      for sim in fin.keys():
+        plotdico['namefig'][sim] = '{0}/2D_{2}_{1}.png'.format(repout,sim,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot2D(fin,varloc,coef=coefloc,error=error,**plotdico)
+
+
+    for var in plot2D['var2plot'].keys():
+      #print var, plot2D['var2plot'][var]
+      plotloc(var,**plot2D['var2plot'][var])
+
+###########################################################################
+# 2D bias plots
+
+  if lplot2Dbias:
+    def plotloc(var,levels=None,extend='neither',lev='zh',firstwhite=False,cmap=plt.cm.RdBu.reversed(),lbias=True,refdataset=None):
+
+      print 'plot2Dbias:', var    
+
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits','dtlabel','xname','lgrid','figsize']:
+        try:
+            plotdico[vv] = plot2Dbias[vv]    
+        except KeyError:
+            pass
+        except:
+            raise           
+      plotdico['lev'] = lev
+      plotdico['tmin'] = tmin
+      plotdico['tmax'] = tmax
+      plotdico['minmax'] = True
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1}) - Bias'.format(names[var],units[var])
+      if levels is not None:
+        plotdico['levels'] = levels
+      plotdico['extend'] = extend
+      plotdico['firstwhite'] = firstwhite
+      plotdico['cmap'] = cmap
+      plotdico['lbias'] = lbias
+      plotdico['refdataset'] = refdataset
+      plotdico['namefig'] = {}
+      for sim in fin.keys():
+        plotdico['namefig'][sim] = '{0}/2Dbias_{2}_{1}.png'.format(repout,sim,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot2D(fin,varloc,coef=coefloc,error=error,**plotdico)
+
+
+    for var in plot2Dbias['var2plot'].keys():
+      #print var, plot2D['var2plot'][var]
+      plotloc(var,**plot2Dbias['var2plot'][var])
+
+  ###########################################################################
+  # timeseries
+
+  if lplotTS:
+    def plotloc(var,ymin=None,ymax=None):
+ 
+      print 'plot timeseries:', var
+   
+      plotdico = {}
+      for vv in ['dtlabel','xname','lgrid','figsize']:
+        try:
+            plotdico[vv] = plotTS[vv]    
+        except KeyError:
+            pass
+        except:
+            raise             
+      plotdico['tmin'] = tmin
+      plotdico['tmax'] = tmax
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1})'.format(names[var],units[var])
+      if ymin is not None:
+        plotdico['ymin'] = ymin
+      if ymax is not None:
+        plotdico['ymax'] = ymax
+      plotdico['yname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/TS_{1}.png'.format(repout,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_timeseries(fin,varloc,coef=coefloc,error=error,**plotdico)
+
+    for var in plotTS['var2plot'].keys():
+      #print var, plotTS['var2plot'][var]
+      plotloc(var,**plotTS['var2plot'][var])
+
+  ###########################################################################
+  # Initial profiles - global view
+  
+  if lplotInit:
+    def plotloc(var,xmin=None,xmax=None,lev='zf',init=False):
+
+      print 'plot init global view:', var
+    
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits','lgrid','figsize']:
+        try:
+            plotdico[vv] = plotInitGV[vv]    
+        except KeyError:
+            pass
+        except:
+            raise           
+      plotdico['lev'] = lev
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1}) - First timestep'.format(names[var],units[var]) 
+      if xmin is not None:
+        plotdico['xmin'] = xmin
+      if xmax is not None:
+        plotdico['xmax'] = xmax
+      plotdico['xname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/initGV_{1}.png'.format(repout,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_profile(fin,varloc,coef=coefloc,t0=True,error=error,**plotdico)
+
+    for var in plotInitGV['var2plot'].keys():
+      #print var, plotInitGV['var2plot'][var]
+      plotloc(var,**plotInitGV['var2plot'][var])
+
+  ###########################################################################
+  # Initial profiles - zoom on the lowest layers
+
+    def plotloc(var,xmin=None,xmax=None,lev='zf',init=False):
+
+      print 'plot init zoom:', var
+    
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits','lgrid','figsize']:
+        try:
+            plotdico[vv] = plotInitLL[vv]    
+        except KeyError:
+            pass
+        except:
+            raise            
+      plotdico['lev'] = lev
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1}) - First timestep'.format(names[var],units[var]) 
+      if xmin is not None:
+        plotdico['xmin'] = xmin
+      if xmax is not None:
+        plotdico['xmax'] = xmax
+      plotdico['xname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/initLL_{1}.png'.format(repout,var,case)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_profile(fin,varloc,coef=coefloc,t0=True,error=error,**plotdico)
+
+    for var in plotInitLL['var2plot'].keys():
+      #print var, plotInitLL['var2plot'][var]
+      plotloc(var,**plotInitLL['var2plot'][var])
+
+  ###########################################################################
+  # Average profiles over time slices
+
+  if lplotAvgP:
+    for avg in plotAvgP.keys():
+
+      def plotloc(var,xmin=None,xmax=None,lev='zf',init=False,lbias=False,refdataset=None):
+   
+        print 'plot profiles {0}: {1}'.format(avg,var)
+    
+        plotdico = {}
+        for vv in ['tmin','tmax','ymin','ymax','yname','levunits','lgrid','figsize']:
+          try:
+              plotdico[vv] = plotAvgP[avg][vv]       
+          except KeyError:
+              pass
+          except:
+              raise
+        plotdico['lev'] = lev
+        plotdico['init'] = init
+        plotdico['units'] = units[var]
+        plotdico['title'] = '{0} ({1}) - {2}'.format(names[var],units[var],plotAvgP[avg]['title']) 
+        if xmin is not None:
+          plotdico['xmin'] = xmin
+        if xmax is not None:
+          plotdico['xmax'] = xmax
+        plotdico['xname'] = units[var]
+        plotdico['lines'] = plotMUSC.getlines(fin,lines)
+        plotdico['lbias'] = lbias
+        plotdico['refdataset']=refdataset
+        plotdico['namefig'] = '{0}/AvgP_{2}_{1}.png'.format(repout,var,avg)
+
+        varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+        plotMUSC.plot_profile(fin,varloc,coef=coefloc,error=error,**plotdico)
+
+      for var in plotAvgP[avg]['var2plot'].keys():
+        #print var, plotAvgP[avg]['var2plot'][var]
+        plotloc(var,**plotAvgP[avg]['var2plot'][var])
+
+  ###########################################################################
+  # synthesis of encoutered errors
+
+  for k in error.keys():
+    print '-'*40
+    print 'For dataset {0}, we got en error with the following variables:'.format(k)
+    print '--', error[k]
+
+  ###########################################################################
+  # latex
+
+  os.system('rm -f {0}/*'.format(reptex))
+  os.system('cp tex_template/template_atlas_{1}.tex {0}/'.format(reptex,case))
+  cwd = os.getcwd()
+  os.chdir(reptex)
+  os.system('sed s/XXXX/{0}/g template_atlas_{1}.tex > atlas_{1}.tex'.format(simulations.sim2plot[0],case))
+  os.system('rm -f template_atlas_{0}.tex'.format(case))
+  os.system('pdflatex -interaction=nonstopmode atlas_{0}.tex > atlas_{0}.log 2>&1'.format(case))
+  os.system('cp atlas_{0}.pdf ../../../atlas_{0}_{1}.pdf'.format(case,subcase))
+  os.chdir(cwd)
+
diff --git a/atlas/cases.py b/atlas/cases.py
new file mode 100644
index 0000000..4f0fdc5
--- /dev/null
+++ b/atlas/cases.py
@@ -0,0 +1,72 @@
+import cdtime
+
+cases = ['AYOTTE','IHOP','ARMCU','FIRE','BOMEX','RICO','AMMA','SANDU','ASTEX','CINDY-DYNAMO']
+subcases = {}
+for case in cases:
+    subcases[case] = ['REF',] 
+
+subcases['AYOTTE'] = ['00SC','00WC','03SC','05SC','05WC','24F','24SC']
+subcases['SANDU'] =  ['REF','FAST','SLOW']
+subcases['ASTEX'] = ['EUCLIPSE',]
+subcases['CINDY-DYNAMO'] = ['NSA3aflux',]
+
+tmin = {}
+tmax = {}
+for case in cases:
+    tmin[case] = {}
+    tmax[case] = {}
+
+# AYOTTE
+case = 'AYOTTE'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(2009,12,11,0)
+  tmax[case][subcase] = cdtime.comptime(2009,12,11,6)
+
+# IHOP
+case = 'IHOP'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(2002,6,14,6)
+  tmax[case][subcase] = cdtime.comptime(2009,6,14,12)
+
+
+# BOMEX
+case = 'BOMEX'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(1969,6,24,0)
+  tmax[case][subcase] = cdtime.comptime(1969,6,24,14)
+
+# RICO
+case = 'RICO'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(2004,12,16,0)
+  tmax[case][subcase] = cdtime.comptime(2004,12,17,0)
+
+# ARMCU
+case = 'ARMCU'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(1997,6,21,11)
+  tmax[case][subcase] = cdtime.comptime(1997,6,22,3)
+
+# FIRE
+case = 'FIRE'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(1987,7,14,8)
+  tmax[case][subcase] = cdtime.comptime(1987,7,15,8)
+
+# SANDU
+case = 'SANDU'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(2007,7,15,0)
+  tmax[case][subcase] = cdtime.comptime(2007,7,18,0)
+
+# ASTEX
+case = 'ASTEX'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(1992,6,13,0)
+  tmax[case][subcase] = cdtime.comptime(1992,6,14,16)
+
+# CINDY-DYNAMO
+case = 'CINDY-DYNAMO'
+for subcase in subcases[case]:
+  tmin[case][subcase] = cdtime.comptime(2011,10,1)
+  tmax[case][subcase] = cdtime.comptime(2011,12,31)   
diff --git a/atlas/check_setup.py b/atlas/check_setup.py
new file mode 100755
index 0000000..8f278dd
--- /dev/null
+++ b/atlas/check_setup.py
@@ -0,0 +1,201 @@
+#!/usr/bin/env python
+# -*- coding:UTF-8 -*-
+
+import os, sys
+sys.path = ['./config/','./util/'] + sys.path
+import importlib
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+import plotMUSC
+import diag_simu
+
+import cases
+import references
+import simulations
+import variables_info
+
+lplotTS = True
+lplotInit = True
+
+try:
+  case = sys.argv[1]
+except IndexError:
+  print 'Use this program as check_setup.py CASE [SUBCASE]'
+  sys.exit()
+except:
+  raise
+
+try:
+  subcases = [sys.argv[2],]
+except IndexError:
+  print 'You did not provide any subcase for {0}'.format(case)
+  print 'You can do it using the following command: check_setup.py CASE [SUBCASE]'
+  print 'All subcases for {0} will be performed, namely:'.format(case), cases.subcases[case]
+  subcases = cases.subcases[case]
+except:
+  raise
+
+if os.path.isfile('./config/config_{0}.py'.format(case)):
+  config = importlib.import_module('config_{0}'.format(case))
+else:
+  print './config/config_{0}.py does not exist'.format(case)
+  sys.exit()
+
+error = {}
+
+tmin = config.tmin
+tmax = config.tmax
+
+names = variables_info.names
+units = variables_info.units
+coefs = variables_info.coefs
+
+plotTS = config.plotTS
+plotInitGV = config.plotInitGV
+plotInitLL = config.plotInitLL
+
+for subcase in subcases:
+
+  fin = {}
+  varnames = {}
+  coefsimu = {}
+  lines = {}
+  for k in simulations.sim2plot:
+
+    if not(os.path.isfile(simulations.files[case][subcase][k])):
+      print '{0} does not exist'.format(simulations.files[case][subcase][k])
+      sys.exit()
+
+    fin[k] = simulations.files[case][subcase][k]
+    varnames[k] = simulations.varnames[k]
+    coefsimu[k] = simulations.coefs[k]
+    lines[k] = simulations.lines[k]
+
+  for k in references.files[case][subcase].keys():
+
+    if not(os.path.isfile(references.files[case][subcase][k])):
+      print '{0} does not exist'.format(references.files[case][subcase][k])
+      sys.exit()
+
+    fin[k] = references.files[case][subcase][k]
+    varnames[k] = references.varnames[case][subcase][k]
+    coefsimu[k] = references.coefs[case][subcase][k]
+    lines[k] = references.lines[case][subcase][k]
+
+  repout = './atlas/{0}/{1}/{2}/PNG/'.format(simulations.name_atlas,case,subcase)
+  if not(os.path.exists(repout)):
+    os.makedirs(repout)
+
+  reptex = './atlas/{0}/{1}/{2}/TEX_init/'.format(simulations.name_atlas,case,subcase)
+  if not(os.path.exists(reptex)):
+    os.makedirs(reptex)
+
+
+  ###########################################################################
+  # timeseries
+
+  if lplotTS:
+    def plotloc(var,ymin=None,ymax=None):
+ 
+      print 'plot timeseries:', var
+   
+      plotdico = {}
+      for vv in ['dtlabel','xname']:
+        plotdico[vv] = plotTS[vv]    
+      plotdico['tmin'] = tmin
+      plotdico['tmax'] = tmax
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1})'.format(names[var],units[var])
+      if ymin is not None:
+        plotdico['ymin'] = ymin
+      if ymax is not None:
+        plotdico['ymax'] = ymax
+      plotdico['yname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/TS_{1}.png'.format(repout,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_timeseries(fin,varloc,coef=coefloc,error=error,**plotdico)
+
+    for var in ['tsurf','shf','lhf','ustar']:
+        if plotTS['var2plot'].has_key(var):
+          plotloc(var,**plotTS['var2plot'][var])
+        else:
+          plotloc(var)
+
+  ###########################################################################
+  # Initial profiles - global view
+  
+  if lplotInit:
+    def plotloc(var,xmin=None,xmax=None,lev='zf',init=False):
+
+      print 'plot init global view:', var
+    
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits']:
+        plotdico[vv] = plotInitGV[vv]
+      plotdico['lev'] = lev
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1}) - First timestep'.format(names[var],units[var]) 
+      if xmin is not None:
+        plotdico['xmin'] = xmin
+      if xmax is not None:
+        plotdico['xmax'] = xmax
+      plotdico['xname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/initGV_{1}.png'.format(repout,var)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_profile(fin,varloc,coef=coefloc,t0=True,error=error,**plotdico)
+
+    for var in plotInitGV['var2plot'].keys():
+      plotloc(var,**plotInitGV['var2plot'][var])
+
+  ###########################################################################
+  # Initial profiles - zoom on the lowest layers
+
+    def plotloc(var,xmin=None,xmax=None,lev='zf',init=False):
+
+      print 'plot init zoom:', var
+    
+      plotdico = {}
+      for vv in ['ymin','ymax','yname','levunits']:
+        plotdico[vv] = plotInitLL[vv]    
+      plotdico['lev'] = lev
+      plotdico['units'] = units[var]
+      plotdico['title'] = '{0} ({1}) - First timestep'.format(names[var],units[var]) 
+      if xmin is not None:
+        plotdico['xmin'] = xmin
+      if xmax is not None:
+        plotdico['xmax'] = xmax
+      plotdico['xname'] = units[var]
+      plotdico['lines'] = plotMUSC.getlines(fin,lines)
+      plotdico['namefig'] = '{0}/initLL_{1}.png'.format(repout,var,case)
+
+      varloc,coefloc = plotMUSC.getvarnames(var,fin,varnames,coefsimu,coef=coefs[var])
+      plotMUSC.plot_profile(fin,varloc,coef=coefloc,t0=True,error=error,**plotdico)
+
+    for var in plotInitLL['var2plot'].keys():
+      plotloc(var,**plotInitLL['var2plot'][var])
+
+  ###########################################################################
+  # synthesis of encoutered errors
+
+  for k in error.keys():
+    print '-'*40
+    print 'For dataset {0}, we got en error with the following variables:'.format(k)
+    print '--', error[k]
+
+  ###########################################################################
+  # latex
+
+  os.system('rm -f {0}/*'.format(reptex))
+  os.system('cp tex_template/template_check_setup.tex {0}/check_setup.tex'.format(reptex))
+  cwd = os.getcwd()
+  os.chdir(reptex)
+  os.system('pdflatex -interaction=nonstopmode check_setup.tex')
+  os.system('cp check_setup.pdf ../../../check_setup_{0}_{1}.pdf'.format(case,subcase))
+  os.chdir(cwd)
+
diff --git a/atlas/config/config_AMMA.py b/atlas/config/config_AMMA.py
new file mode 100644
index 0000000..23725ed
--- /dev/null
+++ b/atlas/config/config_AMMA.py
@@ -0,0 +1,190 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['zcb','zct','theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(2006,7,10,6)
+tmax = cdtime.comptime(2006,7,10,18)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.               ,\
+        'ymax'    :   16.               ,\
+        'yname'   : 'altitude (km)'     ,\
+        'levunits': 'km'                ,\
+        'dtlabel' : '1h'                ,\
+        'xname'   : '10 July 2006 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*1. for i in range(-15,6,1)]  , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*1. for i in range(-7,8,1)]   , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(300,331,2)                , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(0,19,1)                   , 'extend':'max'                   , 'cmap':plt.cm.RdBu },\
+        'ql'      : {'levels': range(0,41,4)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qi'      : {'levels': [i*0.3 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qr'      : {'levels': [i*0.5 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qsn'     : {'levels': [i*0.5 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'rneb'    : {'levels': [0,1] + range(4,21,2)           , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'tnthl'   : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                                       },\
+        'tnqt'    : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '2h'                ,\
+        'xname'  : '10 July 2006 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-10., 'ymax':  400.},\
+        'lhf'            : {'ymin':-10., 'ymax':  100.},\
+        'ustar'          : {'ymin':  0., 'ymax':    1.},\
+        'tsurf'          : {'ymin':280., 'ymax':  330.},\
+        'rain'           : {'ymin':  0., 'ymax':    5.},\
+        'cc'             : {'ymin':  0., 'ymax':  100.},\
+        'zcb'            : {'ymin':  0., 'ymax': 5000.},\
+        'zct'            : {'ymin':  0., 'ymax':18000.},\
+        'lwp'            : {'ymin':  0., 'ymax':  100.},\
+        'iwp'            : {'ymin':  0., 'ymax':   15.},\
+        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour11-12'] = \
+        {\
+        'tmin'    : cdtime.comptime(2006,7,10,11),\
+        'tmax'    : cdtime.comptime(2006,7,10,12),\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '11-12 hour'                 ,\
+        }
+plotAvgP['hour11-12']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -20.  , 'xmax':  10. , 'init':True },\
+        'v'       : {'xmin':  -20.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  300.  , 'xmax': 320. , 'init':True },\
+        'qv'      : {'xmin':    6.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -2.  , 'xmax':   2.               },\
+        'B_up'    : {'xmin':   -0.05, 'xmax':   0.05             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+plotAvgP['hour15-16'] = \
+        {\
+        'tmin'    : cdtime.comptime(2006,7,10,15),\
+        'tmax'    : cdtime.comptime(2006,7,10,16),\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    8.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '15-16 hour'                 ,\
+        }
+plotAvgP['hour15-16']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -20.  , 'xmax':  10. , 'init':True },\
+        'v'       : {'xmin':  -20.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  300.  , 'xmax': 335. , 'init':True },\
+        'qv'      : {'xmin':    6.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -2.  , 'xmax':   2.               },\
+        'B_up'    : {'xmin':   -0.05, 'xmax':   0.05             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin': -20., 'xmax':   10.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin': -20., 'xmax':   10.},\
+        'v'    : {'xmin': -20., 'xmax':   10.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_ARMCU.py b/atlas/config/config_ARMCU.py
new file mode 100644
index 0000000..4f778db
--- /dev/null
+++ b/atlas/config/config_ARMCU.py
@@ -0,0 +1,220 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['zcb','zct','ql','qr']#,'theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(1997,6,21,11)
+tmax = cdtime.comptime(1997,6,22,3)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.               ,\
+        'ymax'    :    4.               ,\
+        'yname'   : 'altitude (km)'     ,\
+        'levunits': 'km'                ,\
+        'dtlabel' : '1h'                ,\
+        'xname'   : '21 June 1997 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': range(0,12,1)                   , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*0.5 for i in range(-6,7,1)]  , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(300,321,1)                , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(6,20,1)                   , 'extend':'max'                   , 'cmap':plt.cm.RdBu },\
+        'ql'      : {'levels': range(0,41,4)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qi'      : {'levels': [i*0.3 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qr'      : {'levels': [i*0.2 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qsn'     : {'levels': [i*0.5 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'rneb'    : {'levels': [0,1] + range(4,21,2)           , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+#        'tnthl'   : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                                       },\
+#        'tnqt'    : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '1h'                ,\
+        'xname'  : '21 June 1997 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-40., 'ymax':  160.},\
+        'lhf'            : {'ymin':  0., 'ymax':  600.},\
+        'ustar'          : {'ymin':  0., 'ymax':    1.},\
+        'tsurf'          : {'ymin':280., 'ymax':  320.},\
+        'rain'           : {'ymin':  0., 'ymax':    2.},\
+        'cc'             : {'ymin':  0., 'ymax':  100.},\
+        'zcb'            : {'ymin':  0., 'ymax': 2000.},\
+        'zct'            : {'ymin':  0., 'ymax': 4000.},\
+        'lwp'            : {'ymin':  0., 'ymax':   60.},\
+#        'iwp'            : {'ymin':  0., 'ymax':   15.},\
+#        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour7-8'] = \
+        {\
+        'tmin'    : tmin.add(7,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(8,cdtime.Hour)      ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '7-8 hour'                   ,\
+        }
+plotAvgP['hour7-8']['var2plot'] = \
+        {\
+        'u'       : {'xmin':    0.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':   -3.  , 'xmax':   3. , 'init':True },\
+        'theta'   : {'xmin':  300.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    6.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+#        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   50.               },\
+#        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+plotAvgP['hour9-10'] = \
+        {\
+        'tmin'    : tmin.add(9,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(10,cdtime.Hour)     ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '9-10 hour'                  ,\
+        }
+plotAvgP['hour9-10']['var2plot'] = \
+        {\
+        'u'       : {'xmin':    0.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':   -3.  , 'xmax':   3. , 'init':True },\
+        'theta'   : {'xmin':  300.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+#        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+#        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+#plotAvgP['hour10-11'] = \
+#        {\
+#        'tmin'    : tmin.add(10,cdtime.Hour)      ,\
+#        'tmax'    : tmin.add(11,cdtime.Hour)     ,\
+#        'ymin'    :    0.                        ,\
+#        'ymax'    :    4.                        ,\
+#        'yname'   : 'altitude (km)'              ,\
+#        'levunits': 'km'                         ,\
+#        'title'   : '10-11 hour'                  ,\
+#        }
+#plotAvgP['hour10-11']['var2plot'] = \
+#        {\
+#        'u'       : {'xmin':    0.  , 'xmax':  12. , 'init':True },\
+#        'v'       : {'xmin':   -3.  , 'xmax':   3. , 'init':True },\
+#        'theta'   : {'xmin':  300.  , 'xmax': 325. , 'init':True },\
+#        'qv'      : {'xmin':    0.  , 'xmax':  18. , 'init':True },\
+#        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+##        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+#        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+##        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+#        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+#        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+#        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+#        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+#        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+#        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+#        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+##        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+##        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+#        }        
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':   0., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':   0., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_ASTEX.py b/atlas/config/config_ASTEX.py
new file mode 100644
index 0000000..afa03ff
--- /dev/null
+++ b/atlas/config/config_ASTEX.py
@@ -0,0 +1,171 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for SANDU atlas
+###################################
+
+var2compute = ['zcb','zct']
+
+tmin = cdtime.comptime(1992,6,13,0)
+tmax = cdtime.comptime(1992,6,14,16)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.                  ,\
+        'ymax'    :    4.                  ,\
+        'yname'   : 'altitude k(m)'        ,\
+        'levunits': 'km'                   ,\
+        'dtlabel' : '6h'                   ,\
+        'xname'   : '13-14 June 1992 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*0.5 for i in range(-10,1)]         , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*1. for i in range(-12,1)]          , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(285,306,1)                     , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(0,14,1)                        , 'extend':'max'                    , 'cmap':plt.cm.RdBu},\
+        'ql'      : {'levels': range(0,421,30)                      , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'qr'      : {'levels': range(0,16,1)                        , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'rneb'    : {'levels': [0,1,5] + range(10,100,10) + [95,100], 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'w_up'    : {'levels': [i*0.1 for i in range(0,16,1)]       , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': range(0,11,1)                        , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)]     , 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]       , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)]     , 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '6h'                   ,\
+        'xname'  : '13-14 June 1992 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'  : {'ymin':-10., 'ymax':   40.},\
+        'lhf'  : {'ymin':  0., 'ymax':  200.},\
+        'ustar': {'ymin':  0., 'ymax':    1.},\
+        'tsurf': {'ymin':280., 'ymax':  320.},\
+        'rain' : {'ymin':  0., 'ymax':    3.},\
+        'cc'   : {'ymin':  0., 'ymax':  105.},\
+        'zcb'  : {'ymin':  0., 'ymax': 1000.},\
+        'zct'  : {'ymin':  0., 'ymax': 3000.},\
+        'lwp'  : {'ymin':  0., 'ymax':  250.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour23-24'] = \
+        {\
+        'tmin'    : tmin.add(23,cdtime.Hour),\
+        'tmax'    : tmin.add(24,cdtime.Hour),\
+        'ymin'    :    0.                   ,\
+        'ymax'    :    4.                   ,\
+        'yname'   : 'altitude (km)'         ,\
+        'levunits': 'km'                    ,\
+        'title'   : '23-24 hour'            ,\
+        }
+plotAvgP['hour23-24']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -5.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':  -12.  , 'xmax':   0. , 'init':True },\
+        'theta'   : {'xmin':  285.  , 'xmax': 315. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  13. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 500.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  20.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+plotAvgP['hour39-40'] = \
+        {\
+        'tmin'    : tmin.add(39,cdtime.Hour),\
+        'tmax'    : tmin.add(40,cdtime.Hour),\
+        'ymin'    :    0.                   ,\
+        'ymax'    :    4.                   ,\
+        'yname'   : 'altitude (km)'         ,\
+        'levunits': 'km'                    ,\
+        'title'   : '39-40 hour'            ,\
+        }
+plotAvgP['hour39-40']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -5.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':  -12.  , 'xmax':   0. , 'init':True },\
+        'theta'   : {'xmin':  285.  , 'xmax': 315. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  13. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 500.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  20.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   15.},\
+        'ql'   : {'xmin':  -1., 'xmax':  700.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  325.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  700.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_AYOTTE.py b/atlas/config/config_AYOTTE.py
new file mode 100644
index 0000000..f9f0b40
--- /dev/null
+++ b/atlas/config/config_AYOTTE.py
@@ -0,0 +1,133 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = []#['zcb','zct','theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(2009,12,11,0)
+tmax = cdtime.comptime(2009,12,11,6)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.                  ,\
+        'ymax'    :    4.                  ,\
+        'yname'   : 'altitude (km)'        ,\
+        'levunits': 'km'                   ,\
+        'dtlabel' : '1h'                   ,\
+        'xname'   : 'Hours since beginning',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': range(-1,16,1)                  , 'extend':'both'                                       },\
+        'v'       : {'levels': range(-6,7,1)                   , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(300,316,1)                , 'extend':'both'                                       },\
+        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '1h'                ,\
+        'xname'  : '21 June 1997 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-40., 'ymax':  300.},\
+        'lhf'            : {'ymin':-40., 'ymax':  300.},\
+        'ustar'          : {'ymin':  0., 'ymax':    1.},\
+        'tsurf'          : {'ymin':280., 'ymax':  320.},\
+#        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour4-5'] = \
+        {\
+        'tmin'    : tmin.add(4,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(5,cdtime.Hour)      ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '4-5 hour'                   ,\
+        }
+plotAvgP['hour4-5']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -1.  , 'xmax':  17. , 'init':True },\
+        'v'       : {'xmin':   -3.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  298.  , 'xmax': 325. , 'init':True },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -2.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -1., 'xmax':   17.},\
+        'v'    : {'xmin':  -3., 'xmax':   10.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':  -1., 'xmax':    5.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -1., 'xmax':   17.},\
+        'v'    : {'xmin':  -3., 'xmax':   10.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':  -1., 'xmax':    5.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_BOMEX.py b/atlas/config/config_BOMEX.py
new file mode 100644
index 0000000..bfbccc7
--- /dev/null
+++ b/atlas/config/config_BOMEX.py
@@ -0,0 +1,183 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['zcb','zct']#,'theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(1969,6,24,0)
+tmax = cdtime.comptime(1969,6,24,14)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.               ,\
+        'ymax'    :    4.               ,\
+        'yname'   : 'altitude (km)'     ,\
+        'levunits': 'km'                ,\
+        'dtlabel' : '1h'                ,\
+        'xname'   : '24 June 1969 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': range(-12,1,1)                  , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*0.5 for i in range(-8,9,1)]  , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(298,316,1)                , 'extend':'both'                                       },\
+        'qv'      : {'levels': [0,] + range(3,18,1)            , 'extend':'max'                   , 'cmap':plt.cm.RdBu },\
+        'ql'      : {'levels': range(0,16,1)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qr'      : {'levels': [i*0.2 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'rneb'    : {'levels': range(0,16,1)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'w_up'    : {'levels': [i*0.1 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+#        'tnthl'   : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                                       },\
+#        'tnqt'    : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '1h'                ,\
+        'xname'  : '24 June 1969 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-40., 'ymax':   20.},\
+        'lhf'            : {'ymin':  0., 'ymax':  200.},\
+        'ustar'          : {'ymin':  0., 'ymax':    1.},\
+        'tsurf'          : {'ymin':280., 'ymax':  320.},\
+        'rain'           : {'ymin':  0., 'ymax':    2.},\
+        'cc'             : {'ymin':  0., 'ymax':   60.},\
+        'zcb'            : {'ymin':  0., 'ymax': 1000.},\
+        'zct'            : {'ymin':  0., 'ymax': 4000.},\
+        'lwp'            : {'ymin':  0., 'ymax':   40.},\
+#        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour7-8'] = \
+        {\
+        'tmin'    : tmin.add(7,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(8,cdtime.Hour)      ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '7-8 hour'                   ,\
+        }
+plotAvgP['hour7-8']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':   -3.  , 'xmax':   3. , 'init':True },\
+        'theta'   : {'xmin':  295.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax':  40.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   5.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  20.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+plotAvgP['hour9-10'] = \
+        {\
+        'tmin'    : tmin.add(9,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(10,cdtime.Hour)     ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '9-10 hour'                  ,\
+        }
+plotAvgP['hour9-10']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':   -3.  , 'xmax':   3. , 'init':True },\
+        'theta'   : {'xmin':  295.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax':  40.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   5.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  20.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin': -12., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin': -12., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_CINDY-DYNAMO.py b/atlas/config/config_CINDY-DYNAMO.py
new file mode 100644
index 0000000..5a0818c
--- /dev/null
+++ b/atlas/config/config_CINDY-DYNAMO.py
@@ -0,0 +1,376 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['Qr_int','TOA_cre_sw','TOA_cre_lw','Qr_int_cre']
+
+tmin = cdtime.comptime(2011,10,1)
+tmax = cdtime.comptime(2011,12,31)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    : 1000.                   ,\
+        'ymax'    :   50.                   ,\
+        'yname'   : 'Pressure (hPa)'        ,\
+        'levunits': 'hPa'                   ,\
+        'dtlabel' : '10d'                   ,\
+        'xname'   : 'October-December 2011' ,\
+        'lgrid'   : True                    ,\
+        'figsize' : (20,5) ,\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*1. for i in range(-15,6,1)]   , 'lev':'ph', 'extend':'both'                                        },\
+        'v'       : {'levels': [i*1. for i in range(-7,8,1)]    , 'lev':'ph', 'extend':'both'                                        },\
+#        'theta'   : {'levels': range(300,331,2)                 , 'lev':'ph', 'extend':'both'                                        },\
+#        'qv'      : {'levels': range(0,19,1)                    , 'lev':'ph', 'extend':'max'                    , 'cmap':plt.cm.RdBu },\
+#        'ql'      : {'levels': range(0,41,4)                    , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qi'      : {'levels': [i*0.3 for i in range(0,16,1)]   , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qr'      : {'levels': [i*0.5 for i in range(0,21,1)]   , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qsn'     : {'levels': [i*0.5 for i in range(0,21,1)]   , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'hur'     : {'levels': [0,5]+range(10,91,10)+[95,100]   , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'rneb'    : {'levels': [0,1,5]+range(10,91,10)+[95,100] , 'lev':'ph', 'extend':'max' , 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]   , 'lev':'ph', 'extend':'max' , 'firstwhite':True                     },\
+#        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]    , 'lev':'ph', 'extend':'max' , 'firstwhite':True                     },\
+#        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)] , 'lev':'ph', 'extend':'max' , 'firstwhite':True                     },\
+#        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]   , 'lev':'ph', 'extend':'both'                                        },\
+#        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)] , 'lev':'ph', 'extend':'both'                                        },\
+#        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]   , 'lev':'ph', 'extend':'both'                                        },\
+#        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]   , 'lev':'ph', 'extend':'both'                                        },\
+        'Q1'      : {'levels': [i*2. for i in range(-7,8)]      , 'lev':'ph' , 'extend':'both'                                       },\
+        'Q2'      : {'levels': [i*2. for i in range(-7,8)]      , 'lev':'ph' , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# plot2D
+
+plot2Dbias = \
+        {\
+        'ymin'    : 1000.                   ,\
+        'ymax'    :   50.                   ,\
+        'yname'   : 'Pressure (hPa)'        ,\
+        'levunits': 'hPa'                   ,\
+        'dtlabel' : '10d'                   ,\
+        'xname'   : 'October-December 2011' ,\
+        'lgrid'   : True                    ,\
+        'figsize' : (20,5) ,\
+        }
+plot2Dbias['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*0.5 for i in range(-7,8,1)] , 'lev':'ph', 'refdataset':'CSU', 'extend':'both'                     },\
+        'v'       : {'levels': [i*0.5 for i in range(-7,8,1)] , 'lev':'ph', 'refdataset':'CSU', 'extend':'both'                     },\
+        'theta'   : {'levels': range(-10,11,1)                , 'lev':'ph', 'refdataset':'CSU', 'extend':'both'                     },\
+        'qv'      : {'levels': [i*0.5 for i in range(-7,8,1)] , 'lev':'ph', 'refdataset':'CSU', 'extend':'both', 'cmap':plt.cm.RdBu },\
+        'hur'     : {'levels': [i*5. for i in range(-7,8,1)]  , 'lev':'ph', 'refdataset':'CSU', 'extend':'both', 'cmap':plt.cm.RdBu },\
+#        'Q1'      : {'levels': [i*2. for i in range(-7,8)]  , 'lev':'ph',                       'extend':'both'                     },\
+#        'Q2'      : {'levels': [i*2. for i in range(-7,8)]  , 'lev':'ph',                       'extend':'both', 'cmap':plt.cm.RdBu },\
+        }
+        
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '10d'                   ,\
+        'xname'  : 'October-December 2011' ,\
+        'lgrid'   : True                   ,\
+        'figsize' : (20,5) ,\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':  -5., 'ymax':  30.},\
+        'lhf'            : {'ymin': -10., 'ymax': 200.},\
+#        'ustar'          : {'ymin':   0., 'ymax':    1.},\
+        'tsurf'          : {'ymin': 299., 'ymax': 304.},\
+        'rain'           : {'ymin':   0., 'ymax':  80.},\
+        'cc'             : {'ymin':   0., 'ymax': 105.},\
+        'cltl'           : {'ymin':   0., 'ymax': 105.},\
+        'clth'           : {'ymin':   0., 'ymax': 105.},\
+        'Qr_int'         : {'ymin':-200., 'ymax':  50.},\
+        'Qr_int_cre'     : {'ymin': -50., 'ymax': 200.},\
+        'rsut'           : {'ymin':   0., 'ymax': 300.},\
+        'rsdt'           : {'ymin': 350., 'ymax': 450.},\
+        'rlut'           : {'ymin': 100., 'ymax': 350.},\
+        'rsus'           : {'ymin':   0., 'ymax':  30.},\
+        'rsds'           : {'ymin':   0., 'ymax': 400.},\
+        'rlus'           : {'ymin': 400., 'ymax': 500.},\
+        'rlds'           : {'ymin': 300., 'ymax': 500.},\
+        'TOA_cre_sw'     : {'ymin':-250., 'ymax':  50.},\
+        'TOA_cre_lw'     : {'ymin':   0., 'ymax': 200.},\
+#        'zcb'            : {'ymin':   0., 'ymax': 5000.},\
+#        'zct'            : {'ymin':   0., 'ymax':18000.},\
+        'lwp'            : {'ymin':   0., 'ymax': 300.},\
+        'iwp'            : {'ymin':   0., 'ymax': 300.},\
+#        'theta_0_500'    : {'ymin': 300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin': 310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin':  10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':   2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['avg'] = \
+        {\
+        'tmin'    : tmin                      ,\
+        'tmax'    : tmax                      ,\
+        'ymin'    : 1000.                     ,\
+        'ymax'    :   50.                     ,\
+        'yname'   : 'Pressure (hPa)'          ,\
+        'levunits': 'hPa'                     ,\
+        'title'   : 'Average'                 ,\
+        'lgrid'   : True                      ,\
+        }
+plotAvgP['avg']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -20.  , 'xmax':  10.  , 'lev':'pf'},\
+        'v'       : {'xmin':   -2.  , 'xmax':   2.  , 'lev':'pf'},\
+        'theta'   : {'xmin':  290.  , 'xmax': 340.  , 'lev':'pf'},\
+        'qv'      : {'xmin':    0.  , 'xmax':  22.  , 'lev':'pf'},\
+#        'ql'      : {'xmin':    0.  , 'xmax': 100.  , 'lev':'pf'},\
+#        'qi'      : {'xmin':    0.  , 'xmax':  10.  , 'lev':'pf'},\
+#        'qr'      : {'xmin':    0.  , 'xmax':  50.  , 'lev':'pf'},\
+#        'qsn'     : {'xmin':    0.  , 'xmax':  50.  , 'lev':'pf'},\
+        'hur'     : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'rneb'    : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+#        'w_up'    : {'xmin':    0.  , 'xmax':   4.  , 'lev':'pf'},\
+#        'alpha_up': {'xmin':    0.  , 'xmax':  25.  , 'lev':'pf'},\
+#        'Mf'      : {'xmin':    0.  , 'xmax':   0.3 , 'lev':'pf'},\
+#        'dTv_up'  : {'xmin':   -2.  , 'xmax':   2.  , 'lev':'pf'},\
+#        'B_up'    : {'xmin':   -0.05, 'xmax':   0.05, 'lev':'pf'},\
+#        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5. , 'lev':'pf'},\
+#        'det_u'   : {'xmin':   -0.5 , 'xmax':   5. , 'lev':'pf'},\
+        'Q1'      : {'xmin':   -2.  , 'xmax':   5.  , 'lev':'pf'},\
+        'Q2'      : {'xmin':   -2.  , 'xmax':   5.  ,'lev':'pf'},\
+        }
+
+plotAvgP['avg_bias'] = \
+        {\
+        'tmin'    : tmin                      ,\
+        'tmax'    : tmax                      ,\
+        'ymin'    : 1000.                     ,\
+        'ymax'    :   50.                     ,\
+        'yname'   : 'Pressure (hPa)'          ,\
+        'levunits': 'hPa'                     ,\
+        'title'   : 'Bias average'            ,\
+        'lgrid'   : True                      ,\
+        }
+plotAvgP['avg_bias']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -2.  , 'xmax':   2. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'v'       : {'xmin':   -2.  , 'xmax':   2. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'theta'   : {'xmin':   -4.  , 'xmax':   4. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'qv'      : {'xmin':   -3.  , 'xmax':   3. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'hur'     : {'xmin':  -40.  , 'xmax':  40. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+#        'Q1'      : {'xmin':   -2.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+#        'Q2'      : {'xmin':   -2.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        }
+
+# 1st MJO event
+
+plotAvgP['MJO1'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,10,20,0),\
+        'tmax'    : cdtime.comptime(2011,11,1,0) ,\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'MJO1 (10/20-11/01)'         ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['MJO1']['var2plot'] = \
+        {\
+        'hur'     : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'rneb'    : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'Q1'      : {'xmin':   -2.  , 'xmax':   12.  , 'lev':'pf'},\
+        'Q2'      : {'xmin':   -2.  , 'xmax':   12.  ,'lev':'pf'},\
+        }
+
+plotAvgP['MJO1_bias'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,10,20,0),\
+        'tmax'    : cdtime.comptime(2011,11,1,0) ,\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'MJO1 (10/20-11/01) - Bias'  ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['MJO1_bias']['var2plot'] = \
+        {\
+        'theta'   : {'xmin':   -5.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'qv'      : {'xmin':   -3.  , 'xmax':   3. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        }
+
+# 2nd suppressed phase
+
+plotAvgP['SUPP2'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,11,5,0) ,\
+        'tmax'    : cdtime.comptime(2011,11,15,0),\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'SUPP2 (11/05-11/15)'        ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['SUPP2']['var2plot'] = \
+        {\
+        'hur'     : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'rneb'    : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'Q1'      : {'xmin':   -2.  , 'xmax':    5. , 'lev':'pf'},\
+        'Q2'      : {'xmin':   -2.  , 'xmax':    5. ,'lev':'pf'},\
+        }
+
+plotAvgP['SUPP2_bias'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,11,5,0) ,\
+        'tmax'    : cdtime.comptime(2011,11,15,0),\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'SUPP2 (11/05-11/15) - Bias' ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['SUPP2_bias']['var2plot'] = \
+        {\
+        'theta'   : {'xmin':   -5.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'qv'      : {'xmin':   -3.  , 'xmax':   3. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        }
+
+# 2nd MJO event
+
+plotAvgP['MJO2'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,11,20,0),\
+        'tmax'    : cdtime.comptime(2011,12,1,0) ,\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'MJO2 (11/20-12/01)'         ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['MJO2']['var2plot'] = \
+        {\
+        'hur'     : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'rneb'    : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'Q1'      : {'xmin':   -2.  , 'xmax':   12.  , 'lev':'pf'},\
+        'Q2'      : {'xmin':   -2.  , 'xmax':   12.  ,'lev':'pf'},\
+        }
+
+plotAvgP['MJO2_bias'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,11,20,0),\
+        'tmax'    : cdtime.comptime(2011,12,1,0) ,\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'MJO2 (11/20-12/01) - Bias'  ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['MJO2_bias']['var2plot'] = \
+        {\
+        'theta'   : {'xmin':   -5.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'qv'      : {'xmin':   -3.  , 'xmax':   3. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        }        
+
+# 3rd suppressed phase
+
+plotAvgP['SUPP3'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,12,1,0) ,\
+        'tmax'    : cdtime.comptime(2011,12,10,0),\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'SUPP3 (12/01-12/10)'        ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['SUPP3']['var2plot'] = \
+        {\
+        'hur'     : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'rneb'    : {'xmin':    0.  , 'xmax':  100. , 'lev':'pf'},\
+        'Q1'      : {'xmin':   -2.  , 'xmax':    5. , 'lev':'pf'},\
+        'Q2'      : {'xmin':   -2.  , 'xmax':    5. ,'lev':'pf'},\
+        }
+
+plotAvgP['SUPP3_bias'] = \
+        {\
+        'tmin'    : cdtime.comptime(2011,12,1,0) ,\
+        'tmax'    : cdtime.comptime(2011,12,10,0),\
+        'ymin'    : 1000.                        ,\
+        'ymax'    :   50.                        ,\
+        'yname'   : 'Pressure (hPa)'             ,\
+        'levunits': 'hPa'                        ,\
+        'title'   : 'SUPP3 (12/01-12/10) - Bias' ,\
+        'lgrid'   : True                         ,\
+        }
+plotAvgP['SUPP3_bias']['var2plot'] = \
+        {\
+        'theta'   : {'xmin':   -5.  , 'xmax':   5. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        'qv'      : {'xmin':   -3.  , 'xmax':   3. , 'lev':'pf', 'lbias':True, 'refdataset':'CSU'},\
+        }        
+        
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    : 1000.           ,\
+        'ymax'    :   50.           ,\
+        'yname'   : 'Pressure (hPa)',\
+        'levunits': 'hPa'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin': -20., 'xmax':   10., 'lev':'pf'},\
+        'v'    : {'xmin': -20., 'xmax':   20., 'lev':'pf'},\
+        'theta': {'xmin': 295., 'xmax':  400., 'lev':'pf'},\
+        'qv'   : {'xmin':   0., 'xmax':   18., 'lev':'pf'},\
+        'qv'   : {'xmin':  -1., 'xmax':   18., 'lev':'pf'},\
+        'ql'   : {'xmin':  -1., 'xmax':  200., 'lev':'pf'},\
+        'qi'   : {'xmin':  -1., 'xmax':  200., 'lev':'pf'},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'pf'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+#        'u'    : {'xmin': -20., 'xmax':   10., 'lev':'pf'},\
+#        'v'    : {'xmin': -20., 'xmax':   10., 'lev':'pf'},\
+#        'theta': {'xmin': 295., 'xmax':  325., 'lev':'pf'},\
+#        'qv'   : {'xmin':   0., 'xmax':   18., 'lev':'pf'},\
+#        'qv'   : {'xmin':  -1., 'xmax':   18., 'lev':'pf'},\
+#        'ql'   : {'xmin':  -1., 'xmax':  200., 'lev':'pf'},\
+#        'qi'   : {'xmin':  -1., 'xmax':  200., 'lev':'pf'},\
+#        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'pf'},\
+        }
+
diff --git a/atlas/config/config_FIRE.py b/atlas/config/config_FIRE.py
new file mode 100644
index 0000000..1119070
--- /dev/null
+++ b/atlas/config/config_FIRE.py
@@ -0,0 +1,173 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['zcb','zct']
+
+tmin = cdtime.comptime(1987,7,14,8)
+tmax = cdtime.comptime(1987,7,15,8)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.                  ,\
+        'ymax'    : 1200.                  ,\
+        'yname'   : 'altitude (m)'         ,\
+        'levunits': 'm'                    ,\
+        'dtlabel' : '2h'                   ,\
+        'xname'   : '14-15 July 1987 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*0.5 for i in range(0,11)]         , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*0.5 for i in range(-10,1)]        , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(287,301,1)                     , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(0,11,1)                        , 'extend':'max'                    , 'cmap':plt.cm.RdBu},\
+        'ql'      : {'levels': range(0,701,50)                      , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'qr'      : {'levels': range(0,16,1)                        , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'rneb'    : {'levels': [0,1,5] + range(10,100,10) + [95,100], 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'w_up'    : {'levels': [i*0.1 for i in range(0,16,1)]       , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': range(0,11,1)                        , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)]     , 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]       , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)]     , 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '2h'                   ,\
+        'xname'  : '14-15 July 1987 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'  : {'ymin': -5., 'ymax':   20.},\
+        'lhf'  : {'ymin':  0., 'ymax':   50.},\
+        'ustar': {'ymin':  0., 'ymax':    1.},\
+        'tsurf': {'ymin':280., 'ymax':  320.},\
+        'rain' : {'ymin':  0., 'ymax':    3.},\
+        'cc'   : {'ymin':  0., 'ymax':  105.},\
+        'zcb'  : {'ymin':  0., 'ymax': 1000.},\
+        'zct'  : {'ymin':  0., 'ymax': 1000.},\
+        'lwp'  : {'ymin':  0., 'ymax':  200.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour4-8'] = \
+        {\
+        'tmin'    : tmin.add(4,cdtime.Hour),\
+        'tmax'    : tmin.add(8,cdtime.Hour),\
+        'ymin'    :    0.                  ,\
+        'ymax'    : 1200.                  ,\
+        'yname'   : 'altitude (m)'         ,\
+        'levunits': 'm'                    ,\
+        'title'   : '4-6 hour (night)'     ,\
+        }
+plotAvgP['hour4-8']['var2plot'] = \
+        {\
+        'u'       : {'xmin':    0.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':   -6.  , 'xmax':   0. , 'init':True },\
+        'theta'   : {'xmin':  280.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  15. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 700.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+plotAvgP['hour12-16'] = \
+        {\
+        'tmin'    : tmin.add(12,cdtime.Hour),\
+        'tmax'    : tmin.add(16,cdtime.Hour),\
+        'ymin'    :    0.                   ,\
+        'ymax'    : 1200.                   ,\
+        'yname'   : 'altitude (m)'          ,\
+        'levunits': 'm'                     ,\
+        'title'   : '12-16 hour (day)'      ,\
+        }
+plotAvgP['hour12-16']['var2plot'] = \
+        {\
+        'u'       : {'xmin':    0.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':   -6.  , 'xmax':   0. , 'init':True },\
+        'theta'   : {'xmin':  280.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  15. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 700.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   15.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  700.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.         ,\
+        'ymax'    : 1200.         ,\
+        'yname'   : 'altitude (m)',\
+        'levunits': 'm'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  325.},\
+        'qv'   : {'xmin':   0., 'xmax':   15.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  700.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_IHOP.py b/atlas/config/config_IHOP.py
new file mode 100644
index 0000000..8f502a3
--- /dev/null
+++ b/atlas/config/config_IHOP.py
@@ -0,0 +1,154 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for FIRE atlas
+###################################
+
+var2compute = ['ql','qr']#,'theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(2002,6,14,6)
+tmax = cdtime.comptime(2002,6,14,12)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.               ,\
+        'ymax'    :    4.               ,\
+        'yname'   : 'altitude (km)'     ,\
+        'levunits': 'km'                ,\
+        'dtlabel' : '1h'                ,\
+        'xname'   : '14 June 2002 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': range(0,12,1)                   , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*0.5 for i in range(-6,7,1)]  , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(300,321,1)                , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(6,20,1)                   , 'extend':'max'                   , 'cmap':plt.cm.RdBu },\
+        'ql'      : {'levels': range(0,41,4)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qi'      : {'levels': [i*0.3 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qr'      : {'levels': [i*0.2 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'qsn'     : {'levels': [i*0.5 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+#        'rneb'    : {'levels': [0,1] + range(4,21,2)           , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+#        'tnthl'   : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                                       },\
+#        'tnqt'    : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '1h'                ,\
+        'xname'  : '14 June 2002 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-40., 'ymax':  160.},\
+        'lhf'            : {'ymin':  0., 'ymax':  600.},\
+        'ustar'          : {'ymin':  0., 'ymax':    1.},\
+        'tsurf'          : {'ymin':280., 'ymax':  320.},\
+        'rain'           : {'ymin':  0., 'ymax':    2.},\
+        'cc'             : {'ymin':  0., 'ymax':  100.},\
+#        'iwp'            : {'ymin':  0., 'ymax':   15.},\
+#        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour5-6'] = \
+        {\
+        'tmin'    : tmin.add(5,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(6,cdtime.Hour)      ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '5-6 hour'                   ,\
+        }
+plotAvgP['hour5-6']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':   -10.  , 'xmax':   10. , 'init':True },\
+        'theta'   : {'xmin':  2900.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  18. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 100.               },\
+#        'qi'      : {'xmin':    0.  , 'xmax':  10.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   50.               },\
+#        'qsn'     : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  60.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':   0., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':   0., 'xmax':   12.},\
+        'v'    : {'xmin':  -3., 'xmax':    3.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_RICO.py b/atlas/config/config_RICO.py
new file mode 100644
index 0000000..cdcbe1d
--- /dev/null
+++ b/atlas/config/config_RICO.py
@@ -0,0 +1,183 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for RICO atlas
+###################################
+
+var2compute = ['zcb','zct']#,'theta_0_500','theta_2000_5000','qv_0_500','qv_2000_5000']
+
+tmin = cdtime.comptime(2004,12,16,0)
+tmax = cdtime.comptime(2004,12,17,0)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.                   ,\
+        'ymax'    :    4.                   ,\
+        'yname'   : 'altitude (km)'         ,\
+        'levunits': 'km'                    ,\
+        'dtlabel' : '2h'                    ,\
+        'xname'   : '16 December 2004 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': range(-12,1,1)                  , 'extend':'both'                                       },\
+        'v'       : {'levels': range(-8,9,1)                   , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(295,311,1)                , 'extend':'both'                                       },\
+        'qv'      : {'levels': [0,] + range(3,18,1)            , 'extend':'max'                   , 'cmap':plt.cm.RdBu },\
+        'ql'      : {'levels': range(0,21,1)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'qr'      : {'levels': [i*0.2 for i in range(0,21,1)]  , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'rneb'    : {'levels': range(0,16,1)                   , 'extend':'max', 'firstwhite':True, 'cmap':plt.cm.RdBu },\
+        'w_up'    : {'levels': [i*0.2 for i in range(0,16,1)]  , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': [i*1. for i in range(0,16,1)]   , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.002 for i in range(0,16,1)], 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]  , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)], 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]  , 'extend':'both'                                       },\
+#        'tnthl'   : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                                       },\
+#        'tnqt'    : {'levels': [i*0.5 for i in range(-7,8)]    , 'extend':'both'                  , 'cmap':plt.cm.RdBu },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '2h'                    ,\
+        'xname'  : '16 December 2004 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'            : {'ymin':-10., 'ymax':   50. },\
+        'lhf'            : {'ymin':  0., 'ymax':  250. },\
+        'ustar'          : {'ymin':  0., 'ymax':    0.6},\
+        'tsurf'          : {'ymin':280., 'ymax':  320. },\
+        'rain'           : {'ymin':  0., 'ymax':    2. },\
+        'cc'             : {'ymin':  0., 'ymax':  105. },\
+        'zcb'            : {'ymin':  0., 'ymax': 1000. },\
+        'zct'            : {'ymin':  0., 'ymax': 4000. },\
+        'lwp'            : {'ymin':  0., 'ymax':   80. },\
+#        'theta_0_500'    : {'ymin':300., 'ymax':  312.},\
+#        'theta_2000_5000': {'ymin':310., 'ymax':  320.},\
+#        'qv_0_500'       : {'ymin': 10., 'ymax':   20.},\
+#        'qv_2000_5000'   : {'ymin':  2., 'ymax':    8.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour8-12'] = \
+        {\
+        'tmin'    : tmin.add(8,cdtime.Hour)      ,\
+        'tmax'    : tmin.add(12,cdtime.Hour)     ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '8-12 hour'                  ,\
+        }
+plotAvgP['hour8-12']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':  -10.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  295.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  20. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax':  40.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   5.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  20.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+plotAvgP['hour20-24'] = \
+        {\
+        'tmin'    : tmin.add(20,cdtime.Hour)     ,\
+        'tmax'    : tmin.add(24,cdtime.Hour)     ,\
+        'ymin'    :    0.                        ,\
+        'ymax'    :    4.                        ,\
+        'yname'   : 'altitude (km)'              ,\
+        'levunits': 'km'                         ,\
+        'title'   : '20-24 hour'                 ,\
+        }
+plotAvgP['hour20-24']['var2plot'] = \
+        {\
+        'u'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'v'       : {'xmin':  -12.  , 'xmax':  12. , 'init':True },\
+        'theta'   : {'xmin':  295.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  20. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax':  40.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':   5.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax':  20.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+#        'tnthl'   : {'xmin':   -2.  , 'xmax':   2.               },\
+#        'tnqt'    : {'xmin':   -2.  , 'xmax':   2.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin': -12., 'xmax':   35.},\
+        'v'    : {'xmin': -10., 'xmax': 10.},\
+        'theta': {'xmin': 295., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin': -12., 'xmax':   12.},\
+        'v'    : {'xmin': -10., 'xmax':   10.},\
+        'theta': {'xmin': 295., 'xmax':  325.},\
+        'qv'   : {'xmin':   0., 'xmax':   18.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/config_SANDU.py b/atlas/config/config_SANDU.py
new file mode 100644
index 0000000..27a4792
--- /dev/null
+++ b/atlas/config/config_SANDU.py
@@ -0,0 +1,169 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import matplotlib as plt # for colormaps
+
+###################################
+# Configuration file for SANDU atlas
+###################################
+
+var2compute = ['zcb','zct']
+
+tmin = cdtime.comptime(2007,7,15,0)
+tmax = cdtime.comptime(2007,7,18,0)
+
+
+#################
+# plot2D
+
+plot2D = \
+        {\
+        'ymin'    :    0.                  ,\
+        'ymax'    :    4.                  ,\
+        'yname'   : 'altitude k(m)'        ,\
+        'levunits': 'km'                   ,\
+        'dtlabel' : '6h'                   ,\
+        'xname'   : '15-18 July 2007 (UTC)',\
+        }
+plot2D['var2plot'] = \
+        {\
+        'u'       : {'levels': [i*0.3 for i in range(-7,8)]         , 'extend':'both'                                       },\
+        'v'       : {'levels': [i*1. for i in range(-7,8)]          , 'extend':'both'                                       },\
+        'theta'   : {'levels': range(290,306,1)                     , 'extend':'both'                                       },\
+        'qv'      : {'levels': range(0,16,1)                        , 'extend':'max'                    , 'cmap':plt.cm.RdBu},\
+        'ql'      : {'levels': range(0,421,30)                      , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'qr'      : {'levels': range(0,16,1)                        , 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'rneb'    : {'levels': [0,1,5] + range(10,100,10) + [95,100], 'extend':'max', 'firstwhite':True , 'cmap':plt.cm.RdBu},\
+        'w_up'    : {'levels': [i*0.1 for i in range(0,16,1)]       , 'extend':'max', 'firstwhite':True                     },\
+        'alpha_up': {'levels': range(0,11,1)                        , 'extend':'max', 'firstwhite':True                     },\
+        'Mf'      : {'levels': [i*0.005 for i in range(0,16,1)]     , 'extend':'max', 'firstwhite':True                     },\
+        'dTv_up'  : {'levels': [i*0.1 for i in range(-7,8,1)]       , 'extend':'both'                                       },\
+        'B_up'    : {'levels': [i*0.002 for i in range(-7,8,1)]     , 'extend':'both'                                       },\
+        'eps_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        'det_u'   : {'levels': [i*0.3 for i in range(0,15,1)]       , 'extend':'both'                                       },\
+        }
+
+#################
+# timeseries
+
+plotTS = \
+        {\
+        'dtlabel': '6h'                   ,\
+        'xname'  : '15-18 July 2007 (UTC)',\
+        }
+plotTS['var2plot'] = \
+        {\
+        'shf'  : {'ymin':-10., 'ymax':   40.},\
+        'lhf'  : {'ymin':  0., 'ymax':  200.},\
+        'ustar': {'ymin':  0., 'ymax':    1.},\
+        'tsurf': {'ymin':280., 'ymax':  320.},\
+        'rain' : {'ymin':  0., 'ymax':    3.},\
+        'cc'   : {'ymin':  0., 'ymax':  105.},\
+        'zcb'  : {'ymin':  0., 'ymax': 1000.},\
+        'zct'  : {'ymin':  0., 'ymax': 3000.},\
+        'lwp'  : {'ymin':  0., 'ymax':  150.},\
+        }
+
+#################
+# Averaged profiles over time slices
+
+plotAvgP = {}
+plotAvgP['hour23-24'] = \
+        {\
+        'tmin'    : tmin.add(23,cdtime.Hour),\
+        'tmax'    : tmin.add(24,cdtime.Hour),\
+        'ymin'    :    0.                   ,\
+        'ymax'    :    4.                   ,\
+        'yname'   : 'altitude (km)'         ,\
+        'levunits': 'km'                    ,\
+        'title'   : '23-24 hour'            ,\
+        }
+plotAvgP['hour23-24']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -5.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':  -10.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  280.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  15. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 500.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+plotAvgP['hour47-48'] = \
+        {\
+        'tmin'    : tmin.add(47,cdtime.Hour),\
+        'tmax'    : tmin.add(48,cdtime.Hour),\
+        'ymin'    :    0.                   ,\
+        'ymax'    :    4.                   ,\
+        'yname'   : 'altitude (km)'         ,\
+        'levunits': 'km'                    ,\
+        'title'   : '47-48 hour'            ,\
+        }
+plotAvgP['hour47-48']['var2plot'] = \
+        {\
+        'u'       : {'xmin':   -5.  , 'xmax':   5. , 'init':True },\
+        'v'       : {'xmin':  -10.  , 'xmax':  10. , 'init':True },\
+        'theta'   : {'xmin':  280.  , 'xmax': 325. , 'init':True },\
+        'qv'      : {'xmin':    0.  , 'xmax':  15. , 'init':True },\
+        'ql'      : {'xmin':    0.  , 'xmax': 500.               },\
+        'qr'      : {'xmin':    0.  , 'xmax':  50.               },\
+        'rneb'    : {'xmin':    0.  , 'xmax': 105.               },\
+        'w_up'    : {'xmin':    0.  , 'xmax':   4.               },\
+        'alpha_up': {'xmin':    0.  , 'xmax':  25.               },\
+        'Mf'      : {'xmin':    0.  , 'xmax':   0.3, 'lev':'zh'  },\
+        'dTv_up'  : {'xmin':   -1.  , 'xmax':   1.               },\
+        'B_up'    : {'xmin':   -0.02, 'xmax':   0.02             },\
+        'eps_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        'det_u'   : {'xmin':   -0.5 , 'xmax':   5.               },\
+        }
+
+
+#################
+# Checking initial profiles - global view
+
+plotInitGV = \
+        {\
+        'ymin'    :  0.            ,\
+        'ymax'    : 20.            ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitGV['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  400.},\
+        'qv'   : {'xmin':   0., 'xmax':   15.},\
+        }
+
+#################
+# Checking initial profiles - zoom in lowest levels
+
+plotInitLL = \
+        {\
+        'ymin'    :    0.          ,\
+        'ymax'    :    4.          ,\
+        'yname'   : 'altitude (km)',\
+        'levunits': 'km'           ,\
+        }
+
+plotInitLL['var2plot'] = \
+        {\
+        'u'    : {'xmin':  -5., 'xmax':    5.},\
+        'v'    : {'xmin': -20., 'xmax':   20.},\
+        'theta': {'xmin': 280., 'xmax':  325.},\
+        'qv'   : {'xmin':   0., 'xmax':   15.},\
+        'qv'   : {'xmin':  -1., 'xmax':   18.},\
+        'ql'   : {'xmin':  -1., 'xmax':  200.},\
+        'qi'   : {'xmin':  -1., 'xmax':  200.},\
+        'tke'  : {'xmin':  -1., 'xmax':    2., 'lev':'zh'},\
+        }
+
diff --git a/atlas/config/variables_info.py b/atlas/config/variables_info.py
new file mode 100644
index 0000000..9a351dc
--- /dev/null
+++ b/atlas/config/variables_info.py
@@ -0,0 +1,306 @@
+names = {}
+units = {}
+coefs = {}
+
+########################
+# 2D Variables
+########################
+
+# Zonal wind
+vv = 'u'
+names[vv] = 'Zonal wind'
+units[vv] = 'm s$^{-1}$'
+coefs[vv] = 1.
+
+# Meridional wind
+vv = 'v'
+names[vv] = 'Meridional wind'
+units[vv] = 'm s$^{-1}$'
+coefs[vv] = 1.
+
+# Potential temperature
+vv = 'theta'
+names[vv] = 'Potential temperature'
+units[vv] = 'K'
+coefs[vv] = 1.
+
+# Specific humidity
+vv = 'qv'
+names[vv] = 'Specific humidity'
+units[vv] = 'g kg$^{-1}$'
+coefs[vv] = 1000.
+
+# Cloud Fraction
+vv = 'rneb'
+names[vv] = 'Cloud fraction'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# Liquid water
+vv = 'ql'
+names[vv] = 'Liquid water content'
+units[vv] = 'mg kg$^{-1}$'
+coefs[vv] = 1.e6
+
+# Ice water
+vv = 'qi'
+names[vv] = 'Ice water content'
+units[vv] = 'mg kg$^{-1}$'
+coefs[vv] = 1.e6
+
+# Rain content
+vv = 'qr'
+names[vv] = 'Rain content'
+units[vv] = 'mg kg$^{-1}$'
+coefs[vv] = 1.e6
+
+# Rain content
+vv = 'qsn'
+names[vv] = 'Snow content'
+units[vv] = 'mg kg$^{-1}$'
+coefs[vv] = 1.e6
+
+# Rain content
+vv = 'hur'
+names[vv] = 'Relative humidity'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# Turbulent Kinetic Energy
+vv = 'tke'
+names[vv] = 'TKE'
+units[vv] = 'm$^{2}$ s$^{-2}$'
+coefs[vv] = 1.
+
+# Updraft Vertical Velocity
+vv = 'w_up'
+names[vv] = 'Updraft vertical velocity'
+units[vv] = 'm s$^{-1}$'
+coefs[vv] = 1.
+
+# Updraft Area Fraction
+vv = 'alpha_up'
+names[vv] = 'Updraft area fraction'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# Updraft Mass Flux
+vv = 'Mf'
+names[vv] = 'Updraft mass flux'
+units[vv] = 'kg m$^{-2}$ s$^{-1}$'
+coefs[vv] = 1.
+
+# Updraft dTv
+vv = 'dTv_up'
+names[vv] = 'Updraft dTv'
+units[vv] = 'K'
+coefs[vv] = 1.
+
+# Updraft Buoyancy
+vv = 'B_up'
+names[vv] = 'Updraft Buoyancy'
+units[vv] = 'm s$^{-2}$'
+coefs[vv] = 1.
+
+# Updraft Entrainment
+vv = 'eps_u'
+names[vv] = 'Updraft Entrainment'
+units[vv] = 'km$^{-1}$'
+coefs[vv] = 1000.
+
+# Updraft Entrainment
+vv = 'det_u'
+names[vv] = 'Updraft Detrainment'
+units[vv] = 'km$^{-1}$'
+coefs[vv] = 1000.
+
+# Theta_l tendency
+vv = 'tnthl'
+names[vv] = r'Physical tendency of $\theta_l$'
+units[vv] = 'K h$^{-1}$'
+coefs[vv] = 3600.
+
+# q_t tendency
+vv = 'tnqt'
+names[vv] = 'Physical tendency of $q_t$'
+units[vv] = 'g kg$^{-1}$ h$^{-1}$'
+coefs[vv] = 3600.*1000.
+
+# Q1
+vv = 'Q1'
+names[vv] = 'Apparent heat source'
+units[vv] = 'K day$^{-1}$'
+coefs[vv] = 86400.
+
+# Q2
+vv = 'Q2'
+names[vv] = 'Apparent moisture sink'
+units[vv] = 'K day$^{-1}$'
+coefs[vv] = 86400.
+
+########################
+# 1D Variables
+########################
+
+# Sensible heat flux
+vv = 'shf'
+names[vv] = 'Sensible heat flux'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Latent heat flux
+vv = 'lhf'
+names[vv] = 'Latent heat flux'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# ustar
+vv = 'ustar'
+names[vv] = 'Surface friction velocity'
+units[vv] = 'm s$^{-1}$'
+coefs[vv] = 1.
+
+# Surface temperature
+vv = 'tsurf'
+names[vv] = 'Surface temperature'
+units[vv] = 'K'
+coefs[vv] = 1.
+
+# Precipitation
+vv = 'rain'
+names[vv] = 'Precipitation'
+units[vv] = 'mm day$^{-1}$'
+coefs[vv] = 86400.
+
+# Total Cloud Fraction
+vv = 'cc'
+names[vv] = 'Total Cloud Fraction'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# Low Cloud Fraction
+vv = 'cltl'
+names[vv] = 'Low Cloud Fraction'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# High Cloud Fraction
+vv = 'clth'
+names[vv] = 'High Cloud Fraction'
+units[vv] = '%'
+coefs[vv] = 100.
+
+# Liquid Water Path
+vv = 'lwp'
+names[vv] = 'Liquid Water Path'
+units[vv] = 'g m$^{{-2}}$'
+coefs[vv] = 1000.
+
+# Ice Water Path
+vv = 'iwp'
+names[vv] = 'Ice Water Path'
+units[vv] = 'g m$^{{-2}}$'
+coefs[vv] = 1000.
+
+# Cloud Base Height
+vv = 'zcb'
+names[vv] = 'Cloud Base Height'
+units[vv] = 'm'
+coefs[vv] = 1.
+
+# Cloud Top Height
+vv = 'zct'
+names[vv] = 'Cloud Top Height'
+units[vv] = 'm'
+coefs[vv] = 1.
+
+# Potential temperature averaged over 0-500m
+vv = 'theta_0_500'
+names[vv] = 'Potential temperature averaged over 0-500m'
+units[vv] = 'K'
+coefs[vv] = 1.
+
+# Potential temperature averaged over 2000-5000m
+vv = 'theta_2000_5000'
+names[vv] = 'Potential temperature averaged over 2000-5000m'
+units[vv] = 'K'
+coefs[vv] = 1.
+
+# Specific humidity averaged over 0-500m
+vv = 'qv_0_500'
+names[vv] = 'Specific humidity averaged over 0-500m'
+units[vv] = 'K'
+coefs[vv] = 1000.
+
+# Specific humidity averaged over 2000-5000m
+vv = 'qv_2000_5000'
+names[vv] = 'Specific humidity averaged over 2000-5000m'
+units[vv] = 'K'
+coefs[vv] = 1000.
+
+# TOA Outgoing Shortwave Radiation
+vv = 'rsut'
+names[vv] = 'TOA Outgoing Shortwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# TOA Incoming Shortwave Radiation
+vv = 'rsdt'
+names[vv] = 'TOA Incoming Shortwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# TOA Outgoing Longwave Radiation
+vv = 'rlut'
+names[vv] = 'TOA Outgoing Longwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Surface Upwelling Shortwave Radiation
+vv = 'rsus'
+names[vv] = 'Surface Upwelling Shortwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Surface Downwelling Shortwave Radiation
+vv = 'rsds'
+names[vv] = 'Surface Downwelling Shortwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Surface Upwelling Longwave Radiation
+vv = 'rlus'
+names[vv] = 'Surface Upwelling Longwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Surface Downwelling Longwave Radiation
+vv = 'rlds'
+names[vv] = 'Surface Downwelling Longwave Radiation'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Qr_int
+vv = 'Qr_int'
+names[vv] = 'Atmospheric radiation flux divergence'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# Qr_int_cre
+vv = 'Qr_int_cre'
+names[vv] = 'Atmospheric radiative CRE'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# TOA SW CRE
+vv = 'TOA_cre_sw'
+names[vv] = 'TOA SW Cloud Radiative Effect'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
+# TOA LW CRE
+vv = 'TOA_cre_lw'
+names[vv] = 'TOA LW Cloud Radiative Effect'
+units[vv] = 'W m$^{-2}$'
+coefs[vv] = 1.
+
diff --git a/atlas/metrics_BOMEX.py b/atlas/metrics_BOMEX.py
new file mode 100755
index 0000000..95ae4e6
--- /dev/null
+++ b/atlas/metrics_BOMEX.py
@@ -0,0 +1,238 @@
+#!/usr/bin/env python
+# -*- coding:UTF-8 -*-
+
+import os, sys
+sys.path = ['./config/','./util/'] + sys.path
+
+import cdms2, MV2
+import math
+import numpy as np
+from scipy.interpolate import interp1d
+import cdtime
+
+import matplotlib.pyplot as plt
+
+import references
+import simulations
+import diag_simu
+
+def plot_metric(ax,data,metrics2combine,coef=1.,xlabel=[],ylabel='',ylim=None,yticks=None,plotlegend=False,colors=None):
+  nmetrics = len(metrics2combine)
+  for i in range(0,nmetrics):
+    mm = metrics2combine[i]
+    for k in data.keys():
+      xx = [i+0.5,]
+      if not(data[k][mm] is None):
+        yy = [data[k][mm]*coef,]
+      else:
+        yy = [1.e20,]
+      if colors is None:
+        ax.plot(xx,yy,color=colors[k],marker='o',linestyle='',label=k)
+      else:
+        ax.plot(xx,yy,color=colors[k],marker='o',linestyle='',label=k)
+
+  ax.set_xlim((0,nmetrics+0.5))
+  ax.set_xticks([0.5+i for i in range(0,nmetrics)])
+  ax.set_xticklabels(xlabel)
+  if not(ylim is None): ax.set_ylim(ylim)
+  if not(yticks is None): ax.set_yticks(yticks)
+  ax.set_ylabel(ylabel) 
+
+  if not(ylim is None): ax.spines['left'].set_bounds(ylim[0],ylim[1])
+  ax.spines['right'].set_visible(False)
+  ax.spines['top'].set_visible(False)
+  if nmetrics == 1:
+    ax.spines['bottom'].set_visible(False)
+  else:
+    ax.spines['bottom'].set_bounds(0.5,nmetrics-0.5)
+
+  ax.yaxis.set_ticks_position('left')
+  ax.xaxis.set_ticks_position('bottom')
+
+  if plotlegend:
+      ax.legend()
+
+
+
+def f_rmse(ref,sim,zmin,zmax):
+
+  zf_ref = np.array(ref[0])
+  var_ref = np.array(ref[1])
+  zf_sim = np.array(sim[0])
+  var_sim = np.array(sim[1])
+
+  f = interp1d(zf_sim,var_sim,fill_value='extrapolate')
+  var_sim_interp = f(zf_ref)
+
+  nlev, = zf_ref.shape
+  rmse = 0.
+  nn = 0
+  for ilev in range(0,nlev):
+      if zf_ref[ilev] >= zmin and zf_ref[ilev] <= zmax:
+          nn = nn+1
+          rmse = rmse + (var_sim_interp[ilev]-var_ref[ilev])*(var_sim_interp[ilev]-var_ref[ilev])
+          #print zf_ref[ilev],var_sim_interp[ilev]-var_ref[ilev]
+
+  if nn > 0:
+    rmse = rmse/nn
+    rmse = math.sqrt(rmse)
+  else:
+    print 'problem'
+    sys.exit()
+
+  return rmse
+
+
+case = 'BOMEX'
+subcase = 'REF'
+
+var2compute = ['zcb','zct','theta_0_500','qv_0_500','max_cf']
+if not(os.path.exists('tmp')):
+    os.makedirs('tmp')
+
+fin = {}
+lines = {}
+for k in simulations.sim2plot:
+    fin[k] = 'tmp/{0}_{1}_{2}.nc'.format(k,case,subcase)
+    diag_simu.prepare(simulations.files[case][subcase][k],fin[k],var2compute)
+    lines[k] = simulations.lines[k]
+
+for k in ['LES']: #references.files[case].keys():
+    fin[k] = references.files[case][subcase][k]
+    lines[k] = references.lines[case][subcase][k]
+
+repout = './atlas/{0}/{1}/METRICS/'.format(simulations.name_atlas,case)
+if not(os.path.exists(repout)):
+    os.makedirs(repout)
+
+
+colors = {}
+for k in lines.keys():
+    colors[k] = lines[k][0]
+
+# Computing metrics hour 7
+metrics = {}
+
+tmin = cdtime.comptime(1969,6,24,0)
+t1 = tmin.add(7,cdtime.Hour)
+t2 = tmin.add(8,cdtime.Hour)
+
+for k in fin.keys():
+  metrics[k] = {}
+  f = cdms2.open(fin[k])
+  # Simple average between t1 and t2
+  for var in ['zcb','zct','cc','max_cf','theta_0_500','qv_0_500','lwp']:
+    if var in f.listvariables():
+      tmp = f(var,time=(t1,t2))
+      tmp = MV2.average(tmp,axis=0)
+    else:
+      tmp = None
+  
+    metrics[k][var] = tmp
+
+  # for computing RMSE of profiles 
+  for var  in ['theta','qv']:      
+    if var in f.listvariables():
+      tmp1 = f('zf',time=(t1,t2))
+      if len(tmp1.shape) == 2:
+       tmp1 = MV2.average(tmp1,axis=0)
+      tmp2 = f(var,time=(t1,t2))
+      tmp2 = MV2.average(tmp2,axis=0)    
+    else:
+      tmp1 = None
+      tmp2 = None
+  
+    metrics[k][var + '_rmse'] = tmp1,tmp2
+
+  f.close()
+
+# Computing RMSE
+kref = 'LES'
+zmin = 0
+zmax = 2000.
+for var in ['theta','qv']:
+  for k in simulations.sim2plot:
+    rmse = f_rmse(metrics[kref][var+'_rmse'],metrics[k][var+'_rmse'],zmin,zmax)
+    metrics[k][var+'_rmse'] = rmse
+  for k in ['LES']: #references.files[case].keys():
+    metrics[k][var+'_rmse'] = None
+
+
+# Making the plot
+
+fig, ax = plt.subplots(1,7,figsize=(15,5))
+
+fig.suptitle('BOMEX metrics for 7th hour')
+
+# Potential temperature
+
+plot_metric(ax[0],metrics,['theta_0_500',],\
+        xlabel=['0-500m',],\
+        ylabel='Potential temperature (K)',\
+        ylim=(297,302),\
+        yticks=[297+i for i in range(0,6)],\
+        colors=colors)
+
+# Specific humidity
+
+plot_metric(ax[1],metrics,['qv_0_500',],\
+        coef=1000.,\
+        xlabel=['0-500m',],\
+        ylabel='Specific humidity (g kg$^{-1}$)',\
+        ylim=(10,20),\
+        yticks=[10+i*2 for i in range(0,6)],\
+        colors=colors)
+
+# Cloud fraction
+
+plot_metric(ax[2],metrics,['cc','max_cf'],\
+        coef=100.,\
+        xlabel=['Surface', 'Max'],\
+        ylabel='Cloud fraction (%)',\
+        ylim=(0,30),\
+        yticks=[i*5 for i in range(0,7)],\
+        colors=colors)
+
+# Cloud base/top height
+
+plot_metric(ax[3],metrics,['zcb','zct'],\
+        coef=1/1000.,\
+        xlabel=['Cloud\n base', 'Cloud\n top'],\
+        ylabel='Cloud base/top height (km)',\
+        ylim=(0,2.5),\
+        yticks=[i*0.5 for i in range(0,6)],\
+        colors=colors)
+
+# LWP
+
+plot_metric(ax[4],metrics,['lwp',],\
+        coef=1000.,\
+        xlabel=['LWP',],\
+        ylabel='Liquid water path (g m$^{-2}$)',\
+        ylim=(0,15),\
+        yticks=[i*5 for i in range(0,4)],\
+        colors=colors)
+
+# Theta RMSE
+
+plot_metric(ax[5],metrics,['theta_rmse',],\
+        xlabel=['RMSE\n 0-2000m',],\
+        ylabel='Potential temperature RMSE (K)',\
+        ylim=(0,2),\
+        yticks=[i*0.2 for i in range(0,11)],\
+        colors=colors)
+
+# qv RMSE
+
+plot_metric(ax[6],metrics,['qv_rmse',],\
+        coef=1000.,\
+        xlabel=['RMSE\n 0-2000m',],\
+        ylabel='Specific humidity RMSE (g kg$^{-1}$)',\
+        ylim=(0,2),\
+        yticks=[i*0.2 for i in range(0,11)],\
+        colors=colors,
+        plotlegend=True)
+
+plt.savefig('{0}/{1}_metrics_hour7.png'.format(repout,case))
+
+plt.close()
diff --git a/atlas/references.py b/atlas/references.py
new file mode 100644
index 0000000..e51e072
--- /dev/null
+++ b/atlas/references.py
@@ -0,0 +1,227 @@
+from cases import * # cases and subcases
+
+files = {}
+varnames = {}
+coefs = {}
+lines = {}
+
+for case in  cases:
+  files[case] = {}
+  varnames[case] = {}
+  coefs[case] = {}
+  lines[case] = {}
+
+  for subcase in subcases[case]:
+    files[case][subcase] = {}
+    varnames[case][subcase] = {}
+    coefs[case][subcase] = {}
+    lines[case][subcase] = {}
+
+#################
+# AYOTTE
+case = 'AYOTTE'
+
+for subcase in ['00SC','00WC','03SC','05SC','05WC','24F','24SC']:
+  files[case][subcase] = {}
+  varnames[case][subcase] = {}
+  coefs[case][subcase] = {}
+  lines[case][subcase] = {}
+
+  sim = 'LES'
+  files[case][subcase][sim] = '/Users/romainroehrig/data/LES/AYOTTE/AYOTTE{0}_LES_MESONH_RR.nc'.format(subcase)
+  varnames[case][subcase][sim] = {}
+  coefs[case][subcase][sim] = {}
+  lines[case][subcase][sim] = 'k'
+
+  sim = 'LES_csam'
+  files[case][subcase][sim] = '/Users/romainroehrig/data/LES/AYOTTE/AYOTTE{0}_LES_MESONH_RR_csam.nc'.format(subcase)
+  varnames[case][subcase][sim] = {}
+  coefs[case][subcase][sim] = {}
+  lines[case][subcase][sim] = 'k.'
+
+#################
+# ARMCU
+case = 'IHOP'
+subcase = 'REF'
+
+sim = 'LES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/IHOP/IHOP_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+#################
+# ARMCU
+case = 'ARMCU'
+subcase = 'REF'
+
+#sim = 'LES_1h'
+#files[case][subcase][sim] = '/Users/romainroehrig/data/HighTune/LES//HTUNE_CERK4.1.ARMCU.000KCL_4D_new.nc'
+#varnames[case][subcase][sim] = {}
+#coefs[case][subcase][sim] = {}
+#lines[case][subcase][sim] = 'k-.'
+
+sim = 'LES_5min'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/ARMCU/ARMCU_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+sim = 'BLM_csam'
+files[case][subcase][sim] = '/Users/romainroehrig/data/HighTune/LES/ARMCU_BOMEX_BLM/ARMCU_csam.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k.'
+
+sim = 'BLM_cld'
+files[case][subcase][sim] = '/Users/romainroehrig/data/HighTune/LES/ARMCU_BOMEX_BLM/ARMCU_cld.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'b.'
+
+sim = 'BLM_cor'
+files[case][subcase][sim] = '/Users/romainroehrig/data/HighTune/LES/ARMCU_BOMEX_BLM/ARMCU_cor.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'g.'
+
+#################
+# FIRE
+case = 'FIRE'
+subcase = 'REF'
+
+sim = 'LES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/FIRE/FIRE_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+#################
+# SANDU
+case = 'SANDU'
+
+tmp = ['k', 'k--','b--','g--','b-.']
+
+for subcase in ['REF','SLOW','FAST']:
+#  files[case][subcase] = {}
+#  varnames[case][subcase] = {}
+#  coefs[case][subcase] = {}
+#  lines[case][subcase] = {}
+
+  for i,sim in enumerate(['SAM','DALES','DHARMA','UCLA']):
+    files[case][subcase][sim] = '/Users/romainroehrig/data/LES/SANDU/SANDU_{0}_LES_{1}_RR.nc'.format(subcase,sim)
+    varnames[case][subcase][sim] = {}
+    coefs[case][subcase][sim] = {}
+    lines[case][subcase][sim] = tmp[i]
+
+#################
+# ASTEX
+case = 'ASTEX'
+subcase = 'EUCLIPSE'
+
+tmp = ['k', 'k--','b--','g--','b-.']
+
+for i,sim in enumerate(['SAM','UCLA','DALES','DHARMA','MetOffice']):
+  files[case][subcase][sim] = '/Users/romainroehrig/data/LES/ASTEX/ASTEX_{0}_LES_{1}_RR.nc'.format(subcase,sim)
+  varnames[case][subcase][sim] = {}
+  coefs[case][subcase][sim] = {}
+  lines[case][subcase][sim] = tmp[i]
+
+#################
+# BOMEX
+case = 'BOMEX'
+subcase = 'REF'
+
+sim = 'LES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/BOMEX/BOMEX_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+sim = 'LES_core'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/BOMEX/BOMEX_LES_MESONH_RR_core.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'g.'
+
+sim = 'LES_csam'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/BOMEX/BOMEX_LES_MESONH_RR_csam.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k.'
+
+#################
+# RICO
+case = 'RICO'
+subcase = 'REF'
+
+sim = 'LES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/RICO/RICO_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+sim = 'LES_core'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/RICO/RICO_LES_MESONH_RR_core.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'g.'
+
+sim = 'LES_csam'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/RICO/RICO_LES_MESONH_RR_csam.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k.'
+
+#################
+# AMMA
+case = 'AMMA'
+subcase = 'REF'
+
+sim = 'LES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/LES/AMMA/AMMA_LES_MESONH_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+
+#################
+# CINDY-DYNAMO
+case = 'CINDY-DYNAMO'
+subcase = 'NSA3aflux'
+
+sim = 'CSU'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_RR_daily.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+sim = 'TRMM'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_TRMM_RR_daily.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k'
+
+sim = 'Q1-derived'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_Q1-derived_RR_daily.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'r--'
+
+sim = 'Q2-derived'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_Q2-derived_RR_daily.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'b--'
+
+sim = 'CERES'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_CERES_RR_daily.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'k--'
+
+sim = 'CERESv2'
+files[case][subcase][sim] = '/Users/romainroehrig/data/CindyDynamo/NSA3a/CINDY-DYNAMO_NSA3a_CERES2_RR.nc'
+varnames[case][subcase][sim] = {}
+coefs[case][subcase][sim] = {}
+lines[case][subcase][sim] = 'b--'
diff --git a/atlas/simulations.py b/atlas/simulations.py
new file mode 100644
index 0000000..ecde43e
--- /dev/null
+++ b/atlas/simulations.py
@@ -0,0 +1,184 @@
+from cases import * # cases and subcases
+
+files = {}
+varnames = {}
+coefs = {}
+lines = {}
+
+for case in  cases:
+  files[case] = {}
+  for subcase in subcases[case]:
+    files[case][subcase] = {}
+
+#################
+
+#sim2plot = ['CMIP6',]
+#name_atlas = 'CMIP6'
+
+#sim2plot = ['CONV1_TEST-010','CMIP6',]
+#name_atlas = 'CONV1_TEST-010'
+
+#sim2plot = ['CMIP6','CONV2_TEST-005','CONV2_TEST-010']
+#name_atlas = 'CONV2_TEST'
+
+
+#sim2plot = ['CMIP6_bestcf','CMIP6']
+#name_atlas = 'CMIP6_bestcf'
+
+#sim2plot = ['CMIP6_pcmt_num','CMIP6',]
+#name_atlas = 'CMIP6_pcmt_num'
+
+#sim2plot = ['CMIP6_pcmt_num_jfg','CMIP6',]
+#name_atlas = 'CMIP6_pcmt_num_jfg'
+
+sim2plot = ['CMIP6_N0r','CMIP6',]
+name_atlas = 'CMIP6_N0r'
+
+
+#sim2plot = ['CMIP6_pcmt_num','CMIP6_pcmt_num_ECMNP04','CMIP6_pcmt_num_ECMNP16','CMIP6_pcmt_num_GCVRE05','CMIP6_pcmt_num_RQLCR4',]
+#sim2plot = ['CMIP6_pcmt_num','CMIP6_pcmt_num_GCVRE05','CMIP6_pcmt_num_RQLCR4','CMIP6_pcmt_num_GCVTEXC200','CMIP6_pcmt_num_GCVTEXC200_RQLCR4_GCVRE05']
+#name_atlas = 'CMIP6_pcmt_num_all'
+
+#sim2plot = ['CMIP6_pcmt_num','CMIP6_pcmt_num_tmp',]
+#name_atlas = 'CMIP6_pcmt_num_tmp'
+
+#sim2plot = ['CMIP6_pcmt_num','CMIP6_pcmt_num_tmp2',]
+#name_atlas = 'CMIP6_pcmt_num_tmp2'
+
+#sim2plot = ['CMIP6','CMIP6_pcmt','CMIP6_pcmt0']
+#name_atlas = 'CMIP6_pcmt'
+
+
+#################
+# files and some possible "corrections" of variables
+
+for sim in sim2plot:
+  varnames[sim] = {}
+  coefs[sim] = {}
+  coefs[sim]['shf'] = -1.
+  coefs[sim]['lhf'] = -1.
+
+for sim in ['CMIP6','CMIP6_bestcf',]:
+  for case in cases:
+    for subcase in subcases[case]:
+      files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+      if case == 'CINDY-DYNAMO':
+        files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_900s/{1}/{2}/Output/netcdf/Out_daily_plevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_N0r' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/CMIP6.N0r/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_jfg' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num.jfg/CMIP6/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_ECMNP04' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.ECMNP04/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_ECMNP16' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.ECMNP16/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_GCVRE05' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.GCVRE05/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_RQLCR4' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.RQLCR4/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_GCVTEXC200' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.GCVTEXC200/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_GCVTEXC500' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.GCVTEXC500/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_GCVTEXC200_RQLCR4_GCVRE05' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.GCVTEXC200.RQLCR4.GCVRE05/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_tmp' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.tmp/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt_num_tmp2' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.tmp2/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CONV1_TEST-010' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+
+sim = 'CONV2_TEST-005' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_900s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+    if case == 'CINDY-DYNAMO':
+        files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_900s/{1}/{2}/Output/netcdf/Out_daily_plevel.nc'.format(sim,case,subcase)
+
+
+sim = 'CONV2_TEST-010' # Avoid dots in the simulation name
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_900s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+    if case == 'CINDY-DYNAMO':
+        files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.diag/{0}/L91_900s/{1}/{2}/Output/netcdf/Out_daily_plevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt'
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.pcmt/CMIP6/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+    if case == 'CINDY-DYNAMO':
+        files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.pcmt/CMIP6/L91_900s/{1}/{2}/Output/netcdf/Out_daily_plevel.nc'.format(sim,case,subcase)
+
+sim = 'CMIP6_pcmt0'
+for case in cases:
+  for subcase in subcases[case]:
+    files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.pcmt0/CMIP6/L91_300s/{1}/{2}/Output/netcdf/Out_klevel.nc'.format(sim,case,subcase)
+    if case == 'CINDY-DYNAMO':
+        files[case][subcase][sim] =  '/Users/romainroehrig/MUSC/simulations//arp631.pcmt0/CMIP6/L91_900s/{1}/{2}/Output/netcdf/Out_daily_plevel.nc'.format(sim,case,subcase)
+
+
+#################
+# Lines
+
+lines['CMIP6'] = 'r-'
+lines['CMIP6_bestcf'] = 'b-'
+lines['CMIP6_N0r'] = 'b-'
+lines['CMIP6_pcmt_num'] = 'b-'
+lines['CMIP6_pcmt_num_jfg'] = 'b-'
+lines['CMIP6_pcmt_num_tmp'] = 'r-'
+lines['CMIP6_pcmt_num_tmp2'] = 'r-'
+lines['CMIP6_pcmt_num_ECMNP04'] = 'green'
+lines['CMIP6_pcmt_num_ECMNP16'] = 'orange'
+lines['CMIP6_pcmt_num_GCVRE05'] = 'magenta'
+lines['CMIP6_pcmt_num_RQLCR4'] = 'cyan'
+lines['CMIP6_pcmt_num_GCVTEXC200'] = 'green'
+lines['CMIP6_pcmt_num_GCVTEXC500'] = 'green'
+lines['CMIP6_pcmt_num_GCVTEXC200_RQLCR4_GCVRE05'] = 'orange'
+lines['CONV1_TEST-010'] = 'r-'
+lines['CONV2_TEST-005'] = 'b-'
+lines['CONV2_TEST-010'] = 'g-'
+lines['CMIP6_pcmt'] = 'b-'
+lines['CMIP6_pcmt0'] = 'g-'
diff --git a/atlas/test_perf.py b/atlas/test_perf.py
new file mode 100644
index 0000000..55be666
--- /dev/null
+++ b/atlas/test_perf.py
@@ -0,0 +1,35 @@
+import cdms2
+import netCDF4 as nc
+import time as TT
+
+ntest = 100
+fin = '/Users/romainroehrig/MUSC/simulations//arp631.diag.pcmt.num/CMIP6.tmp2/L91_300s/ARMCU//REF/Output/netcdf/Out_klevel.nc'
+var2read = ['zf','theta','qv','u','v','ql','qlc']
+
+TT0 = TT.time()
+
+for i in range(0,ntest):
+    data = {}
+    f = cdms2.open(fin)
+    for var in var2read:
+        data[var] = f(var)
+    f.close()
+
+TT1 = TT.time()
+print 'Test 1:', TT1-TT0
+TT0 = TT.time()
+
+
+for i in range(0,ntest):
+    data = {}
+    f = nc.Dataset(fin,'r')
+    for var in var2read:
+        data[var] = f[var][:]
+    f.close()
+
+TT1 = TT.time()
+print 'Test 2:', TT1-TT0
+TT0 = TT.time()
+
+
+
diff --git a/atlas/tex_template/template_atlas_AMMA.tex b/atlas/tex_template/template_atlas_AMMA.tex
new file mode 100644
index 0000000..d17198c
--- /dev/null
+++ b/atlas/tex_template/template_atlas_AMMA.tex
@@ -0,0 +1,172 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & 
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_lwp.png} &  \includegraphics[width=9cm]{../PNG/TS_iwp.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qi_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qi_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qsn_XXXX.png}  & \includegraphics[width=9cm]{../PNG/2D_qsn_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_tnthl_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_tnthl_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_tnqt_XXXX.png}  & %\includegraphics[width=9cm]{../PNG/2D_tnqt_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \\%\includegraphics[width=9cm]{../PNG/LES_core_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & %\includegraphics[width=9cm]{../PNG/LES_core_Mf.png}
+  \end{tabular}
+\end{table}
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\% \includegraphics[width=7cm]{../PNG/LES_csam_w_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_qi.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_qi.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_qr.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_qsn.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_qsn.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_tnthl.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_tnthl.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_tnqt.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_tnqt.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour11-12_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour15-16_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour11-12_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour15-16_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_ARMCU.tex b/atlas/tex_template/template_atlas_ARMCU.tex
new file mode 100644
index 0000000..5866ca2
--- /dev/null
+++ b/atlas/tex_template/template_atlas_ARMCU.tex
@@ -0,0 +1,230 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & 
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_lwp.png} &  %\includegraphics[width=9cm]{../PNG/TS_iwp.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+%    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES_5min.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES_5min.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES_5min.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES_5min.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES_5min.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES_5min.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES_5min.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}   \\
+%     \includegraphics[width=9cm]{../PNG/2D_qsn_XXXX.png}  & \includegraphics[width=9cm]{../PNG/2D_qsn_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_tnthl_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_tnthl_LES.png} \\
+%     \includegraphics[width=9cm]{../PNG/2D_tnqt_XXXX.png}  & %\includegraphics[width=9cm]{../PNG/2D_tnqt_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_BLM_cor.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cor.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_BLM_cld.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cld.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_BLM_csam.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_csam.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_BLM_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_B_up_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_B_up_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_B_up_BLM_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_cor.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_det_u_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_cld.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_det_u_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_csam.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_det_u_BLM_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}  \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qsn.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qsn.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_tnthl.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnthl.png} \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_tnqt.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnqt.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_ASTEX.tex b/atlas/tex_template/template_atlas_ASTEX.tex
new file mode 100644
index 0000000..7851f25
--- /dev/null
+++ b/atlas/tex_template/template_atlas_ASTEX.tex
@@ -0,0 +1,147 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_lwp.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_SAM.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_SAM.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_SAM.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_SAM.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_SAM.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_SAM.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_SAM.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \\%\includegraphics[width=9cm]{../PNG/2D_w_up_SAM_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_alpha_up_SAM_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & %\includegraphics[width=9cm]{../PNG/2D_Mf_SAM_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_w_up.png}     & \includegraphics[width=9cm]{../PNG/SAM_csam_w_up.png}     \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_alpha_up.png} & \includegraphics[width=9cm]{../PNG/SAM_csam_alpha_up.png} \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_Mf.png}       & \includegraphics[width=9cm]{../PNG/SAM_csam_Mf.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/SAM_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_dTv_up.png} & \\%\includegraphics[width=9cm]{../PNG/SAM_csam_dTv_up.png}\\
+%     \includegraphics[width=9cm]{../PNG/XXXX_B_up.png}   & \\%\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\% \includegraphics[width=7cm]{../PNG/SAM_csam_w_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour39-40_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour39-40_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_AYOTTE.tex b/atlas/tex_template/template_atlas_AYOTTE.tex
new file mode 100644
index 0000000..9de213d
--- /dev/null
+++ b/atlas/tex_template/template_atlas_AYOTTE.tex
@@ -0,0 +1,104 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+%    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_csam.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_csam.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_csam.png}
+  \end{tabular}
+\end{table}
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_csam.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=7cm]{../PNG/2D_alpha_up_LES_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\% \includegraphics[width=7cm]{../PNG/LES_csam_w_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_theta.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-5_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-5_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-5_Mf.png}       
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-5_det_u.png}  
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_BOMEX.tex b/atlas/tex_template/template_atlas_BOMEX.tex
new file mode 100644
index 0000000..915ff8b
--- /dev/null
+++ b/atlas/tex_template/template_atlas_BOMEX.tex
@@ -0,0 +1,193 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & 
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_lwp.png} &  %\includegraphics[width=9cm]{../PNG/TS_iwp.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+%    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}   \\
+%     \includegraphics[width=9cm]{../PNG/2D_qsn_XXXX.png}  & \includegraphics[width=9cm]{../PNG/2D_qsn_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_tnthl_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_tnthl_LES.png} \\
+%     \includegraphics[width=9cm]{../PNG/2D_tnqt_XXXX.png}  & %\includegraphics[width=9cm]{../PNG/2D_tnqt_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_csam.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_csam.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_core.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_csam.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_cor.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=9cm]{../PNG/2D_det_u_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}  \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_qsn.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qsn.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_tnthl.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnthl.png} \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_tnqt.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnqt.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour7-8_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour7-8_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_CINDY-DYNAMO.tex b/atlas/tex_template/template_atlas_CINDY-DYNAMO.tex
new file mode 100644
index 0000000..85e1a98
--- /dev/null
+++ b/atlas/tex_template/template_atlas_CINDY-DYNAMO.tex
@@ -0,0 +1,195 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/TS_tsurf.png} \\
+    \includegraphics[height=5cm]{../PNG/TS_shf.png}   \\
+    \includegraphics[height=5cm]{../PNG/TS_lhf.png}   \\
+    \includegraphics[height=5cm]{../PNG/TS_rain.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/TS_cc.png} \\
+    \includegraphics[height=5cm]{../PNG/TS_cltl.png}   \\
+    \includegraphics[height=5cm]{../PNG/TS_clth.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/TS_lwp.png} \\
+    \includegraphics[height=5cm]{../PNG/TS_iwp.png} 
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/2D_hur_CSU.png}  \\
+    \includegraphics[height=5cm]{../PNG/2D_hur_XXXX.png} \\
+%    \includegraphics[height=5cm]{../PNG/2D_rneb_CSU.png} \\
+    \includegraphics[height=5cm]{../PNG/2D_rneb_XXXX.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/2Dbias_theta_XXXX.png} \\
+    \includegraphics[height=5cm]{../PNG/2Dbias_qv_XXXX.png}    \\
+    \includegraphics[height=5cm]{../PNG/2Dbias_hur_XXXX.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/2D_Q1_CSU.png}  \\
+    \includegraphics[height=5cm]{../PNG/2D_Q1_XXXX.png} \\
+    \includegraphics[height=5cm]{../PNG/2D_Q2_CSU.png}  \\
+    \includegraphics[height=5cm]{../PNG/2D_Q2_XXXX.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_avg_bias_theta.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_avg_bias_qv.png}    \\
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_hur.png}   & \includegraphics[width=7cm]{../PNG/AvgP_avg_bias_hur.png}   \\
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_rneb.png}  &	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_Q1.png} & \includegraphics[width=7cm]{../PNG/AvgP_avg_Q2.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_bias_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_bias_theta.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_bias_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_bias_qv.png}    \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_hur.png}        & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_hur.png}        \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_rneb.png}       & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_rneb.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_Q1.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_Q1.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO1_Q2.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP2_Q2.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_bias_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_bias_theta.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_bias_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_bias_qv.png}    \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_hur.png}        & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_hur.png}        \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_rneb.png}       & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_rneb.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_Q1.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_Q1.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_MJO2_Q2.png} & \includegraphics[width=7cm]{../PNG/AvgP_SUPP3_Q2.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=4cm]{../PNG/TS_rsdt.png}   \\
+    \includegraphics[height=4cm]{../PNG/TS_rsut.png}   \\
+    \includegraphics[height=4cm]{../PNG/TS_rlut.png}   \\
+    \includegraphics[height=4cm]{../PNG/TS_Qr_int.png} 
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=4cm]{../PNG/TS_TOA_cre_sw.png}   \\
+    \includegraphics[height=4cm]{../PNG/TS_TOA_cre_lw.png}   \\
+    \includegraphics[height=4cm]{../PNG/TS_Qr_int_cre.png}
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=4cm]{../PNG/TS_rsds.png} \\
+    \includegraphics[height=4cm]{../PNG/TS_rsus.png} \\
+    \includegraphics[height=4cm]{../PNG/TS_rlds.png} \\
+    \includegraphics[height=4cm]{../PNG/TS_rlus.png} 
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/2D_u_CSU.png}  \\
+    \includegraphics[height=5cm]{../PNG/2D_u_XXXX.png} \\
+    \includegraphics[height=5cm]{../PNG/2D_v_CSU.png}  \\
+    \includegraphics[height=5cm]{../PNG/2D_v_XXXX.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{c}
+    \includegraphics[height=5cm]{../PNG/2Dbias_u_XXXX.png} \\
+    \includegraphics[height=5cm]{../PNG/2Dbias_v_XXXX.png}	  
+  \end{tabular}
+\end{table}
+
+\clearpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_u.png} & \includegraphics[width=7cm]{../PNG/AvgP_avg_bias_u.png} \\
+    \includegraphics[width=7cm]{../PNG/AvgP_avg_v.png} & \includegraphics[width=7cm]{../PNG/AvgP_avg_bias_v.png}
+  \end{tabular}
+\end{table}
+
+
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_FIRE.tex b/atlas/tex_template/template_atlas_FIRE.tex
new file mode 100644
index 0000000..acef0d8
--- /dev/null
+++ b/atlas/tex_template/template_atlas_FIRE.tex
@@ -0,0 +1,147 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_lwp.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_qr_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \\%\includegraphics[width=9cm]{../PNG/2D_w_up_LES_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & %\includegraphics[width=9cm]{../PNG/2D_Mf_LES_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_w_up.png}     & \includegraphics[width=9cm]{../PNG/LES_csam_w_up.png}     \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_alpha_up.png} & \includegraphics[width=9cm]{../PNG/LES_csam_alpha_up.png} \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_Mf.png}       & \includegraphics[width=9cm]{../PNG/LES_csam_Mf.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/LES_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_dTv_up.png} & \\%\includegraphics[width=9cm]{../PNG/LES_csam_dTv_up.png}\\
+%     \includegraphics[width=9cm]{../PNG/XXXX_B_up.png}   & \\%\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\% \includegraphics[width=7cm]{../PNG/LES_csam_w_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=7cm]{../PNG/LES_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour4-8_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour12-16_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour4-8_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour12-16_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_IHOP.tex b/atlas/tex_template/template_atlas_IHOP.tex
new file mode 100644
index 0000000..d5b12aa
--- /dev/null
+++ b/atlas/tex_template/template_atlas_IHOP.tex
@@ -0,0 +1,166 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & 
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+%    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_csam.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_csam.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_core.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_csam.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_cor.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=9cm]{../PNG/2D_det_u_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qr.png}  \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_qsn.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_qsn.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_tnthl.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnthl.png} \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_tnqt.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_tnqt.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour5-6_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour9-10_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour5-6_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour9-10_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_RICO.tex b/atlas/tex_template/template_atlas_RICO.tex
new file mode 100644
index 0000000..e35370f
--- /dev/null
+++ b/atlas/tex_template/template_atlas_RICO.tex
@@ -0,0 +1,193 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & 
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png} \\
+    \includegraphics[width=9cm]{../PNG/TS_lwp.png} &  %\includegraphics[width=9cm]{../PNG/TS_iwp.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%    \includegraphics[width=9cm]{../PNG/TS_theta_0_500.png}     &  \includegraphics[width=9cm]{../PNG/TS_qv_0_500.png} \\
+%    \includegraphics[width=9cm]{../PNG/TS_theta_2000_5000.png} &  \includegraphics[width=9cm]{../PNG/TS_qv_2000_5000.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_LES.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_LES.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_LES.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_LES.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_LES.png}   \\
+%     \includegraphics[width=9cm]{../PNG/2D_qsn_XXXX.png}  & \includegraphics[width=9cm]{../PNG/2D_qsn_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/2D_tnthl_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_tnthl_LES.png} \\
+%     \includegraphics[width=9cm]{../PNG/2D_tnqt_XXXX.png}  & %\includegraphics[width=9cm]{../PNG/2D_tnqt_LES.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \includegraphics[width=9cm]{../PNG/2D_w_up_LES_csam.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_alpha_up_LES_csam.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & \includegraphics[width=9cm]{../PNG/2D_Mf_LES_csam.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_core.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_dTv_up_LES_csam.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=9cm]{../PNG/2D_alpha_up_BLM_cld.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_eps_u_BLM_cor.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=9cm]{../PNG/2D_det_u_BLM_cor.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_qr.png}  \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_qsn.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_qsn.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_tnthl.png}  & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_tnthl.png} \\
+%     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_tnqt.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_tnqt.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour8-12_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour20-24_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour8-12_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour20-24_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_atlas_SANDU.tex b/atlas/tex_template/template_atlas_SANDU.tex
new file mode 100644
index 0000000..af04fc7
--- /dev/null
+++ b/atlas/tex_template/template_atlas_SANDU.tex
@@ -0,0 +1,147 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_cc.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_lwp.png}  \\
+    \includegraphics[width=9cm]{../PNG/TS_lhf.png}   & \includegraphics[width=9cm]{../PNG/TS_rain.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_zcb.png} &  \includegraphics[width=9cm]{../PNG/TS_zct.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/2D_u_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_u_SAM.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_v_XXXX.png}     & \includegraphics[width=7cm]{../PNG/2D_v_SAM.png}     \\
+     \includegraphics[width=7cm]{../PNG/2D_theta_XXXX.png} & \includegraphics[width=7cm]{../PNG/2D_theta_SAM.png} \\
+     \includegraphics[width=7cm]{../PNG/2D_qv_XXXX.png}    & \includegraphics[width=7cm]{../PNG/2D_qv_SAM.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_rneb_XXXX.png} & \includegraphics[width=9cm]{../PNG/2D_rneb_SAM.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_ql_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_ql_SAM.png}   \\
+     \includegraphics[width=9cm]{../PNG/2D_qr_XXXX.png}   & \includegraphics[width=9cm]{../PNG/2D_qr_SAM.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_w_up_XXXX.png}     & \\%\includegraphics[width=9cm]{../PNG/2D_w_up_SAM_core.png}     \\
+     \includegraphics[width=9cm]{../PNG/2D_alpha_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/2D_alpha_up_SAM_core.png} \\
+     \includegraphics[width=9cm]{../PNG/2D_Mf_XXXX.png}       & %\includegraphics[width=9cm]{../PNG/2D_Mf_SAM_core.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_w_up.png}     & \includegraphics[width=9cm]{../PNG/SAM_csam_w_up.png}     \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_alpha_up.png} & \includegraphics[width=9cm]{../PNG/SAM_csam_alpha_up.png} \\
+%     \includegraphics[width=9cm]{../PNG/XXXX_Mf.png}       & \includegraphics[width=9cm]{../PNG/SAM_csam_Mf.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_dTv_up_XXXX.png} & \\%\includegraphics[width=9cm]{../PNG/SAM_core_dTv_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_B_up_XXXX.png}   & %\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+%\begin{table}
+%  \begin{tabular}{cc}
+%     \includegraphics[width=9cm]{../PNG/XXXX_dTv_up.png} & \\%\includegraphics[width=9cm]{../PNG/SAM_csam_dTv_up.png}\\
+%     \includegraphics[width=9cm]{../PNG/XXXX_B_up.png}   & \\%\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+%  \end{tabular}
+%\end{table}
+
+%\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/2D_eps_u_XXXX.png} & \\% \includegraphics[width=7cm]{../PNG/SAM_csam_w_up.png}\\
+     \includegraphics[width=9cm]{../PNG/2D_det_u_XXXX.png} & %\includegraphics[width=7cm]{../PNG/SAM_csam_alpha_up.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_u.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_v.png}     & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_theta.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_qv.png}    & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_rneb.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_rneb.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_ql.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_ql.png}  \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_qr.png}   & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_qr.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_w_up.png}     & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_w_up.png}     \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_alpha_up.png} & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_alpha_up.png} \\
+     \includegraphics[width=9cm]{../PNG/AvgP_hour23-24_Mf.png}       & \includegraphics[width=9cm]{../PNG/AvgP_hour47-48_Mf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_dTv_up.png} & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_dTv_up.png} \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_B_up.png}   & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_B_up.png}   \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_eps_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_eps_u.png}  \\
+     \includegraphics[width=7cm]{../PNG/AvgP_hour23-24_det_u.png}  & \includegraphics[width=7cm]{../PNG/AvgP_hour47-48_det_u.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/tex_template/template_check_setup.tex b/atlas/tex_template/template_check_setup.tex
new file mode 100644
index 0000000..d373604
--- /dev/null
+++ b/atlas/tex_template/template_check_setup.tex
@@ -0,0 +1,38 @@
+\documentclass{article}
+\usepackage{graphicx}
+
+\usepackage[margin=0.5in]{geometry}
+
+\begin{document}
+
+\pagenumbering{gobble}
+
+\begin{table}
+  \begin{tabular}{cc}
+    \includegraphics[width=9cm]{../PNG/TS_ustar.png} & \includegraphics[width=9cm]{../PNG/TS_tsurf.png}   \\ 
+    \includegraphics[width=9cm]{../PNG/TS_shf.png}   & \includegraphics[width=9cm]{../PNG/TS_lhf.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_u.png}     & \includegraphics[width=7cm]{../PNG/initGV_u.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_v.png}     & \includegraphics[width=7cm]{../PNG/initGV_v.png}     \\
+     \includegraphics[width=7cm]{../PNG/initLL_theta.png} & \includegraphics[width=7cm]{../PNG/initGV_theta.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_qv.png}    & \includegraphics[width=7cm]{../PNG/initGV_qv.png}
+  \end{tabular}
+\end{table}
+
+\newpage
+
+\begin{table}
+  \begin{tabular}{cc}
+     \includegraphics[width=7cm]{../PNG/initLL_tke.png} & \includegraphics[width=7cm]{../PNG/initGV_tke.png} \\
+     \includegraphics[width=7cm]{../PNG/initLL_ql.png}  & \includegraphics[width=7cm]{../PNG/initGV_ql.png}  \\
+     \includegraphics[width=7cm]{../PNG/initLL_qi.png}  & \includegraphics[width=7cm]{../PNG/initGV_qi.png} 
+  \end{tabular}
+\end{table}
+
+\end{document}
diff --git a/atlas/util/diag_simu.py b/atlas/util/diag_simu.py
new file mode 100644
index 0000000..11b2a3f
--- /dev/null
+++ b/atlas/util/diag_simu.py
@@ -0,0 +1,390 @@
+# -*- coding:UTF-8 -*-
+
+import cdtime
+import cdms2, MV2
+import os, sys
+
+value = 0
+cdms2.setNetcdfShuffleFlag(value) ## where value is either 0 or 1
+cdms2.setNetcdfDeflateFlag(value) ## where value is either 0 or 1
+cdms2.setNetcdfDeflateLevelFlag(value)
+
+missing = 1.e20
+
+rg = 9.80665
+
+def f_zcb(zf,zneb):
+
+    time = zneb.getTime()
+    lev = zneb.getLevel()
+    nt,nlev = zneb.shape
+
+    zcb = MV2.zeros(nt,typecode=MV2.float32) + missing
+
+    if zf[0,0] > zf[0,1]:
+        lpos = False
+    else:
+        lpos = True
+
+    for it in range(0,nt):
+      lfound = False
+      ilev = nlev-1
+      if lpos: ilev = 0
+      while not(lfound) and not(ilev == -1) and not(ilev == nlev):
+        if zneb[it,ilev] >= 0.001:
+            lfound = True
+            zcb[it] = zf[it,ilev]
+        else:
+            if lpos: # zf is in increasing order
+                ilev = ilev + 1
+            else:    # zf is in decreasing order
+                ilev = ilev - 1
+
+    zcb = MV2.masked_values(zcb,missing)
+    zcb.missing_value = missing
+    zcb.id = 'zcb'
+    zcb.long_name = 'Cloud base height'
+    zcb.units = 'm'
+    zcb.setAxis(0,time)
+
+    return zcb
+
+def f_zct(zf,zneb):
+
+    time = zneb.getTime()
+    lev = zneb.getLevel()
+    nt,nlev = zneb.shape
+
+    zct = MV2.zeros(nt,typecode=MV2.float32) + missing
+
+    if zf[0,0] > zf[0,1]:
+        lpos = False
+    else:
+        lpos = True
+
+    for it in range(0,nt):
+      lfound = False
+      ilev = 0
+      if lpos: ilev = nlev-1
+      while not(lfound) and not(ilev == -1) and not(ilev == nlev):
+        if zneb[it,ilev] >= 0.001:
+            lfound = True
+            zct[it] = zf[it,ilev]
+        else:
+            if lpos: # zf is in increasing order
+                ilev = ilev - 1
+            else:    # zf is in decreasing order
+                ilev = ilev + 1
+
+    zct = MV2.masked_values(zct,missing)
+    zct.missing_value = missing
+    zct.id = 'zct'
+    zct.long_name = 'Cloud top height'
+    zct.units = 'm'
+    zct.setAxis(0,time)
+
+    return zct
+
+def f_int(ph,var2int):
+
+    nt,nlev = var2int.shape
+    time = var2int.getTime()
+    zout = MV2.zeros(nt,typecode=MV2.float)
+    zout.setAxis(0,time)
+
+    if ph[0,0] < ph[0,1]:
+        lpos = 1
+    else:
+        lpos = -1
+    for ilev in range(0,nlev):
+        dp = (ph[:,ilev+1]-ph[:,ilev])*lpos
+        zout[:] = zout[:] + var2int[:,ilev]*dp/rg
+
+    return zout
+
+def f_avg(zf,var2avg,zmin,zmax):
+
+    nt,nlev = var2avg.shape
+    time = var2avg.getTime()
+
+    zout = MV2.zeros(nt,typecode=MV2.float)
+    ztot = MV2.zeros(nt,typecode=MV2.float)
+
+    if zf[0,0] < zf[0,1]:
+
+      zup = MV2.zeros((nt,nlev),typecode=MV2.float)
+      zdn = MV2.zeros((nt,nlev),typecode=MV2.float)
+
+      zup[:,nlev-1] = 1.e20
+      zdn[:,0] = 0
+
+      zup[:,0:nlev-1] = (zf[:,0:nlev-1]+zf[:,1:nlev])/2.
+      zdn[:,1:nlev] = (zf[:,0:nlev-1]+zf[:,1:nlev])/2.
+
+      dz = MV2.zeros((nt,nlev),typecode=MV2.float)
+      dz = MV2.where((zdn <= zmin) & (zup > zmin), zup-zmin, dz)
+      dz = MV2.where((zdn < zmax)  & (zup >= zmax), zmax - zdn, dz)
+      dz = MV2.where((zdn >= zmin) & (zup <= zmax), zup - zdn, dz)
+
+      zout = MV2.sum(var2avg*dz,axis=1)
+      ztot = MV2.sum(dz,axis=1)
+
+      if False: # to be cleaned
+       for it in range(0,nt):
+
+        zup = (zf[it,0]+zf[it,1])/2.
+        zdn = 0
+        if zdn <= zmin and zup > zmin:
+          dz = zup-zmin
+        elif zdn < zmax and zup >= zmax:
+          dz = zmax-zdn
+        elif zdn >= zmin and zup <= zmax: 
+          dz = zup-zdn
+        elif zup <= zmin or zdn >= zmax:
+          dz = 0.
+        else:
+          print 'This case should not occur...'
+          sys.exit()
+
+        zout[it] = zout[it] + var2avg[it,0]*dz
+        ztot[it] = ztot[it] + dz
+
+        zup= 1.e20
+        zdn = (zf[it,nlev-2]+zf[it,nlev-1])/2.
+        if zdn <= zmin and zup > zmin:
+          dz = zup-zmin
+        elif zdn < zmax and zup >= zmax:
+          dz = zmax-zdn
+        elif zdn >= zmin and zup <= zmax: 
+          dz = zup-zdn
+        elif zup < zmin or zdn > zmax:
+          dz = 0.
+        else:
+          print 'This case should not occur...'
+          sys.exit()
+
+        zout[it] = zout[it] + var2avg[it,nlev-1]*dz
+        ztot[it] = ztot[it] + dz
+
+        
+        for ilev in range(1,nlev-1):
+            zup = (zf[it,ilev]+zf[it,ilev+1])/2.
+            zdn = (zf[it,ilev-1]+zf[it,ilev])/2.
+            if zdn <= zmin and zup > zmin:
+              dz = zup-zmin
+            elif zdn < zmax and zup >= zmax:
+              dz = zmax-zdn
+            elif zdn >= zmin and zup <= zmax: 
+              dz = zup-zdn
+            elif zup <= zmin or zdn >= zmax:
+              dz = 0.
+            else:
+              print 'This case should not occur...'
+              sys.exit()
+            zout[it] = zout[it] + var2avg[it,ilev]*dz
+            ztot[it] = ztot[it] + dz
+
+    else:
+
+      zup = MV2.zeros((nt,nlev),typecode=MV2.float)
+      zdn = MV2.zeros((nt,nlev),typecode=MV2.float)
+
+      zup[:,0] = 1.e20
+      zdn[:,nlev-1] = 0
+
+      zup[:,1:nlev] = (zf[:,0:nlev-1]+zf[:,1:nlev])/2.
+      zdn[:,0:nlev-1] = (zf[:,0:nlev-1]+zf[:,1:nlev])/2.
+
+      dz = MV2.zeros((nt,nlev),typecode=MV2.float)
+      dz = MV2.where((zdn <= zmin) & (zup > zmin), zup-zmin, dz)
+      dz = MV2.where((zdn < zmax)  & (zup >= zmax), zmax - zdn, dz)
+      dz = MV2.where((zdn >= zmin) & (zup <= zmax), zup - zdn, dz)
+
+      zout = MV2.sum(var2avg*dz,axis=1)
+      ztot = MV2.sum(dz,axis=1)
+
+      if False: # to be cleaned
+       for it in range(0,nt):
+
+        zup = (zf[it,nlev-1]+zf[it,nlev-2])/2.
+        zdn = 0
+        if zdn <= zmin and zup > zmin:
+          dz = zup-zmin
+        elif zdn < zmax and zup >= zmax:
+          dz = zmax-zdn
+        elif zdn >= zmin and zup <= zmax: 
+          dz = zup-zdn
+        elif zup <= zmin or zdn >= zmax:
+          dz = 0.
+        else:
+          print 'This case should not occur...'
+          sys.exit()
+
+        zout[it] = zout[it] + var2avg[it,nlev-1]*dz
+        ztot[it] = ztot[it] + dz
+
+        zup= 1.e20
+        zdn = (zf[it,0]+zf[it,1])/2.
+        if zdn <= zmin and zup > zmin:
+          dz = zup-zmin
+        elif zdn < zmax and zup >= zmax:
+          dz = zmax-zdn
+        elif zdn >= zmin and zup <= zmax: 
+          dz = zup-zdn
+        elif zup < zmin or zdn > zmax:
+          dz = 0.
+        else:
+          print 'This case should not occur...'
+          sys.exit()
+
+        zout[it] = zout[it] + var2avg[it,0]*dz
+        ztot[it] = ztot[it] + dz
+        
+        for ilev in range(nlev-2,0,-1):
+            zdn = (zf[it,ilev]+zf[it,ilev+1])/2.
+            zup = (zf[it,ilev-1]+zf[it,ilev])/2.
+            if zdn <= zmin and zup > zmin:
+              dz = zup-zmin
+            elif zdn < zmax and zup >= zmax:
+              dz = zmax-zdn
+            elif zdn >= zmin and zup <= zmax: 
+              dz = zup-zdn
+            elif zup <= zmin or zdn >= zmax:
+              dz = 0.
+            else:
+              print 'This case should not occur...'
+              sys.exit()
+            zout[it] = zout[it] + var2avg[it,ilev]*dz
+            ztot[it] = ztot[it] + dz
+
+
+    zout[:] = zout[:]/ztot[:]
+    zout.setAxis(0,time)    
+
+    return zout
+
+
+def prepare(filein,fileout,var2compute=[]):
+
+    os.system('cp -f {0} {1}'.format(filein,fileout))
+
+    if len(var2compute) > 0:
+        f = cdms2.open(fileout,'a')
+        for var in var2compute:
+            print 'Compute {0}'.format(var)
+            if var == 'zcb':
+                zf = f('zf')
+                zneb = f('rneb')
+                zcb = f_zcb(zf,zneb)
+                f.write(zcb)
+            elif var == 'zct':
+                zf = f('zf')
+                zneb = f('rneb')
+                zct = f_zct(zf,zneb)
+                f.write(zct)
+            elif var == 'ql':
+                zql = f('ql') + f('qlc')
+                zql.id = 'ql'
+                zql.long_name = 'Liquid water content'
+                zql.units = 'kg kg-1'
+                f.write(zql)
+            elif var == 'qr':
+                zqr = f('qr') + f('qrc')
+                zqr.id = 'qr'
+                zqr.long_name = 'Rain water content'
+                zqr.units = 'kg kg-1'
+                f.write(zqr)
+            elif var == 'lwp':
+                zql = f('ql') + f('qlc')
+                zh = f('zh')
+                zlwp = f_int(zh,zql)
+                zlwp.id = 'lwp'
+                zlwp.long_name = 'Liquid Water Path'
+                zlwp.units = 'kg m-2'
+                f.write(zlwp)
+            elif var == 'rwp':
+                zqr = f('qr') + f('qrc')
+                zh = f('zh')
+                zrwp = f_int(zh,zqr)
+                zrwp.id = 'rwp'
+                zrwp.long_name = 'Rain Water Path'
+                zrwp.units = 'kg m-2'
+                f.write(zrwp)   
+            elif var == 'theta_0_500':
+                ztheta = f('theta')
+                zf = f('zf')
+                ztheta_avg = f_avg(zf,ztheta,0,500)
+                ztheta_avg.id = var
+                ztheta_avg.long_name = 'Potential temperature averaged over 0-500m'
+                ztheta_avg.units = 'K'
+                f.write(ztheta_avg) 
+            elif var == 'qv_0_500':
+                zqv = f('qv')
+                zf = f('zf')
+                zqv_avg = f_avg(zf,zqv,0,500)
+                zqv_avg.id = var
+                zqv_avg.long_name = 'Specific humidity averaged over 0-500m'
+                zqv_avg.units = 'kg kg-1'
+                f.write(zqv_avg) 
+            elif var == 'theta_2000_5000':
+                ztheta = f('theta')
+                zf = f('zf')
+                ztheta_avg = f_avg(zf,ztheta,2000,5000)
+                ztheta_avg.id = var
+                ztheta_avg.long_name = 'Potential temperature averaged over 2000-5000m'
+                ztheta_avg.units = 'K'
+                f.write(ztheta_avg) 
+            elif var == 'qv_2000_5000':
+                zqv = f('qv')
+                zf = f('zf')
+                zqv_avg = f_avg(zf,zqv,2000,5000)
+                zqv_avg.id = var
+                zqv_avg.long_name = 'Specific humidity averaged over 2000-5000m'
+                zqv_avg.units = 'kg kg-1'
+                f.write(zqv_avg)    
+            elif var == 'max_cf':
+                zcf = f('rneb')
+                zmax_cf = MV2.max(zcf,axis=1)
+                zmax_cf.id = var
+                zmax_cf.long_name = 'Maximum cloud fraction'
+                zmax_cf.units = '-'
+                f.write(zmax_cf)
+            elif var == 'Qr_int':
+                zqr = f('rsus')-f('rsds')+f('rlus')-f('rlds')+f('rsdt')-f('rsut')-f('rlut')
+                zqr.id = var
+                zqr.long_name = 'Integrated radiative heating'
+                zqr.units = 'W m-2'
+                f.write(zqr)
+            elif var == 'TOA_cre_sw':
+                zcre = f('rsutcs')-f('rsut')
+                zcre.id = var
+                zcre.long_name = 'TOA SW CRE'
+                zcre.units = 'W m-2'
+                f.write(zcre)    
+            elif var == 'TOA_cre_lw':
+                zcre = f('rlutcs')-f('rlut')
+                zcre.id = var
+                zcre.long_name = 'TOA LW CRE'
+                zcre.units = 'W m-2'
+                f.write(zcre)
+            elif var == 'Qr_int_cre':
+                zqr = f('rsus')-f('rsds')+f('rlus')-f('rlds')+f('rsdt')-f('rsut')-f('rlut')
+                #print zqr
+                #print 'rsuscs', f('rsuscs')
+                #print 'rsdscs', f('rsdscs')
+                #print 'rldscs', f('rldscs')
+                #print 'rsutcs', f('rsutcs')
+                #print 'rlutcs', f('rlutcs')
+                zqrcs = f('rsuscs')-f('rsdscs')+f('rlus')-f('rldscs')+f('rsdt')-f('rsutcs')-f('rlutcs')
+                #print zqrcs
+                zqrcre = zqr-zqrcs
+                zqrcre.id = var
+                zqrcre.long_name = 'Atmospheric CRE'
+                zqrcre.units = 'W m-2'
+                #print zqrcre
+                f.write(zqrcre)
+            else:
+                print 'variable to be computed is unknown:', var
+                sys.exit()
+
+        f.close()
diff --git a/atlas/util/plotMUSC.py b/atlas/util/plotMUSC.py
new file mode 100644
index 0000000..2c18910
--- /dev/null
+++ b/atlas/util/plotMUSC.py
@@ -0,0 +1,640 @@
+import sys
+import cdms2
+import MV2
+import cdtime
+import numpy as np
+import numpy.ma as ma
+import math
+
+import time as TT
+
+import plotutils
+
+verbose = False
+lperf = False
+
+missing = 1.e20
+
+def plot_timeseries(filein,varname,coef=None,units='',tmin=None,tmax=None,dtlabel='1h',error=None,**kwargs):
+    """
+       Do a timeseries plot of varname for several MUSC files
+    """
+
+    data = {}
+    time = {}
+    if coef is None:
+      coef = {}
+      for k in filein.keys():
+        coef[k] = 1.
+
+    for k in filein.keys():
+      f = cdms2.open(filein[k])
+      try:
+        data[k] = f(varname[k],squeeze=1)*coef[k]
+        time[k] = data[k].getTime()
+        kref = k
+      except cdms2.error.CDMSError as e:
+        data[k] = None  
+        time[k] = None
+        if verbose:
+          print 'Variable {2} probably unknown in dataset {0} (file={1})'.format(k,filein[k],varname[k])
+          print 'Raised error: cdms2.error.CDMSError', e
+        if error is not None:
+          if isinstance(error,dict):
+            if error.has_key(k):
+              error[k].append(varname[k])
+            else:
+              error[k] = [varname[k],]
+          else:
+            print 'type of error unexpected:', type(error)
+            print 'error should be a dictionnary'
+            sys.exit()
+      except:
+        raise
+      f.close()
+
+    for k in filein.keys():
+      if data[k] is None:
+        del(data[k])
+        del(time[k])
+#        data[k] = data[kref] + 1.e20  
+#        time[k] = data[k].getTime()
+
+    timeref = time[kref]
+
+    if tmin is None:
+        tmin = cdtime.reltime(timeref[0],timeref.units)
+        print tmin.tocomp()
+    if tmax is None:
+        tmax = cdtime.reltime(timeref[-1],timeref.units)
+
+    tt = []
+    tlabels = []
+
+    tminloc = tmin.tocomp()
+    if dtlabel == '1h':
+      tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+      t0 = tmin0.add(0,cdtime.Hour)
+      while t0.cmp(tmax) <= 0:
+        if t0.cmp(tmin) >= 0: 
+          tt.append(t0.torel(timeref.units).value)
+          tlabels.append('{0}'.format(t0.hour))
+        t0 = t0.add(1,cdtime.Hour)
+    elif dtlabel == '2h':
+      tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+      t0 = tmin0.add(0,cdtime.Hour)
+      while t0.cmp(tmax) <= 0:
+        if t0.cmp(tmin) >= 0: 
+          tt.append(t0.torel(timeref.units).value)
+          tlabels.append('{0}'.format(t0.hour))
+        t0 = t0.add(2,cdtime.Hour)
+    elif dtlabel == '6h':
+      tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+      t0 = tmin0.add(0,cdtime.Hour)
+      while t0.cmp(tmax) <= 0:
+        if t0.cmp(tmin) >= 0: 
+          tt.append(t0.torel(timeref.units).value)
+          tlabels.append('{0}'.format(t0.hour))
+        t0 = t0.add(6,cdtime.Hour)  
+    elif dtlabel == '10d':
+      tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+      t0 = tmin0.add(0,cdtime.Hour)
+      while t0.cmp(tmax) <= 0:
+        if t0.cmp(tmin) >= 0: 
+          tt.append(t0.torel(timeref.units).value)
+          tlabels.append('{0}/{1}'.format(t0.month,t0.day))
+        if t0.day == 1:
+            t0 = cdtime.comptime(t0.year,t0.month,10,0)
+        elif t0.day == 10:
+            t0 = cdtime.comptime(t0.year,t0.month,20,0)
+        elif t0.day == 20:
+            if t0.month == 12:
+              t0 = cdtime.comptime(t0.year+1,1,1,0)
+            else:
+              t0 = cdtime.comptime(t0.year,t0.month+1,1,0)
+        else:
+            print 't0 unexpected',t0
+    else:
+      print 'dtlabel={} not coded yet'.format(dtlabel)
+      sys.exit()
+
+    tlabels = tt,tlabels
+
+    for k in data.keys(): #filein.keys():
+      nt, = time[k].shape
+      for it in range(0,nt):
+         time[k][it] = cdtime.reltime(time[k][it],time[k].units).torel(timeref.units).value
+      time[k] = np.array(time[k][:])
+      data[k] = np.array(data[k][:])
+      data[k] = np.ma.masked_where(data[k][:] == missing,data[k][:])
+
+    plotutils.plot1D(time,data,\
+            xmin = tmin.torel(timeref.units).value,\
+            xmax = tmax.torel(timeref.units).value,\
+            xlabels=tlabels,\
+            **kwargs)
+
+
+def plot_profile(filein,varname,lines=None,coef=None,units='',lev=None,levunits='km',tt=None,tmin=None,tmax=None,init=False,t0=False,lbias=False,refdataset=None,error=None,**kwargs):
+    """
+       Do a profile plot of varname for several MUSC files
+    """
+
+    if lperf:
+      TT0 = TT.time()
+
+    data = {}
+    level = {}
+    if coef is None:
+      coef = {}
+      for k in filein.keys():
+        coef[k] = 1.
+    
+    if lev is None:
+      lev = {}
+      for k in filein.keys():
+        lev[k] = 'zf'
+    if isinstance(lev,str):
+      levloc = lev
+      lev = {}
+      for k in filein.keys():
+        lev[k] = levloc
+
+    for i,k in enumerate(filein.keys()):
+#      print i, k, filein[k]
+      f = cdms2.open(filein[k])
+
+      try:
+        time = f[varname[k]].getTime()
+#      print time
+        if tmin is None:
+          tmin = cdtime.reltime(time[0],time.units)
+        if tmax is None:
+          tmax = cdtime.reltime(time[-1],time.units)
+
+        if t0:
+          tmin = cdtime.reltime(time[0],time.units)
+          tmax = cdtime.reltime(time[1],time.units)
+          tmax = tmax.add(-1.,cdtime.Second)
+
+#      print tmin.tocomp(), tmax.tocomp()
+
+        if tt is not None:
+          if isinstance(tt,int):
+            tmin = cdtime.reltime(time[tt],time.units)
+            tmax = cdtime.reltime(time[tt],time.units)
+          else:
+            if tt.cmp(tmin) <= 0:
+              print 'tt={0} is lower than tmin={1}'.formtat(tt.tocomp(),tmin.tocomp())
+            if tt.cmp(tmax) > 0:
+              print 'tt={0} is greatet than tmax={1}'.formtat(tt.tocomp(),tmax.tocomp())
+            nt, = time.shape
+            mini = 1.e20
+            ii = 1.e20
+            ttloc = tt.torel(time.units)
+            for it in range(0,nt):
+              tloc = cdtime.reltime(time[it],time.units)
+              tmp = math.fabs(ttloc.value-tloc.value)
+              if tmp < mini:
+                mini = tmp
+                ii = it
+#        dt = time[1]-time[0]
+#        if time.units[:5] == 'hours':
+#          tmin = tt.add(-dt/2.,cdtime.Hour)
+#          tmax = tt.add(dt/2.,cdtime.Hour)
+#        elif time.units[:7] == 'seconds':
+#          tmin = tt.add(-dt/2.,cdtime.Second)
+#          tmax = tt.add(dt/2.,cdtime.Second)
+
+        data[k] = MV2.average(f(varname[k],time=(tmin,tmax))*coef[k],axis=0)
+        if lev[k] == 'zf':
+          level[k] = f(lev[k])
+        elif lev[k] == 'zh':
+          try:
+            level[k] = f(lev[k])
+          except:
+            try:
+              level[k] = f('zf')
+            except:
+              raise
+        elif lev[k] == 'pf':
+          level[k] = f(lev[k])
+        elif lev[k] == 'ph':
+          try:
+            level[k] = f(lev[k])
+          except:
+            try:
+              level[k] = f('pf')
+            except:
+              raise          
+        if len(level[k].shape) == 2:
+          level[k] = MV2.average(level[k](time=(tmin,tmax)),axis=0)
+        kref = k
+      except cdms2.error.CDMSError as e:
+        data[k] = None
+        level[k] = None   
+        f.close()        
+        if verbose:
+          print 'Variable {2} probably unknown in dataset {0} (file={1})'.format(k,filein[k],varname[k])
+          print 'Raised error: cdms2.error.CDMSError', e
+        if error is not None:
+          if isinstance(error,dict):
+            if error.has_key(k):
+              error[k].append(varname[k])
+            else:
+              error[k] = [varname[k],]
+          else:
+            print 'type of error unexpected:', type(error)
+            print 'error should be a dictionnary'
+            sys.exit()
+      except AttributeError as e:
+        data[k] = None
+        level[k] = None
+        f.close()          
+        if verbose:
+          print 'Probably no time axis for variable {2} in dataset {0} (file={1})'.format(k,filein[k],varname[k])
+          print 'Raised error: AttributeError', e
+        if error is not None:
+          if isinstance(error,dict):
+            if error.has_key(k):
+              error[k].append(varname[k])
+            else:
+              error[k] = [varname[k],]
+          else:
+            print 'type of error unexpected:', type(error)
+            print 'error should be a dictionnary'
+            sys.exit()          
+      except:
+        raise
+
+      f.close()
+
+      if lperf:
+        TT1 = TT.time()
+        print 'file', filein[k],':', TT1-TT0, 's'
+        TT0 = TT.time()
+
+    if lperf:
+        TT1 = TT.time()
+        print 'Part 1:', TT1-TT0, 's'
+        TT0 = TT.time()
+
+    for i,k in enumerate(filein.keys()):
+
+     if data[k] is None:
+        del(data[k])
+        del(level[k])
+#        data[k] = data[kref]*0. + 1.e20
+#        level[k] = level[kref]*0. + 1.e20
+     else:
+      if lev[k] in ['zf','zh']:
+        if levunits == 'm':
+          pass
+        elif levunits == 'km':
+          level[k] = level[k]/1000.
+        else:
+          print 'levunits={0} for lev={1} not coded yet'.format(levunits,lev[k])
+          sys.exit()
+      elif lev[k] in ['pf','ph']:
+        if levunits == 'Pa':
+          pass
+        elif levunits == 'hPa':
+          level[k] = level[k]/100.
+        else:
+          print 'levunits={} for lev=pf not coded yet'.format(levunits)
+          sys.exit()
+      else:
+        print 'lev={} not coded yet'.format(lev[k])
+        sys.exit()
+
+    if lperf:
+        TT1 = TT.time()
+        print 'Part 2:', TT1-TT0, 's'
+        TT0 = TT.time()
+
+    if init:
+      f = cdms2.open(filein[kref])
+      data['init'] = f(varname[kref])[0,:]*coef[k]
+      tmp = f(lev[kref])
+      if len(tmp.shape) == 2:
+        level['init'] = tmp[0,:]
+      elif len(tmp.shape) == 1:
+        level['init'] = tmp[:]
+      else:
+        print 'level shape unexpected:', tmp.shape
+        sys.exit()
+      f.close()
+
+      if lev[kref] in ['zf','zh']:
+        if levunits == 'm':
+          pass
+        elif levunits == 'km':
+          level['init'] = level['init']/1000.
+        else:
+          print 'levunits={0} for lev={1} not coded yet'.format(levunits,lev[kref])
+          sys.exit()
+      elif lev[kref] in ['pf','ph']:
+        if levunits == 'Pa':
+          pass
+        elif levunits == 'hPa':
+          level['init'] = level['init']/100.
+        else:
+          print 'levunits={} for lev=pf not coded yet'.format(levunits)
+          sys.exit()
+      else:
+        print 'lev={} not coded yet'.format(lev[kref])
+        sys.exit()
+
+      if lines is None:
+        lines = {}
+      lines['init'] = 'k--'
+
+      if lperf:
+        TT1 = TT.time()
+        print 'Part init:', TT1-TT0, 's'
+        TT0 = TT.time()
+
+
+    for k in data.keys():
+      level[k] = np.array(level[k](squeeze=1))
+      data[k] = np.array(data[k](squeeze=1))
+      #print k, data[k].shape, level[k].shape
+
+    if lbias:
+        if refdataset is None:
+            print 'please provide reference dataset (keyword refdataset) to compute bias)'
+            sys.exit()
+        else: 
+            for k in data.keys():
+              if not(k == refdataset):
+                data[k] = data[k]-data[refdataset]
+            data[refdataset] = data[refdataset]*0.
+
+
+    if lperf:
+        TT1 = TT.time()
+        print 'Part 3:', TT1-TT0, 's'
+        TT0 = TT.time()
+
+    plotutils.plot1D(data,level,lines=lines,**kwargs)
+
+    if lperf:
+        TT1 = TT.time()
+        print 'Plotting:', TT1-TT0, 's'
+        TT0 = TT.time()
+    
+
+def plot2D(filein,varname,coef=None,units='',lev=None,levunits=None,tmin=None,tmax=None,dtlabel='1h',namefig=None,lbias=False,refdataset=None,error=None,**kwargs):
+    """
+       Do a 2D plot of varname for several MUSC file
+    """
+
+    title0 = kwargs['title']
+
+    data = {}
+    levax = {}
+    time = {}
+    timeax = {}
+    if coef is None:
+      coef = {}
+      for k in filein.keys():
+        coef[k] = 1.
+    elif isinstance(coef,int) or isinstance(coef,float):
+      tmp = coef
+      coef = {}
+      for k in filein.keys():
+        coef[k] = tmp
+    
+    if lev is None:
+      lev = {}
+      levunits = {}
+      for k in filein.keys():
+        lev[k] = 'zh'
+        levunits[k] = 'km'
+    elif isinstance(lev,str):
+      tmp = lev
+      lev = {}
+      for k in filein.keys():
+        lev[k] = tmp
+
+    if levunits is None:
+      levunits = {}
+      for k in filein.keys():
+        if lev[k] == 'zh':
+          levunits[k] = 'km'
+        elif lev[k] in['ph','pf']:
+          levunits[k] = 'hPa'
+        else:
+          print 'lev={} not coded yet'.format(lev[k])
+          sys.exit()
+    elif isinstance(levunits,str):
+      tmp = levunits
+      levunits = {}
+      for k in filein.keys():
+        levunits[k] = tmp
+
+    datasets = filein.keys()
+    if lbias:
+      if refdataset is None:
+          print 'please provide reference dataset (keyword refdataset) to compute bias)'
+          sys.exit()
+      else: 
+          f = cdms2.open(filein[refdataset])
+          dataref = f(varname[refdataset],squeeze=1)*coef[refdataset]
+          f.close()
+          tmp = []
+          for dd in datasets:
+              if not(dd == refdataset):
+                  tmp.append(dd)
+          datasets = tmp
+
+
+    for k in datasets: #filein.keys():
+      #print k
+      f = cdms2.open(filein[k])
+      try:
+        data[k] = f(varname[k],squeeze=1)*coef[k]
+        if lbias:
+            nt,nlev = data[k].shape
+            tmp = data[k].getTime()
+            data[k] = data[k]-dataref[0:nt,:]
+            data[k].setAxis(0,tmp)
+      except cdms2.error.CDMSError as e:
+        data[k] = None
+        f.close()          
+        if verbose:
+          print 'Variable {2} probably unknown in dataset {0} (file={1})'.format(k,filein[k],varname[k])
+          print 'Raised error: cdms2.error.CDMSError', e
+        if error is not None:
+          if isinstance(error,dict):
+            if error.has_key(k):
+              error[k].append(varname[k])
+            else:
+              error[k] = [varname[k],]
+          else:
+            print 'type of error unexpected:', type(error)
+            print 'error should be a dictionnary'
+            sys.exit()            
+      except:
+        raise
+      
+      if data[k] is not None:
+        try:
+          levax[k] = f(lev[k],squeeze=1)
+        except:
+          if lev[k] == 'zh':
+            levax[k] = f('zf')
+          if lev[k] == 'ph':
+            levax[k] = f('pf')            
+        f.close()
+
+        if lev[k] == 'zh':
+          if levunits[k] == 'm':
+            pass
+          elif levunits[k] == 'km':
+             levax[k] = levax[k]/1000.
+          else:
+            print 'levunits={} for lev=zh not coded yet'.format(levunits[k])
+            sys.exit()
+        elif lev[k] == 'ph':
+          if levunits[k] == 'Pa':
+            pass
+          elif levunits[k] == 'hPa':
+            levax[k] = levax[k]/100.
+          else:
+            print 'levunits={} for lev=ph not coded yet'.format(levunits[k])
+            sys.exit()
+        else:
+          print 'lev={} not coded yet'.format(lev)
+          sys.exit()
+     
+        time[k] = data[k].getTime()
+
+      
+        if len(levax[k].shape) == 2:
+          nt,nlev = levax[k].shape
+          timeax[k] = np.tile(time[k][:],(nlev,1))
+          X = timeax[k]
+          Y = np.transpose(levax[k])
+        else:
+          nlev, = levax[k].shape
+          nt, = time[k].shape
+          timeax[k] = np.tile(time[k][:],(nlev,1))
+          levax[k] = np.tile(levax[k],(nt,1))
+          X = np.array(timeax[k][:])
+          Y = np.transpose(levax[k][:])
+
+        if tmin is None:
+          tmin = cdtime.reltime(time[k][0],time.units)
+        if tmax is None:
+          tmax = cdtime.reltime(time[k][-1],time.units)
+
+        tt = []
+        tlabels = []
+
+        tminloc = tmin.tocomp()
+        if dtlabel == '1h':
+          tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+          t0 = tmin0.add(0,cdtime.Hour)
+          while t0.cmp(tmax) <= 0:
+            if t0.cmp(tmin) >= 0: 
+              tt.append(t0.torel(time[k].units).value)
+              tlabels.append('{0}'.format(t0.hour))
+            t0 = t0.add(1,cdtime.Hour)
+        elif dtlabel == '2h':
+          tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+          t0 = tmin0.add(0,cdtime.Hour)
+          while t0.cmp(tmax) <= 0:
+            if t0.cmp(tmin) >= 0: 
+              tt.append(t0.torel(time[k].units).value)
+              tlabels.append('{0}'.format(t0.hour))
+            t0 = t0.add(2,cdtime.Hour)
+        elif dtlabel == '6h':
+          tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+          t0 = tmin0.add(0,cdtime.Hour)
+          while t0.cmp(tmax) <= 0:
+            if t0.cmp(tmin) >= 0: 
+              tt.append(t0.torel(time[k].units).value)
+              tlabels.append('{0}'.format(t0.hour))
+            t0 = t0.add(6,cdtime.Hour) 
+        elif dtlabel == '10d':
+          tmin0 = cdtime.comptime(tminloc.year,tminloc.month,tminloc.day,tminloc.hour)
+
+          t0 = tmin0.add(0,cdtime.Hour)
+          while t0.cmp(tmax) <= 0:
+            if t0.cmp(tmin) >= 0: 
+              tt.append(t0.torel(time[k].units).value)
+              tlabels.append('{0}/{1}'.format(t0.month,t0.day))
+            if t0.day == 1:
+              t0 = cdtime.comptime(t0.year,t0.month,10,0)
+            elif t0.day == 10:
+              t0 = cdtime.comptime(t0.year,t0.month,20,0)
+            elif t0.day == 20:
+              if t0.month == 12:
+                t0 = cdtime.comptime(t0.year+1,1,1,0)
+              else:
+                t0 = cdtime.comptime(t0.year,t0.month+1,1,0)
+            else:
+              print 't0 unexpected',t0
+            
+        else:
+          print 'dtlabel={} not coded yet'.format(dtlabel)
+          sys.exit()
+
+        tlabels = tt,tlabels
+
+        if isinstance(namefig,str):
+            tmp = k + '_' + namefig
+        elif isinstance(namefig,dict):
+            tmp = namefig[k]
+        elif namefig is None:
+            tmp = None
+        else:
+            print 'namefig type unexpected:', namefig
+            sys.exit()
+
+        kwargs['title'] = '{0} - {1}'.format(title0,k)
+
+        plotutils.plot2D(X,Y,ma.transpose(data[k]),\
+            xmin = tmin.torel(time[k].units).value,\
+            xmax = tmax.torel(time[k].units).value,\
+            xlabels=tlabels,\
+            namefig=tmp,\
+            **kwargs)
+
+def getvarnames(var,fin,varnames,coefs,coef=1):
+  varloc = {}
+  for sim in fin.keys():
+    try:
+      varloc[sim] = varnames[sim][var]
+    except:
+      varloc[sim] = var
+
+  coefloc = {}
+  for sim in fin.keys():
+    try:
+      coefloc[sim] = coefs[sim][var]
+    except:
+      coefloc[sim] = coef
+
+  return varloc,coefloc
+
+def getlines(fin,lines):
+  ll = ['r','g','b']
+  lineloc = {}
+  i = 0
+  for sim in fin.keys():
+    try:
+      lineloc[sim] = lines[sim]
+    except:
+      lineloc[sim] = ll[i]
+      i = i + 1
+
+  return lineloc
diff --git a/atlas/util/plotutils.py b/atlas/util/plotutils.py
new file mode 100644
index 0000000..0919305
--- /dev/null
+++ b/atlas/util/plotutils.py
@@ -0,0 +1,168 @@
+import numpy as np
+import numpy.ma as ma
+#import matplotlib
+#matplotlib.rcParams['text.usetex'] = True
+#matplotlib.rcParams['text.latex.unicode'] = True
+import matplotlib.pyplot as plt
+from matplotlib.colors import BoundaryNorm
+from copy import copy
+
+def plot1D(x,y,lines=None,title='',xname='',yname='',xlabels=None,ylabels=None,xmin=None,xmax=None,ymin=None,ymax=None,namefig=None,lgrid=False,figsize=None):
+    """
+       Make a simple 1D plot
+    """
+
+    if not(figsize is None):
+      plt.figure(figsize=figsize)
+
+    if lines is None:
+      for k in x.keys():
+        cs = plt.plot(x[k],y[k],label=k)
+    else:
+      for k in x.keys():
+        if lines.has_key(k):
+          cs = plt.plot(x[k],y[k],lines[k],label=k)
+        else:
+          cs = plt.plot(x[k],y[k],label=k)
+
+    if xmin is None:
+        xmin = 1.e20
+        for k in x.keys():
+          xmin = min(xmin,np.min(x[k]))
+        #print 'xmin', xmin
+    if xmax is None:
+        xmax = -1.e20
+        for k in x.keys():
+          tmp = np.where(x[k] == 1.e20, -1.e20, x[k])
+          xmax = max(xmax,np.max(tmp))
+        #print 'xmax', xmax
+    if ymin is None:
+        ymin = 1.e20
+        for k in y.keys():
+          ymin = min(ymin,np.min(y[k]))
+    if ymax is None:
+        ymax = -1.e20
+        for k in y.keys():
+          ymax = max(ymax,np.max(y[k]))
+
+
+    plt.xlim(xmin,xmax)
+    plt.ylim(ymin,ymax)
+    if xlabels is not None:
+        plt.xticks(xlabels[0][:],xlabels[1][:])
+    if ylabels is not None:
+        plt.yticks(ylabels[0][:],ylabels[1][:])
+
+    plt.legend(loc='best')
+    plt.title(title)
+    plt.xlabel(xname)
+    plt.ylabel(yname)
+
+    if lgrid:
+      plt.grid(True,linestyle='--')
+
+    if namefig is None:
+        plt.show()
+    else:
+      plt.savefig(namefig)
+
+    plt.close()
+
+def plot2D(x,y,data,cmap=plt.cm.RdBu,levels=None,firstwhite=False,badcolor='darkgrey',extend='neither',title='',xname='',yname='',xlabels=None,ylabels=None,xmin=None,xmax=None,ymin=None,ymax=None,namefig=None,minmax=False,lgrid=False,figsize=None):
+    """
+       Make a simple 2D plot
+    """
+
+    if not(figsize is None):
+      plt.figure(figsize=figsize)
+
+    if levels is None:
+      nn = 20
+    else:
+      nn = 255/len(levels)
+
+    cmaploc = copy(cmap)
+    cmaplist = [cmaploc(i) for i in range(cmaploc.N-1)]
+    if firstwhite:
+      cmaplist[nn] = (1,1,1,0)
+    cmaploc = cmaploc.from_list('Custom cmap',cmaplist[nn:-nn], len(cmaplist[nn:-nn]))
+    cmaploc.set_over(cmaplist[-1])
+    cmaploc.set_under(cmaplist[0])
+    cmaploc.set_bad(badcolor)
+
+
+    if levels is None:
+      cs = plt.pcolormesh(x,y,data, cmap=cmaploc)
+      plt.colorbar(cs,extend=extend) 
+    else:
+      norm = BoundaryNorm(levels, ncolors=cmaploc.N, clip=False)
+      cs = plt.pcolormesh(x,y,data, cmap=cmaploc, norm=norm)
+      plt.colorbar(cs,ticks=levels,extend=extend)
+
+    if xmin is None:
+        xmin = ma.min(x)
+    if xmax is None:
+        xmax = ma.max(x)
+    if ymin is None:
+        ymin = ma.min(y)
+    if ymax is None:
+        ymax = ma.max(y)
+
+
+    plt.xlim(xmin,xmax)
+    plt.ylim(ymin,ymax)
+    if xlabels is not None:
+        plt.xticks(xlabels[0][:],xlabels[1][:])
+    if ylabels is not None:
+        plt.yticks(ylabels[0][:],ylabels[1][:])
+
+    plt.title(title)
+    plt.xlabel(xname)
+    plt.ylabel(yname)
+
+    if lgrid:
+      plt.grid(True,linestyle='--')
+
+    if minmax:
+      if ymin < ymax:
+        nx,ny = data.shape
+        tmp = ma.where(x[:nx,:ny] >= xmin, data, 1.e20)
+        tmp = ma.where(x[:nx,:ny] <= xmax, tmp, 1.e20)
+        tmp = ma.where(y[:nx,:ny] >= ymin, tmp, 1.e20)
+        tmp = ma.where(y[:nx,:ny] <= ymax, tmp, 1.e20)
+        mini = ma.min(tmp)
+
+        tmp = ma.where(x[:nx,:ny] >= xmin, data, -1.e20)
+        tmp = ma.where(x[:nx,:ny] <= xmax, tmp, -1.e20)
+        tmp = ma.where(y[:nx,:ny] >= ymin, tmp, -1.e20)
+        tmp = ma.where(y[:nx,:ny] <= ymax, tmp, -1.e20)
+        maxi = ma.max(tmp)
+      else:
+        nx,ny = data.shape
+        tmp = ma.where(x[:nx,:ny] >= xmin, data, 1.e20)
+        tmp = ma.where(x[:nx,:ny] <= xmax, tmp, 1.e20)
+        tmp = ma.where(y[:nx,:ny] >= ymax, tmp, 1.e20)
+        tmp = ma.where(y[:nx,:ny] <= ymin, tmp, 1.e20)
+        mini = ma.min(tmp)
+
+        tmp = ma.where(x[:nx,:ny] >= xmin, data, -1.e20)
+        tmp = ma.where(x[:nx,:ny] <= xmax, tmp, -1.e20)
+        tmp = ma.where(y[:nx,:ny] >= ymax, tmp, -1.e20)
+        tmp = ma.where(y[:nx,:ny] <= ymin, tmp, -1.e20)
+        maxi = ma.max(tmp)
+
+      plt.text(xmax+(xmax-xmin)/20, ymin-(ymax-ymin)/20., "min = {:f}".format(mini), {'color': 'k', 'fontsize': 10},
+         horizontalalignment='left',
+         verticalalignment='center',
+         clip_on=False)
+      plt.text(xmax+(xmax-xmin)/20, ymin-(ymax-ymin)/10., "max = {:f}".format(maxi), {'color': 'k', 'fontsize': 10},
+         horizontalalignment='left',
+         verticalalignment='center',
+         clip_on=False)
+
+    if namefig is None:
+        plt.show()
+    else:
+      plt.savefig(namefig)
+
+    plt.close()
diff --git a/clean.sh b/clean.sh
index 0094a11..5e6e0df 100755
--- a/clean.sh
+++ b/clean.sh
@@ -4,6 +4,9 @@ DIR0=`pwd`
 REP2CLEAN="
 CASES
 UTIL/install
+atlas
+atlas/config
+atlas/util
 "
 
 for rr in $REP2CLEAN
diff --git a/install_macRR.sh b/install_macRR.sh
new file mode 100755
index 0000000..821e115
--- /dev/null
+++ b/install_macRR.sh
@@ -0,0 +1,133 @@
+#!/bin/sh
+
+set -evx
+
+#####################################################
+# User specific
+
+REP_EMS=$HOME/Tools/EMS
+REP_MUSC=$HOME/MUSC
+
+#####################################################
+
+
+
+DIR0=`pwd`
+
+#####################################################
+# Some tests to avoid overwriting
+
+if [ -d $REP_EMS ]; then
+  echo "REP_EMS="$REP_EMS
+  echo "REP_EMS already exists. Please remove it or modify REP_EMS at the top of install_macRR.sh"
+  exit
+fi
+
+if [ -d $REP_MUSC ]; then
+  echo "REP_MUSC="$REP_MUSC
+  echo "REP_MUSC already exists. Please remove it or modify REP_MUSC at the top of install_macRR.sh"
+  exit
+fi
+
+#####################################################
+# Download and install EMS in REP_EMS
+[ -d $REP_EMS ] || mkdir -p $REP_EMS
+cd $REP_EMS
+git clone https://github.com/romainroehrig/EMS.git .
+git checkout macRR
+
+# Modify your .bash_profile to initialize a few environment variables
+cd ~/
+
+# save profile
+cat .profile > .profile.EMS-saved_$(date +"%Y-%m-%d_at_%H:%M:%S")
+
+# Modify it
+sed -i '' "/^export REP_EMS=/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export REP_EMS=/#&/" .profile
+sed -i '' "/^export REP_MUSC=/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export REP_MUSC=/#&/" .profile
+sed -i '' "/^export PYTHONPATH=.:\$REP_EMS/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export PYTHONPATH=.:\$REP_EMS/#&/" .profile
+
+cat << EOF >> .profile
+
+# Modifications for Environment for MUSC simulations (EMS)
+# included on $(date)
+export REP_EMS=$REP_EMS
+export REP_MUSC=$REP_MUSC
+export PYTHONPATH=.:\$REP_EMS/CASES:\$REP_EMS/UTIL/python:\$REP_EMS/UTIL/install/:\$PYTHONPATH
+EOF
+
+. ~/.profile
+
+# Some compilation if you want
+compile="n"
+
+if [ $compile == "y" ]; then
+
+  # lfa python library
+  cd $REP_EMS/UTIL/python/lfa
+  ./makelib.sh
+
+  # ascii2lfa binary
+  cd $REP_EMS/UTIL/Tools/ASCII2FA/src
+  #cp /Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxrd.local.a libxrd.a
+  #cp /Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxla.local.a libxla.a
+  #cp /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libgribex.a libgribex.a
+  #cp /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libmpidummy.a libmpidummy.a
+  make all
+  make clean
+
+  # LFA tools
+  cd $REP_EMS//UTIL/Tools/LFA
+  ./install
+
+  # a few python libraries
+  source activate myuvcdat
+
+  cd $REP_EMS/UTIL/Init_Forc/ARPCLIMAT
+  f2py -c interpvertp.F90 -m interpvertp
+  cd $REP_EMS/UTIL/post_DEPHY
+  f2py -c convert2p.F90 -m convert2p
+  f2py -c convert2z.F90 -m convert2z
+
+  source deactivate myuvcdat
+
+fi
+
+#####################################################
+# Prepare what is needed to run MUSC simulations in REP_MUSC
+[ -d $REP_MUSC ] || mkdir -p $REP_MUSC
+cd $REP_MUSC
+cp -r $REP_EMS/Examples/* .
+ln -s $REP_EMS/main/install_ATM_cases.py install_ATM_cases.py
+ln -s $REP_EMS/main/install_SFX_cases.py install_SFX_cases.py
+ln -s $REP_EMS/main/run_MUSC_cases.py run_MUSC_cases.py
+
+for ff in convertLFA2nc.py convertp_to_1hourly.py convertz_to_1hourly.py lfa2nc_part2.py convert2p.py convert2z.py convertk_to_1hourly.py convertp_to_3hourly.py convertz_to_daily.py convert2p.so convert2z.so convertk_to_daily.py convertp_to_daily.py lfa2nc_part1.py
+do
+
+  ln -s $REP_EMS/UTIL/post_DEPHY/$ff $REP_MUSC/post/$ff
+
+done
+
+#####################################################
+# Some Testing
+cd $REP_MUSC
+
+source activate myuvcdat
+
+./install_ATM_cases.py AYOTTE 24SC
+[ -f $REP_MUSC/ATM/ARPCLIMAT/AYOTTE/24SC/initfile_L91 ] || echo "PROBLEM with install_ATM_cases.py"
+
+./install_SFX_cases.py config/config_arp631_CMIP6.py AYOTTE 24SC
+[ -f $REP_MUSC/SURFEX/arp631/CMIP6/AYOTTE/24SC/PGD.lfi ] || echo "PROBLEM with install_SFX_cases.py: PGD"
+[ -f $REP_MUSC/SURFEX/arp631/CMIP6/AYOTTE/24SC/PREP.lfi ] || echo "PROBLEM with install_SFX_cases.py: PREP"
+
+./run_MUSC_cases.py config/config_arp631_CMIP6.py AYOTTE 24SC
+[ -f $REP_MUSC/simulations/arp631/CMIP6/L91_300s/AYOTTE/24SC/Output/netcdf/Out_klevel.nc ] || echo "PROBLEM with run_MUSC_cases.py"
+
+#####################################################
+# Back in directory where installation was launched
+cd $DIR0
diff --git a/main/install_ATM_cases.py b/main/install_ATM_cases.py
index f315997..1d4a45e 100755
--- a/main/install_ATM_cases.py
+++ b/main/install_ATM_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
diff --git a/main/install_SFX_cases.py b/main/install_SFX_cases.py
index 86cc76b..e145372 100755
--- a/main/install_SFX_cases.py
+++ b/main/install_SFX_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
diff --git a/main/run_MUSC_cases.py b/main/run_MUSC_cases.py
index 594bf8f..5e75635 100755
--- a/main/run_MUSC_cases.py
+++ b/main/run_MUSC_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
