diff --git a/CASES/EMS_cases.py b/CASES/EMS_cases.py
index 4c979d8..3d1ec8c 100644
--- a/CASES/EMS_cases.py
+++ b/CASES/EMS_cases.py
@@ -37,6 +37,13 @@ data_input[case]['NSA3a'] = rep0 + '/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3a_drive
 data_input[case]['NSA3aflux'] = rep0 + '/CINDY-DYNAMO/NSA3a/cindy-dynamo-NSA3aflux_driver_RR.nc'
 data_input[case]['SSA3a'] = rep0 + '/CINDY-DYNAMO/SSA3a/cindy-dynamo-SSA3a_driver_RR.nc'
 
+# LBA case
+case = 'LBA'
+cases.append(case)
+subcases[case] = ['REF']
+data_input[case] = {}
+data_input[case]['REF'] = rep0 + '/LBA/LBA_driver_FC_RR.nc'
+
 # AMMA Cases
 case = 'AMMA'
 cases.append(case)
diff --git a/CASES/LBA/LBA_driver_FC_RR.nc b/CASES/LBA/LBA_driver_FC_RR.nc
new file mode 100644
index 0000000..76e7470
Binary files /dev/null and b/CASES/LBA/LBA_driver_FC_RR.nc differ
diff --git a/CASES/LBA/convert.py b/CASES/LBA/convert.py
new file mode 100644
index 0000000..f49a155
--- /dev/null
+++ b/CASES/LBA/convert.py
@@ -0,0 +1,259 @@
+import cdms2
+import MV2
+import numpy as np
+from scipy import interpolate
+
+cdms2.setNetcdfShuffleFlag(0)
+cdms2.setNetcdfDeflateFlag(0)
+cdms2.setNetcdfDeflateLevelFlag(0)
+
+dico = {}
+dico['u'] = 'uwind'
+dico['v'] = 'vwind'
+dico['qv'] = 'qvthermo'
+dico['th'] = 'ththermo'
+dico['thadvh'] = 'thadvhforcing'
+dico['sfc_sens_flx'] = 'sfc_sens_flx'
+dico['sfc_lat_flx'] = 'sfc_lat_flx'
+dico['ps'] = 'ps'
+
+time = range(0,21601,300)
+nt = len(time)
+time = cdms2.createAxis(MV2.array(time,typecode=MV2.float32))
+time.designateTime()
+time.id = 'time'
+time.units = 'seconds since 1999-02-23 07:30:00'
+time.calendar = 'gregorian'
+
+data = {}
+
+f = cdms2.open('LBA_LES_driver.nc')
+for var in f.listvariables():
+    data[var] = f(var)
+
+for var in dico.keys():
+  data[var] = data[dico[var]]
+
+
+for var in ['u','v','th','qv','Pthermo']:
+  nlev, = data[var].shape
+  lev = data[var].getAxis(0)
+  tmp = MV2.zeros((nt,nlev),typecode=MV2.float32)
+  for i in range(0,nt):
+      tmp[i,:] = data[var][:] 
+ 
+  tmp.setAxis(0,time)
+  tmp.setAxis(1,lev)
+  data[var] = tmp*1.
+
+
+for var in ['thadvh']:
+  nlev,nt0 = data[var].shape
+  lev = data[var].getAxis(0)
+  time0 = data[var].getAxis(1)
+  tmp = MV2.zeros((nt0,nlev),typecode=MV2.float32)
+  for i in range(0,nt0):
+    tmp[i,:] = data[var][:,i]
+
+  tmp.setAxis(0,time0)
+  tmp.setAxis(1,lev)
+
+  data[var] = tmp*1.
+
+f.close()
+
+#time = 0, 10800, 21600, 32400, 43200 ;
+
+lat = MV2.zeros(1,typecode=MV2.float32) + 13.47
+lat = cdms2.createAxis(lat)
+lat.designateLatitude()
+lat.id = 'lat'
+lat.units = 'degrees_north'
+
+lon = MV2.zeros(1,typecode=MV2.float32) + 2.18
+lon = cdms2.createAxis(lon)
+lon.designateLongitude()
+lon.id = 'lon'
+lon.units = 'degrees_east'
+
+lev = [0, 42.5, 130, 200.9, 456.3, 464, 573, 743, 1061.1, 1100, 1410.5, 1653, 1791.3, 2203.5, 2216, 2647, 2760, 3121.9, 3297, 3628.1, 3824, 4165.7, 4327, 4734.7, 4787, 5242, 5335, 5686, 5966.7, 6131, 6578, 6629.7, 6996, 7324.1, 7431, 7881, 8049.9, 8300, 8718, 8807, 9149, 9595.5, 9611, 10084, 10415.3, 10573, 11008, 11266.5, 11460, 11966, 12149.1, 12472, 12971, 13063, 13478, 13971, 14008.3, 14443, 14956, 14984.9, 15458, 15992.9, 16019, 16491, 16961, 17032.3, 17442, 17934, 18103, 18397, 18851, 19205.1, 19331, 19809, 20321, 20338.5, 20813, 21329, 21503.3, 22699.5, 30000]
+nlev = len(lev)
+lev = MV2.array(lev,typecode=MV2.float32)
+lev = cdms2.createAxis(lev)
+lev.designateLevel()
+lev.id = 'nlev'
+lev.units = 'm'
+lev.positive = 'up'
+
+
+variables0D = [] #['orog']
+variables2D = ['sfc_lat_flx','sfc_sens_flx','ps','ustar']
+variables3D = ['pressure','th','qv','temp','u','v','thadvh']
+
+variables = variables3D + variables2D + variables0D
+
+units = {}
+units['pressure'] = 'Pa'
+units['th'] = 'K'
+units['qv'] = 'kg kg-1'
+units['temp'] = 'K'
+units['u'] = 'm s-1'
+units['v'] = 'm s-1'
+units['ug'] = 'm s-1'
+units['vg'] = 'm s-1'
+units['sfc_lat_flx'] = 'W m-2'
+units['sfc_sens_flx'] = 'W m-2'
+units['orog'] = 'm'
+units['ps'] = 'Pa'
+units['w'] = 'm s-1'
+units['qadvh'] = 'kg kg-1 s-1'
+units['thadvh'] = 'K s-1'
+units['tadvh'] = 'K s-1'
+units['ustar'] = 'm s-1'
+
+names = {}
+names['pressure'] = 'Pressure'
+names['th'] = 'Potential temperature'
+names['qv'] = 'Specific humidity'
+names['temp'] = 'Temperature'
+names['u'] = 'Zonal wind'
+names['v'] = 'Meridional wind'
+names['ug'] = 'Geostrophic zonal wind'
+names['vg'] = 'Geostrophic meridional wind'
+names['sfc_lat_flx'] = 'Surface latent heat flux'
+names['sfc_sens_flx'] = 'Surface sensible heat flux'
+names['ustar'] = 'Surface ustar'
+names['orog'] = 'Surface orography'
+names['ps'] = 'Surface pressure'
+names['w'] = 'Vertical velocity'
+names['qadvh'] = 'Specific Humidity horizontal advection'
+names['thadvh'] = 'Potential temperature horizontal advection'
+names['tadvh'] = 'Temperature horizontal advection'
+
+
+datanew = {}
+for var in variables0D:
+  datanew[var] = MV2.zeros((1,1),typecode=MV2.float32)    
+  datanew[var].setAxis(0,lat)
+  datanew[var].setAxis(1,lon)
+for var in variables2D:
+  datanew[var] = MV2.zeros((nt,1,1),typecode=MV2.float32)    
+  datanew[var].setAxis(0,time)
+  datanew[var].setAxis(1,lat)
+  datanew[var].setAxis(2,lon)
+for var in variables3D:
+  datanew[var] = MV2.zeros((nt,nlev,1,1),typecode=MV2.float32)
+  datanew[var].setAxis(0,time)
+  datanew[var].setAxis(1,lev)
+  datanew[var].setAxis(2,lat)
+  datanew[var].setAxis(3,lon)
+
+data['pressure'] = data['Pthermo']
+data['temp'] = data['th']*1.
+nt0,nlev0, = data['temp'].shape
+for ilev in range(0,nlev0):
+  for it in range(0,nt0):
+    data['temp'][it,ilev] = data['th'][it,ilev]*(data['Pthermo'][it,ilev]/100000.)**(2./7.)  
+
+#data['tadvh'] = data['thadvh']*1.
+#nt0,nlev0, = data['tadvh'].shape
+#for ilev in range(0,nlev0):
+#  for it in range(0,nt0):
+#    data['tadvh'][it,ilev] = data['thadvh'][it,ilev]*(data['Pthermo'][it,ilev]/100000.)**(2./7.)    
+
+for var in variables3D:
+  time0 = data[var].getAxis(0)
+  lev0 = data[var].getAxis(1)
+  nt0,nlev0 =data[var].shape
+  new = MV2.zeros((nt,nlev0),typecode=MV2.float32)
+  for ilev in range(nlev0):
+    ff = interpolate.interp1d(np.array(time0[:]),np.array(data[var][:,ilev]))
+    new[:,ilev] = ff(np.array(time[:]))
+  new.setAxis(0,time)
+  new.setAxis(1,lev0)
+  data[var] = new
+
+  levin = data[var].getAxis(1)
+  nlevin, = levin.shape
+  for ilev in range(0,nlev):
+    lev0 = lev[ilev]
+    ii = 0
+    lflag = False
+    for ilevin in range(0,nlevin-1):
+      if  lev0 >= levin[ilevin] and lev0 < levin[ilevin+1]:
+        ii = ilevin            
+        lflag = True
+    if not(lflag):
+      if lev0 >= levin[nlevin-1]:
+        ii = nlevin-2
+      if lev0 <= levin[0]:
+        ii = 0
+    tmp = data[var][:,ii] + (data[var][:,ii+1]-data[var][:,ii])*(lev0 - levin[ii])/(levin[ii+1]-levin[ii])
+#    for it1 in range(0,4):
+#      for it2 in range(0,6):
+#        datanew[var][it1*6+it2,ilev,0,0] = tmp[it1] + (tmp[it1+1]-tmp[it1])*it2/6. 
+    datanew[var][:,ilev,0,0] = tmp[:]
+
+
+for var in ['sfc_lat_flx','sfc_sens_flx']:
+    time0 = data[var].getAxis(0)
+    ff = interpolate.interp1d(np.array(time0[:]),np.array(data[var][:]))
+    datanew[var][0:nt,0,0] = ff(np.array(time[:]))
+
+
+datanew['ps'][:,0,0] = datanew['ps'][:,0,0] + data['ps']
+#datanew['orog'][0,0] = datanew['orog'][0,0] + data['orog']
+
+datanew['ustar'] = datanew['ps']*0.
+
+datanew['tadvh'] = datanew['thadvh']*1.
+nt0,nlev0,ny,nx = datanew['tadvh'].shape
+for ilev in range(0,nlev0):
+  for it in range(0,nt0):
+    datanew['tadvh'][it,ilev,0,0] = datanew['thadvh'][it,ilev,0,0]*(datanew['pressure'][it,ilev,0,0]/100000.)**(2./7.)
+
+variables.append('tadvh')
+
+#datanew['qv'][:,nlev-1,0,0] = datanew['qv'][:,nlev-1,0,0]*0.
+#datanew['qv'][:,nlev-2,0,0] = datanew['qv'][:,nlev-2,0,0]*0.
+
+g = cdms2.open('LBA_driver_FC_RR.nc','w')
+
+for var in variables:
+  datanew[var].id = var
+  if var == 'th':
+    datanew[var].id = 'theta'
+  datanew[var].long_name = names[var]    
+  datanew[var].units = units[var]
+  g.write(datanew[var])
+
+g.description = "Radiation included in temperature large-scale advection"
+g.reference = '??'
+g.author = "F Couvreux"
+g.modifications = "2018-07-24: R. Roehrig put all fields on the same vertical and time axes"
+g.case = "LBA" 
+g.startDate = "19990223073000" 
+g.endDate = "19990223133000" 
+g.qadvh = 0
+g.tadvh = 1
+g.qadvv = 0 
+g.tadvv = 0 
+g.trad = 'adv' 
+g.forc_omega = 0 
+g.forc_w = 0 
+g.forc_geo = 0
+g.nudging_u = 3601 
+g.nudging_v = 3601
+g.nudging_t = 0 
+g.nudging_q = 0 
+g.p_nudging_u = 110000
+g.p_nudging_v = 110000
+g.p_nudging_t = 110000
+g.p_nudging_q = 110000
+g.zorog = 0.
+g.surfaceForcing = "surfaceFlux" 
+g.surfaceForcingWind = "ustar"
+g.surfaceType = "ocean"
+
+g.close()
+
diff --git a/Examples/config/config_arp631_CMIP6.py b/Examples/config/config_arp631_CMIP6.py
index bff28f7..84da07a 100644
--- a/Examples/config/config_arp631_CMIP6.py
+++ b/Examples/config/config_arp631_CMIP6.py
@@ -4,8 +4,8 @@ rep0 = os.getenv('REP_MUSC')
 
 config = 'CMIP6'
 cycle = 'arp631'
-MASTER = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/MASTER'
-PGD = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/PGD'
-PREP = '/home/common/pack/arp603_export.01.GFORTRAN610.cx/bin/PREP'
+MASTER = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin//MASTERODB'
+PGD = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin/PGD'
+PREP = '/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/bin/PREP'
 namATMref = rep0 + '/namelist/ARPCLIMAT/nam.atm.tl127l91r.CMIP6.v631'
 namSFXref = rep0 + '/namelist/SURFEX/nam.sfx.tl127.CMIP6.v631'
diff --git a/Examples/post/config_LBA.py b/Examples/post/config_LBA.py
new file mode 100644
index 0000000..e608457
--- /dev/null
+++ b/Examples/post/config_LBA.py
@@ -0,0 +1,42 @@
+#saveall = True
+saveall = False
+
+
+var2save = ['pf','zf','theta','temp','qv','u','v','wap','ql','qi','qr','qsn','rneb','cc','prw','rain','lhf','shf','tsurf','hur','Q1','Q2','qlc','qic','qrc','qsnc','tke','w_up','Mf','alpha_up','ustar','z0']
+
+var2save = var2save + ['tntrlw','tntrsw','tntpbl','tntlscp','tntc','tntd','tnupbl','tnuc','tnud','tnvpbl','tnvc','tnvd','tntadv','tntnudg','tnugeo','tnvgeo','tendu','tendv','tendq','tendh']
+
+var2save = var2save + ['delta_t','delta_q','dt_wake','dq_wake','dt_wake2','dq_wake2','omega_up','alpha_up','wake_fip','Cstar','hw','ZMWAKE','ZCWAKE','ZS12','ZCTH','ZMTH','ZALPTH','ZWUP','ZALPHAUP','sigmaw']
+
+var2save = var2save + ['buoy','w_up_bud','dw_buoy','dw_fric','dw_Kd','dw_entr','dw_transp','dTv_up','ZUDALWAKE','ZBUOWAKE','ZALFW','ZWWMWX','ZVVER','ZDOMEGA','ZWW','ZWX','ZMW','ZMX','ZMTOT']
+
+
+convert2p = False
+convert2z = False
+
+convertkday = False
+convertpday = False
+convertzday = False
+
+convertk1h = False
+convertp1h = False
+convertz1h = False
+
+convertk3h = False # not coded for True
+convertp3h = False
+convertz3h = False # not coded for True
+
+# Pour convert2p, niveau en hPa
+levout = []
+for i in range(1,41):
+  levout.append(i*25.)
+levout.reverse()
+
+# Pour convert2z, niveau en m
+levoutz = []
+for i in range(0,401):
+  levoutz.append(i*50.)
+levoutz.reverse()
+
+# Niveau de print (0, 1 ou 2)
+verbose = 2
diff --git a/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so b/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so
index 6ba9413..f83c6d1 100755
Binary files a/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so and b/UTIL/Init_Forc/ARPCLIMAT/interpvertp.so differ
diff --git a/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py b/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
index 2a23519..9ddbb12 100644
--- a/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
+++ b/UTIL/Init_Forc/ARPCLIMAT/prepare_nam1D.py
@@ -62,6 +62,7 @@ if attributes['qadv'] == 1:
 if attributes['tadvh'] == 1:
   var2read.append('tadvh')	
   var2interpol.append('tadvh')
+  time = f('tadvh').getTime()
 if attributes['qadvh'] == 1:
   var2read.append('qadvh')	
   var2interpol.append('qadvh')
diff --git a/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh b/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
index 1c47745..88ce048 100755
--- a/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
+++ b/UTIL/Init_Forc/ARPCLIMAT/prepare_profile.sh
@@ -1,5 +1,8 @@
 #!/bin/sh
 
+source activate myuvcdat
+alias cdat='python'
+
 cat << EOF > tmp.py
 import os
 
diff --git a/UTIL/Runs/run_ARPCLIMAT.sh b/UTIL/Runs/run_ARPCLIMAT.sh
index 94330c2..7b9ca60 100755
--- a/UTIL/Runs/run_ARPCLIMAT.sh
+++ b/UTIL/Runs/run_ARPCLIMAT.sh
@@ -121,7 +121,7 @@ set -x
 #export DR_HOOK=0
 export DR_HOOK_IGNORE_SIGNALS=-1
 
-ulimit -s unlimited
+#ulimit -s unlimited
 
 date
 ./MASTER -c001 -vmeteo -maladin -e${EXP} -t$TSTEP -f$NSTOP -a$ADVEC  >lola 2>&1
diff --git a/UTIL/Tools/ASCII2FA/bin/ascii2fa b/UTIL/Tools/ASCII2FA/bin/ascii2fa
index 61c7d98..e8178c3 100755
Binary files a/UTIL/Tools/ASCII2FA/bin/ascii2fa and b/UTIL/Tools/ASCII2FA/bin/ascii2fa differ
diff --git a/UTIL/Tools/ASCII2FA/src/Makefile b/UTIL/Tools/ASCII2FA/src/Makefile
index a3df309..f2a9b65 100755
--- a/UTIL/Tools/ASCII2FA/src/Makefile
+++ b/UTIL/Tools/ASCII2FA/src/Makefile
@@ -2,7 +2,7 @@
 
 FC	 =	gfortran
 FFLAGS	 =      -ff2c -fconvert=big-endian -frecord-marker=4 $(M32) -ffixed-form -fdefault-real-8 -DADDRESS64 -DLITTLE_ENDIAN -DHIGHRES
-F90FLAGS =      -fconvert=big-endian -frecord-marker=4 $(M32) -ffree-form -fdefault-real-8 -DADDRESS64 -DHIGHRES
+F90FLAGS =      -fconvert=swap -fno-second-underscore -fbacktrace -fopenmp -fno-sign-zero -fpic -ffree-line-length-none -m64 -ffree-form  -DLINUX -DLITTLE_ENDIAN -DLITTLE -DDARWIN -DADDRESS64 -fdefault-real-8 -fdefault-double-8 -g -O2
 EXEC	 =	acadfa_exe
 
 OBJS	 =	acadfa1D_main.o \
@@ -10,10 +10,12 @@ OBJS	 =	acadfa1D_main.o \
 		real2spec.o \
 		empty.o 
 
-XRD	 =	libxrd.a 
-GRIBEX   =      libgribex.a 
-MPIDUMMY =      libmpidummy.a
-LIBS	 =	$(XRD) $(GRIBEX) $(MPIDUMMY)
+XRD	 =	/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxrd.local.a 
+XLA	 =	/Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxla.local.a 
+#XRD	 =	/Users/romainroehrig/pack/arp603_export.01.MPIGNU640.x.RR.GABLS4/lib/libxrd.local.a 
+GRIBEX   =      /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libgribex.a 
+MPIDUMMY =      /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libmpidummy.a
+LIBS	 =	$(XRD) $(XLA) $(GRIBEX) $(MPIDUMMY) 
 
 %.o:%.F90
 	$(FC) $(F90FLAGS) -c $<
diff --git a/UTIL/Tools/ASCII2FA/src/acadfa_sueframe.F90 b/UTIL/Tools/ASCII2FA/src/acadfa_sueframe.F90
index 6528a5d..a3ec332 100644
--- a/UTIL/Tools/ASCII2FA/src/acadfa_sueframe.F90
+++ b/UTIL/Tools/ASCII2FA/src/acadfa_sueframe.F90
@@ -68,9 +68,11 @@
       write(6,*)'PVP00=',PVP00
       write(6,*)'PVALH=',PVALH
       write(6,*)'PVBH=',PVBH
-      write(6,*)'LDGARD=',LDGARD 
+      write(6,*)'LDGARD=',LDGARD
+      write(6,*)'ROEHRIG 1' 
       CALL FACADE(CDMCA,ITYPTR,ZSLAPO,ZCLOPO,ZSLOPO,ZCODIL,ITRONC, &
      &   INLATI,INXLON,IDOM,ISUBTR,ZGEOM,KFLEV,PVP00,PVALH,PVBH,LDGARD)
+      write(6,*)'ROEHRIG 2'
       ELSE
         ZVALH(1) = 0.
         ZVALH(2) = 0.
diff --git a/UTIL/Tools/ASCII2FA/src/libxrd.a b/UTIL/Tools/ASCII2FA/src/libxrd.a
deleted file mode 100644
index 4e4a59c..0000000
Binary files a/UTIL/Tools/ASCII2FA/src/libxrd.a and /dev/null differ
diff --git a/UTIL/Tools/LFA/bin/cllangu b/UTIL/Tools/LFA/bin/cllangu
index 9f95061..fb1e1b6 100755
Binary files a/UTIL/Tools/LFA/bin/cllangu and b/UTIL/Tools/LFA/bin/cllangu differ
diff --git a/UTIL/Tools/LFA/bin/lfa2lfa b/UTIL/Tools/LFA/bin/lfa2lfa
index f902433..9ea0865 100755
Binary files a/UTIL/Tools/LFA/bin/lfa2lfa and b/UTIL/Tools/LFA/bin/lfa2lfa differ
diff --git a/UTIL/Tools/LFA/bin/lfa2lfp b/UTIL/Tools/LFA/bin/lfa2lfp
index d2129e6..afc92d1 100755
Binary files a/UTIL/Tools/LFA/bin/lfa2lfp and b/UTIL/Tools/LFA/bin/lfa2lfp differ
diff --git a/UTIL/Tools/LFA/bin/lfa_autodocumentation b/UTIL/Tools/LFA/bin/lfa_autodocumentation
index fa079a0..81a8c39 100755
Binary files a/UTIL/Tools/LFA/bin/lfa_autodocumentation and b/UTIL/Tools/LFA/bin/lfa_autodocumentation differ
diff --git a/UTIL/Tools/LFA/bin/lfa_demo b/UTIL/Tools/LFA/bin/lfa_demo
index 64e0248..512a742 100755
Binary files a/UTIL/Tools/LFA/bin/lfa_demo and b/UTIL/Tools/LFA/bin/lfa_demo differ
diff --git a/UTIL/Tools/LFA/bin/lfac b/UTIL/Tools/LFA/bin/lfac
index cfd4db8..da679d3 100755
Binary files a/UTIL/Tools/LFA/bin/lfac and b/UTIL/Tools/LFA/bin/lfac differ
diff --git a/UTIL/Tools/LFA/bin/lfacre b/UTIL/Tools/LFA/bin/lfacre
index 5a4c669..49371c4 100755
Binary files a/UTIL/Tools/LFA/bin/lfacre and b/UTIL/Tools/LFA/bin/lfacre differ
diff --git a/UTIL/Tools/LFA/bin/lfadiff b/UTIL/Tools/LFA/bin/lfadiff
index ea9c582..1098916 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiff and b/UTIL/Tools/LFA/bin/lfadiff differ
diff --git a/UTIL/Tools/LFA/bin/lfadiffart b/UTIL/Tools/LFA/bin/lfadiffart
index 44ba560..db4bfd8 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiffart and b/UTIL/Tools/LFA/bin/lfadiffart differ
diff --git a/UTIL/Tools/LFA/bin/lfadiffrel b/UTIL/Tools/LFA/bin/lfadiffrel
index e345de1..f6fb680 100755
Binary files a/UTIL/Tools/LFA/bin/lfadiffrel and b/UTIL/Tools/LFA/bin/lfadiffrel differ
diff --git a/UTIL/Tools/LFA/bin/lfafreq b/UTIL/Tools/LFA/bin/lfafreq
index f02ec67..db12761 100755
Binary files a/UTIL/Tools/LFA/bin/lfafreq and b/UTIL/Tools/LFA/bin/lfafreq differ
diff --git a/UTIL/Tools/LFA/bin/lfalaf b/UTIL/Tools/LFA/bin/lfalaf
index c6430df..d688e21 100755
Binary files a/UTIL/Tools/LFA/bin/lfalaf and b/UTIL/Tools/LFA/bin/lfalaf differ
diff --git a/UTIL/Tools/LFA/bin/lfaminm b/UTIL/Tools/LFA/bin/lfaminm
index 57bff37..b54e404 100755
Binary files a/UTIL/Tools/LFA/bin/lfaminm and b/UTIL/Tools/LFA/bin/lfaminm differ
diff --git a/UTIL/Tools/LFA/bin/lfamoy b/UTIL/Tools/LFA/bin/lfamoy
index 3dc0bda..24e2039 100755
Binary files a/UTIL/Tools/LFA/bin/lfamoy and b/UTIL/Tools/LFA/bin/lfamoy differ
diff --git a/UTIL/Tools/LFA/bin/lfareu b/UTIL/Tools/LFA/bin/lfareu
index dfe3cf7..b9ee641 100755
Binary files a/UTIL/Tools/LFA/bin/lfareu and b/UTIL/Tools/LFA/bin/lfareu differ
diff --git a/UTIL/Tools/LFA/bin/lfatest b/UTIL/Tools/LFA/bin/lfatest
index cde8c03..81268f2 100755
Binary files a/UTIL/Tools/LFA/bin/lfatest and b/UTIL/Tools/LFA/bin/lfatest differ
diff --git a/UTIL/Tools/LFA/bin/lfp2lfa b/UTIL/Tools/LFA/bin/lfp2lfa
index bc737bb..b47a98e 100755
Binary files a/UTIL/Tools/LFA/bin/lfp2lfa and b/UTIL/Tools/LFA/bin/lfp2lfa differ
diff --git a/UTIL/install/install_MUSC.py b/UTIL/install/install_MUSC.py
index a1da77f..0749123 100644
--- a/UTIL/install/install_MUSC.py
+++ b/UTIL/install/install_MUSC.py
@@ -144,7 +144,7 @@ def install_SFX(model,case,filecase,repout,cycle,PGD,PREP,config,namref,subcase=
 
       g.close()
 
-      os.system('cdat tmp.py')
+      os.system('python tmp.py')
       os.system('rm -f tmp.py')
     
       if lperf:
@@ -180,7 +180,7 @@ def install_SFX(model,case,filecase,repout,cycle,PGD,PREP,config,namref,subcase=
 
         g.close()
 
-        os.system('cdat tmp.py')
+        os.system('python tmp.py')
         os.system('rm -f tmp.py')
 
         os.system('./prepare_SURFEX.sh')
@@ -305,7 +305,7 @@ def install_Run(model,case,filecase,repout,config,configOut,subcase=None,loverwr
 
       g.close()
 
-      os.system('cdat tmp.py')
+      os.system('python tmp.py')
       os.system('rm -f tmp.py')
 
       if lperf:
@@ -326,7 +326,7 @@ def install_Run(model,case,filecase,repout,config,configOut,subcase=None,loverwr
 
         g.close()
 
-        os.system('cdat tmp.py')
+        os.system('python tmp.py')
         os.system('rm -f tmp.py')
 
         if lperf:
@@ -520,13 +520,13 @@ def install_Atlas(case,repout,config,configAtlas,subcase=None,loverwrite=False,l
 
       g.close()
 
-      os.system('cdat atlas.py')
+      os.system('python atlas.py')
 
     else: 
       print 'Directory already exists:', rep
       if lupdate:
         os.chdir(rep)
-        os.system('cdat atlas.py')
+        os.system('python atlas.py')
       else:
         print 'Nothing is done'
 
diff --git a/UTIL/post_DEPHY/convert2p.so b/UTIL/post_DEPHY/convert2p.so
index eed38ec..20cd20c 100755
Binary files a/UTIL/post_DEPHY/convert2p.so and b/UTIL/post_DEPHY/convert2p.so differ
diff --git a/UTIL/post_DEPHY/convert2z.so b/UTIL/post_DEPHY/convert2z.so
index 690cb49..a432ba5 100755
Binary files a/UTIL/post_DEPHY/convert2z.so and b/UTIL/post_DEPHY/convert2z.so differ
diff --git a/UTIL/post_DEPHY/convertLFA2nc.py b/UTIL/post_DEPHY/convertLFA2nc.py
index a229b45..8bd1f65 100755
--- a/UTIL/post_DEPHY/convertLFA2nc.py
+++ b/UTIL/post_DEPHY/convertLFA2nc.py
@@ -9,44 +9,44 @@ else:
     os.system('rm -f netcdf/*')
 
 os.system('python lfa2nc_part1.py')
-os.system('cdat lfa2nc_part2.py')
+os.system('python lfa2nc_part2.py')
 
 os.system('mv Out_klevel.nc netcdf/')
 
 if config.convertk1h:
-    os.system('cdat convertk_to_1hourly.py')
+    os.system('python convertk_to_1hourly.py')
 
 if config.convertk3h:
     print 'convertk3h not coded yet'
     pass #sys.exit()
-    #os.system('cdat convertk_to_3hourly.py')
+    #os.system('python convertk_to_3hourly.py')
 
 if config.convertkday:
-    os.system('cdat convertk_to_daily.py')
+    os.system('python convertk_to_daily.py')
 
 
 if config.convert2p:
-    os.system('cdat convert2p.py')
+    os.system('python convert2p.py')
     if config.convertp1h:
-        os.system('cdat convertp_to_1hourly.py')
+        os.system('python convertp_to_1hourly.py')
 
     if config.convertp3h:
-        os.system('cdat convertp_to_3hourly.py')
+        os.system('python convertp_to_3hourly.py')
 
     if config.convertpday:
-        os.system('cdat convertp_to_daily.py')
+        os.system('python convertp_to_daily.py')
 
 
 if config.convert2z:
-    os.system('cdat convert2z.py')
+    os.system('python convert2z.py')
     if config.convertz1h:
-        os.system('cdat convertz_to_1hourly.py')
+        os.system('python convertz_to_1hourly.py')
 
     if config.convertz3h:
         print 'convertz3h not coded yet'
         pass #sys.exit()
-        #os.system('cdat convertz_to_3hourly.py')
+        #os.system('python convertz_to_3hourly.py')
 
     if config.convertzday:
-        os.system('cdat convertz_to_daily.py')
+        os.system('python convertz_to_daily.py')
 
diff --git a/UTIL/python/lfa.so b/UTIL/python/lfa.so
index 5ad15d4..fa60fc2 100755
Binary files a/UTIL/python/lfa.so and b/UTIL/python/lfa.so differ
diff --git a/UTIL/python/lfa/makelib.sh b/UTIL/python/lfa/makelib.sh
index 245f06e..6ab2673 100755
--- a/UTIL/python/lfa/makelib.sh
+++ b/UTIL/python/lfa/makelib.sh
@@ -1,5 +1,7 @@
 #!/bin/bash
 
+source activate myuvcdat
+
 DIR0=`pwd`
 
 for ff in cllang caracteres_lfa lfa
@@ -11,7 +13,7 @@ done
 
 gfortran -L$DIR0 -llfa -I$DIR0 -fconvert=big-endian -cpp  -c -fPIC -o famusc.o famusc.f90
 
-/opt/cdat/bin/f2py -I/opt/cdat/include -lgfortran -c famusc.pyf famusc.o liblfa.a
+f2py -lgfortran -c famusc.pyf famusc.o liblfa.a
 
 rm -f *.o *.mod *.a
 
@@ -20,3 +22,5 @@ mv lfa.so ../
 # Test
 
 #python tmp.py
+
+source deactivate myuvcdat
diff --git a/UTIL/python/lfa/makelib.sh.cnrm b/UTIL/python/lfa/makelib.sh.cnrm
deleted file mode 100644
index f08dba5..0000000
--- a/UTIL/python/lfa/makelib.sh.cnrm
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-#/opt/cdat/bin/f2py -m lfa -h famusc.pyf famusc.f90 (comment lfaread* subroutines)
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC cllang.f90
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC caracteres_lfa.f90
-gfortran -I./ -fconvert=big-endian -cpp  -c -fPIC lfa.f90
-ar r liblfa.a *.o
-gfortran -L./ -llfa -I./ -fconvert=big-endian -cpp  -c -fPIC -o famusc.o famusc.f90
-#f2py -L./ -llfa -lm -lgfortran --f77flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --f90flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --fcompiler=gnu95 -c famusc.pyf famusc.o
-/opt/cdat/bin/f2py -I/opt/cdat/include -L./ -llfa -lm -lgfortran --f77flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --f90flags='-L./ -llfa -I./ -fPIC -fconvert=big-endian -cpp' --fcompiler=gnu95 -c famusc.pyf famusc.o
-
-##Ne fonctionne pas...
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC cllang.f90
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC caracteres_lfa.f90
-#pgf90 -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC lfa.f90
-#ar r liblfa.a *.o
-#pgf90 -L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -c -fPIC -o famusc.o famusc.f90
-#/opt/cdat/bin/f2py -L./ -llfa --f77flags='-L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -fPIC' --f90flags='-L./ -llfa -I./ -Mpreprocess -Mextend -Kieee -byteswapio info=inform-Dr4pre2 -fPIC' --fcompiler=pg -c famusc.pyf famusc.o
diff --git a/install_macRR.sh b/install_macRR.sh
new file mode 100755
index 0000000..821e115
--- /dev/null
+++ b/install_macRR.sh
@@ -0,0 +1,133 @@
+#!/bin/sh
+
+set -evx
+
+#####################################################
+# User specific
+
+REP_EMS=$HOME/Tools/EMS
+REP_MUSC=$HOME/MUSC
+
+#####################################################
+
+
+
+DIR0=`pwd`
+
+#####################################################
+# Some tests to avoid overwriting
+
+if [ -d $REP_EMS ]; then
+  echo "REP_EMS="$REP_EMS
+  echo "REP_EMS already exists. Please remove it or modify REP_EMS at the top of install_macRR.sh"
+  exit
+fi
+
+if [ -d $REP_MUSC ]; then
+  echo "REP_MUSC="$REP_MUSC
+  echo "REP_MUSC already exists. Please remove it or modify REP_MUSC at the top of install_macRR.sh"
+  exit
+fi
+
+#####################################################
+# Download and install EMS in REP_EMS
+[ -d $REP_EMS ] || mkdir -p $REP_EMS
+cd $REP_EMS
+git clone https://github.com/romainroehrig/EMS.git .
+git checkout macRR
+
+# Modify your .bash_profile to initialize a few environment variables
+cd ~/
+
+# save profile
+cat .profile > .profile.EMS-saved_$(date +"%Y-%m-%d_at_%H:%M:%S")
+
+# Modify it
+sed -i '' "/^export REP_EMS=/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export REP_EMS=/#&/" .profile
+sed -i '' "/^export REP_MUSC=/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export REP_MUSC=/#&/" .profile
+sed -i '' "/^export PYTHONPATH=.:\$REP_EMS/ s/$/ #commented on $(date)/" .profile
+sed -i '' "s/^export PYTHONPATH=.:\$REP_EMS/#&/" .profile
+
+cat << EOF >> .profile
+
+# Modifications for Environment for MUSC simulations (EMS)
+# included on $(date)
+export REP_EMS=$REP_EMS
+export REP_MUSC=$REP_MUSC
+export PYTHONPATH=.:\$REP_EMS/CASES:\$REP_EMS/UTIL/python:\$REP_EMS/UTIL/install/:\$PYTHONPATH
+EOF
+
+. ~/.profile
+
+# Some compilation if you want
+compile="n"
+
+if [ $compile == "y" ]; then
+
+  # lfa python library
+  cd $REP_EMS/UTIL/python/lfa
+  ./makelib.sh
+
+  # ascii2lfa binary
+  cd $REP_EMS/UTIL/Tools/ASCII2FA/src
+  #cp /Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxrd.local.a libxrd.a
+  #cp /Users/romainroehrig/rootpack/arp603_export.01.MPIGNU640.x/lib/libxla.local.a libxla.a
+  #cp /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libgribex.a libgribex.a
+  #cp /Users/romainroehrig/libraries/auxlibs/GNU/auxlibs/lib/libmpidummy.a libmpidummy.a
+  make all
+  make clean
+
+  # LFA tools
+  cd $REP_EMS//UTIL/Tools/LFA
+  ./install
+
+  # a few python libraries
+  source activate myuvcdat
+
+  cd $REP_EMS/UTIL/Init_Forc/ARPCLIMAT
+  f2py -c interpvertp.F90 -m interpvertp
+  cd $REP_EMS/UTIL/post_DEPHY
+  f2py -c convert2p.F90 -m convert2p
+  f2py -c convert2z.F90 -m convert2z
+
+  source deactivate myuvcdat
+
+fi
+
+#####################################################
+# Prepare what is needed to run MUSC simulations in REP_MUSC
+[ -d $REP_MUSC ] || mkdir -p $REP_MUSC
+cd $REP_MUSC
+cp -r $REP_EMS/Examples/* .
+ln -s $REP_EMS/main/install_ATM_cases.py install_ATM_cases.py
+ln -s $REP_EMS/main/install_SFX_cases.py install_SFX_cases.py
+ln -s $REP_EMS/main/run_MUSC_cases.py run_MUSC_cases.py
+
+for ff in convertLFA2nc.py convertp_to_1hourly.py convertz_to_1hourly.py lfa2nc_part2.py convert2p.py convert2z.py convertk_to_1hourly.py convertp_to_3hourly.py convertz_to_daily.py convert2p.so convert2z.so convertk_to_daily.py convertp_to_daily.py lfa2nc_part1.py
+do
+
+  ln -s $REP_EMS/UTIL/post_DEPHY/$ff $REP_MUSC/post/$ff
+
+done
+
+#####################################################
+# Some Testing
+cd $REP_MUSC
+
+source activate myuvcdat
+
+./install_ATM_cases.py AYOTTE 24SC
+[ -f $REP_MUSC/ATM/ARPCLIMAT/AYOTTE/24SC/initfile_L91 ] || echo "PROBLEM with install_ATM_cases.py"
+
+./install_SFX_cases.py config/config_arp631_CMIP6.py AYOTTE 24SC
+[ -f $REP_MUSC/SURFEX/arp631/CMIP6/AYOTTE/24SC/PGD.lfi ] || echo "PROBLEM with install_SFX_cases.py: PGD"
+[ -f $REP_MUSC/SURFEX/arp631/CMIP6/AYOTTE/24SC/PREP.lfi ] || echo "PROBLEM with install_SFX_cases.py: PREP"
+
+./run_MUSC_cases.py config/config_arp631_CMIP6.py AYOTTE 24SC
+[ -f $REP_MUSC/simulations/arp631/CMIP6/L91_300s/AYOTTE/24SC/Output/netcdf/Out_klevel.nc ] || echo "PROBLEM with run_MUSC_cases.py"
+
+#####################################################
+# Back in directory where installation was launched
+cd $DIR0
diff --git a/main/install_ATM_cases.py b/main/install_ATM_cases.py
index ea11b1d..6c31544 100755
--- a/main/install_ATM_cases.py
+++ b/main/install_ATM_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
diff --git a/main/install_SFX_cases.py b/main/install_SFX_cases.py
index 86cc76b..e145372 100755
--- a/main/install_SFX_cases.py
+++ b/main/install_SFX_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
diff --git a/main/run_MUSC_cases.py b/main/run_MUSC_cases.py
index 594bf8f..5e75635 100755
--- a/main/run_MUSC_cases.py
+++ b/main/run_MUSC_cases.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env cdat
+#!/usr/bin/env python
 # -*- coding:UTF-8 -*-
 
 #
